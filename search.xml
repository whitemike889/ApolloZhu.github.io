<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Stanford Summer Session</title>
    <url>/2019/12/20/stanford-summer-session-summary/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>但总还是感觉，一切仿佛都不是那么真实。</p>
<footer><strong>与 Stanford 的再次初见</strong><cite>2018 年 6 月 24 日</cite></footer></blockquote>
<p>无论过了多久，这句话总是在我的脑中徘徊。我于 2018 年暑期参加了在 Stanford 的 <a href="https://summer.stanford.edu/program/high-school-high-school-summer-college" target="_blank" rel="noopener">High School Summer College</a>，也就是让在校高中生体验一下在 Stanford 上大学感觉的项目。虽然 2018 年夏天参加完就想写总结了的，不过理所当然地咕咕咕了。不过我有一个普通朋友也进了这个项目，所以久违地回味了一下，并特此整理出来供大家参考。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255397-cd9d5f80-22fb-11ea-91f1-e7afd7d59708.jpeg" alt="Stanford High School Summer College" /></p>
<a id="more"></a>
<h2 id="食宿"><a class="markdownIt-Anchor" href="#食宿"></a> 食宿</h2>
<p>我住的是 <a href="https://rde.stanford.edu/studenthousing/florence-moore-hall" target="_blank" rel="noopener">Faisan</a></p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255393-cd04c900-22fb-11ea-8cd0-4278a99115a3.jpeg" alt="Florence Moore" /></p>
<p>或者俗称 Cafaisan</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255394-cd04c900-22fb-11ea-8ae4-2213126e190c.jpeg" alt="Cafison" /></p>
<p>餐厅就在宿舍里面。吃的我觉得还行，形式是自助餐而且花样基本上每天都在换，并且常年提供冰淇淋</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255395-cd04c900-22fb-11ea-8dc6-a3b35eeb9a92.jpeg" alt="午餐" /></p>
<p>房间里和美国其他酒店一样是没有电热水壶的，所以如果有需要的话必须自己带（或者到旁边的超市去买）。具体的布局忘了照了，不过这张应该大概看得出来，有专门的书桌可以学习，床下面有柜子可以放东西，专门的衣柜也有（因为有舞会所以带了西装挂在里面）</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255399-cd9d5f80-22fb-11ea-8960-3498cc77a971.jpeg" alt="夜晚的宿舍房间" /></p>
<p>洗衣机和烘干机在一楼免费用，卫生间每层楼公用但是洗澡间是隔开的。所以除了行李需要自己提上三楼之外，我没有其他的抱怨。</p>
<h2 id="选课"><a class="markdownIt-Anchor" href="#选课"></a> 选课</h2>
<p>除了跟着官方的指示做之外，我被录取之后打电话咨询了一下班上正在 Stanford 学习的同学。2018 年 4 月 16 日和她聊下来，得到的建议总结一下就是：</p>
<ol>
<li>课还是要去上的，因为老师很有可能透露考试会（或者不会）考什么</li>
<li>自行车可以考虑，学校里也有租的地方。不过可能是我太宅了，实际体验下来 Stanford 度假村并不大，好像没什么必要，而且还得防着偷车（虽然没有西雅图那么疯狂就是了，不过我去的前几周学校专门发了邮件提醒大家注意）</li>
<li>如果可以挑的话，看看课程的时间段以及自己的学习习惯。大早上让你起来上数学会不会睡着？你什么时候学习和做作业最高效？</li>
<li>看看怎么参加 research？嘛，好像这方面没有去努力，是我的问题</li>
</ol>
<p>我其实还问了应不应该上 <a href="http://web.stanford.edu/class/cs110/" target="_blank" rel="noopener">CS110</a>。因为在<a href="https://summer.stanford.edu/courses" target="_blank" rel="noopener">所有课程</a>中，这门课理论上是不开放给高中生的。她当时也建议说选 CS106 更稳妥，作业有意思，还能打好 C++ 和其他的基础。相对而言，本来 CS110 就更难一些，暑假因为时间限制还需要把 10 周的内容在 8 周内上完，所以要谨慎选择。那为什么我最后决定了还是要去上呢？</p>
<ol>
<li>一开始我非常老实地选了 CS106 和 ENGR 145 两个给高中生开放的课程。为什么没有选像哲学这样的课程呢？大学申请顾问建议说，既然都是去 Stanford 了，为什么要花那么多钱上他们不是那么好的课呢？我想了想，也是。<img src="https://user-images.githubusercontent.com/10842684/71249681-c5d5bf00-22eb-11ea-8745-9ef0980e342b.png" alt="最初的课表" /></li>
<li>到 Stanford 之后，还是选择去旁听了 CS110。没错，一般来说是可以旁听的，如果不确定的话可以提前和老师打个招呼。一般来说调课有个期限，在那之前决定要不要上就可以了。只不过如果没有选那么课的话会没有 Canvas 的访问权限，结果就是可能拿不到作业和看不了课程回放，这点需要多加注意。</li>
<li>除此之外还可以提前去看看之前学期的课件和习题，试试看自己的水平和兴趣。</li>
<li>真要学不动的话，不要担心，你还有 office hour 和 tutor center。</li>
</ol>
<p>我最终的结论是选择 CS110 和 CS193C 算是学到了比较有用的内容，旁听 CS106B 免得基础太差。<br />
事实证明这选择不算太差，因为我“Be Boundless”的个性最后来到 University of Washington 给换出来的学分完全没有抵掉本校对应的课程。所以如果我当时要真选了 CS106，那可真就花冤枉钱了。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71253078-c3c42e00-22f4-11ea-9c1d-d6ab27ba133b.jpeg" alt="CS110 经典问题" /></p>
<p>不过选两门课真的够了吗？这我不清楚。正好 CS110 期末考试那天是我们老师的生日，在考场外吃蛋糕的时候和同学们聊才知道有的在上 4 或者 5 门课。那一瞬间我的脑中闪过了一个念头：我好像没有尽我所能。</p>
<h2 id="课余生活"><a class="markdownIt-Anchor" href="#课余生活"></a> 课余生活</h2>
<p>这些都只能说是我个人的选择，其实和真正上大学一样，选择权完全在你手中。</p>
<ul>
<li>躺在宿舍里使用某些粉红色的 APP（不推荐，也是我可能最后悔的一部分）。</li>
<li>到就近的美术馆、Hoover Tower、Windhover 和 Stanford Dish 等景点参观。如果有学长学姐带领的话可能更好，可以多交流交流。如果要坐 Magritte 的话，除非颠簸能让你暖和起来，可以考虑多穿一件衣服。</li>
<li>逛 Stanford 的图书馆。如果你也感兴趣的话建议提前去要拍照许可，我没能拍照所以感觉很可惜。另外注意每个图书馆开放的时间，比如有的在周末并不开门。</li>
<li>参加<a href="https://events.stanford.edu/" target="_blank" rel="noopener">活动</a>或者 HSSC 组织的郊游/义务劳动。注意提前查天气并适量增减衣物免得着凉，然后带好包，吃的，钱以及银行卡以备不时之需。</li>
<li>自己出去逛，比如去 <a href="https://githubfieldday.com/" target="_blank" rel="noopener">GitHub Field Day</a> 偶遇苹果 Core Graphics 团队的工程师：</li>
</ul>
<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/kDqzC7RvEXE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<h2 id="这个活动究竟有什么卵用能帮助我进-stanford-university-么"><a class="markdownIt-Anchor" href="#这个活动究竟有什么卵用能帮助我进-stanford-university-么"></a> 这个活动究竟有什么卵用？能帮助我进 Stanford University 么？</h2>
<p>确实有参与 HSSC 的同学最后进 Stanford 的（也有从 waitlist 进 MIT 的），但终究只是少数，因为</p>
<div class="note warning">
            <p>Stanford does not have a preference for students who attend Stanford-specific summer programs, including Summer Session.</p>
          </div>
<p>说句不好听的，这可能更像是各个大学<a href="https://jezebel.com/fancy-college-summer-programs-prey-on-rich-nervous-par-827598912" target="_blank" rel="noopener">用来圈钱</a>的项目，如果可能的话建议大家考虑下其他竞争更激烈的项目，比如 Stanford 的 <a href="https://sumac.spcs.stanford.edu/" target="_blank" rel="noopener">SUMaC</a> 或者 <a href="https://www.zhihu.com/question/41760281/answer/469275389" target="_blank" rel="noopener">PROMYS</a>（不过为什么都是数学呢，hmmm）。或者可以考虑和我成为关系比较近的朋友，毕竟好像和我玩的好的两位都去了 MIT。</p>
<p>不过如果已经上了贼船的话，也请不要灰心。至少可以常去 Office Hour 和讲师/教授搞好关系，让他们正真的了解你然后帮忙写 Letter or Recommendation。不过可能更有价值的是，你手中握着和普通 Stanford 学生几乎一样几乎全部 Stanford 的资源，所以</p>
<div class="note success">
            <p>What is important to Stanford—and, for that matter, many other colleges and universities–is how you learn, grow, and contribute because of these experiences.</p>
          </div>
<p>列个清单，想想自己如果真的大学被 Stanford 录取了之后会干什么？天天学习？我觉得并不。所以看看能不能现在就发邮件给教授说“我今年夏天会来学校，我有没有可能用我某些技能帮助你的研究”？又或者找到湾区的实习？有无限的可能性，限制你的只有你自己（和美国法律）。</p>
<hr />
<h2 id="室友"><a class="markdownIt-Anchor" href="#室友"></a> 室友</h2>
<p>选宿舍的时候会有一个问卷调查你是什么样的人（作息，糟蹋程度等）来基本确保室友之间不会有太大的矛盾。同时还需要写“你希望室友了解你的什么”这样的问题。你完全可以将它当成 Stanford 传统的作文题目 letter to your roommate 来写，不过可惜的是，如果你真的想要让室友知道的话，需要见面的时候自我介绍，或者把写的内容自己打出来放到室友的桌上。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255396-cd9d5f80-22fb-11ea-9f1d-2610ce41326f.jpeg" alt="躺在沙发上的熊" /></p>
<p>我的室友是 <a href="https://www.facebook.com/profile.php?id=100012259323835" target="_blank" rel="noopener">Aaron</a>，兴趣是化学。从开学第一天起就有 pre-lab、注意事项讲解等等。不过他抱怨说 Lab Book 要 $20，但是复写纸实在是太漏了，所以他建议大家把最后的元素周期表垫在纸下面，避免写的内容渗透到后面几页。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71256820-f9224900-22ff-11ea-8549-36b4c49524fd.jpeg" alt="Apolloane" /></p>
<p>第一天我兴致高涨，早上 7 点我把他拉起来转学校。风景还可以，但拍照难度挺高，因为阳光充足导致整个 Stanford 有种被圣光笼罩的感觉。但 Aaron 除了上强度特别高的化学之外还参加了 <a href="https://summer.stanford.edu/program/silicon-valley-innovation-academy" target="_blank" rel="noopener">Silicon Valley Innovation Academy</a>（这个在递交申请的时候可以报名），虽然帮助他认识了很多人（networking 的好机会），但还是比较累人的。所以那天以后，我们谁也没有坚持这么早起过床。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71255398-cd9d5f80-22fb-11ea-8a15-59bcce203e70.jpeg" alt="清晨的校园一角" /></p>
<p>Aaron 在高中还参加了游泳队，所以皮肤晒得比较黑。还记得宿舍之间组织旗帜争夺战，所有的队伍都在输了之后马上离场，我们的旗帜甚至被当作了擦汗的毛巾被裹在脖子上炫耀。是他去拿回了我们的旗帜，并一直观看比赛到了最后。我觉得那可能是真正体育精神的体现吧。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71257293-5a96e780-2301-11ea-981d-809c79585cd5.jpeg" alt="Aaron" /></p>
<p>不过因为他们学校开学比较早，所以他走了之后我就独占了寝室 OwO</p>
<p><img src="https://user-images.githubusercontent.com/10842684/71256821-f9224900-22ff-11ea-8856-0ac77b613921.jpeg" alt="两张拼成了单人床" /></p>
<h2 id="最大的收获是什么"><a class="markdownIt-Anchor" href="#最大的收获是什么"></a> 最大的收获是什么？</h2>
<ul>
<li>和初中三个最好的朋友大家一起默契地把 Kuma（<a href="https://resed.stanford.edu/residences/find-house/otero" target="_blank" rel="noopener">Otero</a> 宿舍管理员的猫）换为了情头<br />
<img src="https://user-images.githubusercontent.com/10842684/71253076-c3c42e00-22f4-11ea-9906-4f05e16a049c.jpeg" alt="Kuma the Cat" /></li>
<li>和在 CS106B 遇到的，现在在 MIT 的好朋友去尝试打孔编程，结果出了个 ELLO WORLD<br />
<img src="https://user-images.githubusercontent.com/10842684/71253080-c45cc480-22f4-11ea-9242-c8dc949f3496.jpeg" alt="ELLO WORLD" /></li>
<li>而且还是因为机器没有把孔打穿的原因（仔细看第一列的数字 8）<br />
<img src="https://user-images.githubusercontent.com/10842684/71253079-c3c42e00-22f4-11ea-8bda-82381a358d16.jpeg" alt="BUG" /></li>
<li>允许我把创意用在奇怪的地方<br />
<img src="https://user-images.githubusercontent.com/10842684/71253077-c3c42e00-22f4-11ea-8c8c-90881566efa1.jpeg" alt="魔改版的灯笼" /></li>
<li>尝试 Stanford 传统 Fountain Hopping
<ul>
<li>摔在池子里全身湿透（录了视频不过怎么可能发出来）</li>
<li>不推荐夜晚独自一人进行</li>
</ul>
</li>
<li>一个虽然不能收邮件但现在还能用的 Stanford 账号</li>
<li>后悔为什么没有早点写总结，其实这么看来我还是有干很多有意思的事情</li>
<li>能够以自己的失败给大家抛砖引玉，在追梦 Stanford 的路上能少走些许弯路。所以如果有什么我需要展开讲讲的地方，no dumb questions here, please let me know.</li>
</ul>
<p><img src="https://user-images.githubusercontent.com/10842684/71257786-9bdbc700-2302-11ea-8d2d-65af5b8492a3.jpeg" alt="前往 Stanford 的道路" /></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>Stanford</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 年的旋律</title>
    <url>/2019/01/04/2018-song-in-review/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>
    <div id="aplayer-xkDumjHZ" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="32317208" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#66ccff"
    ></div>
<p>网易云出了年终总结，虽然刚开始看到 RAM WIRE 的《僕らの手には何もないけど、》这个标题有些陌生，仿佛真的“最近似乎把它遗忘了”。不过怎么可能呢？无论看多少遍都会哭的 MV 目前来说真的只有这么一个啊：</p>
<a id="more"></a>
<iframe width="560" height="315" src="https://www.youtube.com/embed/TXpGWhdwXuo" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
<hr />
<h2 id="统计信息"><a class="markdownIt-Anchor" href="#统计信息"></a> 统计信息</h2>
<ul>
<li>1 月 19 日反复听了以上曲目 31 次</li>
<li>3340 首歌共听了 341 个小时，其中</li>
<li>大部分是在日间听 ACG 曲，虽然有</li>
<li>76 个未眠之夜曾沉浸在音乐海洋之中</li>
<li>585 次歌词提到梦，但又实现了多少？</li>
<li>年度歌手初音被听 127 次却没进前十</li>
</ul>

    <div id="aplayer-zmtztTIW" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="2596478172" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#66ccff"
    ></div>
<h2 id="前十简评"><a class="markdownIt-Anchor" href="#前十简评"></a> 前十简评</h2>
<ul>
<li>对《oyasumi》和《言って。》没什么印象，是代表了我需要通过歌声来增加活力的时候吧。如果是这样的话其实我更想推荐下<a href="https://music.163.com/artist?id=17644" target="_blank" rel="noopener">辻詩音</a></li>
<li>圈9 的《生如逆旅》虽然和《Lemon》是完全不同的歌词，不过同样的具有很强的冲击力。</li>
<li>有的远方真的只能独自前去呢……因此希望能像《「再来一杯」》里那样成长起来</li>
<li>《Weight of the World》和《Sincerely》算是歌单里“神圣”类型，专门有个叫做“Peaceful”的歌单（其实这个名字现在还没有敲定，包含的种类实在太多），属于“工作”时听的音乐（前提是想起来听音乐）</li>
<li>通过 L 君了解到的《I LOVE U》其实才是循环最多的吧，前十里出现了两次……不过究竟什么是爱呢？Miss Evergarden 你来给我分享一下？</li>
</ul>
<p><a href="https://www.bilibili.com/bangumi/media/md8892" target="_blank" style="position:relative;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:16px;margin-bottom:16px;cursor:pointer;border:1px solid #e7eaf1;border-radius:4px;box-shadow: 0 1px 3px 0 rgba(0,34,77,.05);"><img src="http://violet-evergarden.jp/img/special/gallery/kv2.jpg" style="margin:0;border:none;padding:0;-ms-flex-negative:0;flex-shrink:0;width:90px;height:120px;-o-object-fit:cover;object-fit:cover;"><span style="display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:10px 16px;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;"><span style="font-size:18px;font-weight:400;">紫罗兰永恒花园</span><span style="overflow:hidden;font-size:15px;color:#8798ae;text-overflow:ellipsis;word-wrap:normal;white-space:nowrap;">www.bilibili.com<span style="display:inline-block;padding:1px 6px;margin-left:8px;font-size:12px;line-height:normal;color:#8590a6;vertical-align:1px;background-color:#f7f8fa;border-radius:3px;">2018年1月</span></span></span></a></p>
<blockquote>
<p>大家有没有发现除了 Violet 之外，Bougainvillea 也是花？Violet Bougainvillea 也是？</p>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>anime</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 年终总结</title>
    <url>/2018/12/31/2018-year-in-review/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul>
<li>感谢正在阅读这篇文章的你</li>
</ul>
<a id="more"></a>
<ul>
<li>感谢各位 ex 不删之恩</li>
<li>感谢愿意听我胡言乱语的螮蝀和 L 君</li>
<li>感谢 WWDC18 让我和老友相聚，结实新的朋友，以及让我大概对 Scholarship 有了更多的理解</li>
<li>感谢 Stanford 让我体验了下大学生活，让我能有机会参加 <a href="https://youtu.be/kDqzC7RvEXE" target="_blank" rel="noopener">GitHub Field Day</a></li>
<li>感谢 Stanford 最终拒绝了还有待提高的我，感谢 University of Washington 还没录取我就给了个 <a href="mailto:zhuzhiyu@uw.edu">edu 邮箱</a></li>
<li>感谢在 GitHub 上帮我翻译和点星星的大家，以及对 <a href="https://github.com/ApolloZhu/Dynamic-Dark-Mode" target="_blank" rel="noopener">Dynamic Dark Mode</a> 进行报道的各国科技博客</li>
<li>感谢 <a href="https://space.bilibili.com/14767902" target="_blank" rel="noopener">b 站</a>的的 1995 位粉丝们，无论关注的是 CS193P 还是我的<a href="https://www.bilibili.com/read/readlist/rl41739" target="_blank" rel="noopener">《为美好的 Swift 献上祝福》</a></li>
<li>感谢出了 bug 没有天天催着我修，没有对我恶言相向的用户们</li>
<li>感谢永远不会读到这篇文章，却包容了我各种不足的老师和同学们</li>
<li>感谢让 Local Hack Day 顺利举办的 CS Club 成员们</li>
<li>感谢爸妈还没有打断我的腿</li>
</ul>
<h2 id="咕咕咕"><a class="markdownIt-Anchor" href="#咕咕咕"></a> 咕咕咕</h2>
<ul>
<li>文章
<ul>
<li>[ ] WWDC</li>
<li>[ ] Stanford</li>
</ul>
</li>
<li>翻译
<ul>
<li>[ ] CS193P（愚人节前把堆起来的翻译完，要不 iOS 12 完全没希望同步……）</li>
</ul>
</li>
<li>视频
<ul>
<li>[ ] Localization</li>
<li>[ ] 调色板（谁还记得这个远古的坑）</li>
</ul>
</li>
<li>程序
<ul>
<li>[ ] OHS The Center（毕业前还写不出来实在有点……）</li>
<li>[ ] tvOS 的 <a href="https://github.com/SuperMarcus/NineAnimator" target="_blank" rel="noopener">NineAnimator</a></li>
<li>[ ] <a href="https://github.com/ApolloZhu/Apple-Watch-Bilibili" target="_blank" rel="noopener">Apple Watch Bilibili</a></li>
<li>[ ] <a href="https://github.com/ApolloZhu/Augma" target="_blank" rel="noopener">Augma</a>（这个……就慢慢来吧）</li>
</ul>
</li>
<li>学习
<ul>
<li>[ ] Metal（为了更调色板）</li>
<li>[x] ARKit（也算是为了 Augma 吧）</li>
<li>[ ] 日文（到能给自己多条出路的水平）</li>
</ul>
</li>
</ul>
<h3 id="写在最后"><a class="markdownIt-Anchor" href="#写在最后"></a> 写在最后</h3>
<p>祝大家新年快乐🎊（国内和国外这 13 个小时的时差果然还是让人有点不习惯呢）</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC</tag>
        <tag>Stanford</tag>
        <tag>macOS</tag>
        <tag>WWDC18</tag>
        <tag>bilibili</tag>
        <tag>translation</tag>
      </tags>
  </entry>
  <entry>
    <title>自动深色模式</title>
    <url>/2018/10/28/dynamic-dark-mode-cn/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我自己开发的 <a href="https://github.com/ApolloZhu/Dynamic-Dark-Mode" target="_blank" rel="noopener"><strong>自动深色模式</strong></a>（<em>Dynamic Dark Mode</em>）基本进入稳定版本了，特此广而告之。希望大家点个星星，顺便帮着宣传宣传。发现 bug 的话，开 PR 提 issue 都行。如果您还会其他语言的话，也欢迎帮忙翻译。</p>
<p><a href="https://github.com/ApolloZhu/Dynamic-Dark-Mode" target="_blank" rel="noopener"><img src="https://user-images.githubusercontent.com/10842684/54065607-56c22a80-41f1-11e9-95e6-7100e297d591.PNG" alt="自动深色模式示意图" /></a></p>
<a id="more"></a>
<h2 id="开发过程"><a class="markdownIt-Anchor" href="#开发过程"></a> 开发过程</h2>
<p>详情大家可以看 git history，不过我的故事从 WWDC18 说起。</p>
<p>升级了 Mojave 之后发现深色模式竟然不会自动切换，我立马就诞生了写这个程序的想法。每天除了在各种派对里蹭晚饭之外，就是在研究这个。切换深色模式其实就是简单的 AppleScript，我今天在 Apple Store 等着修电脑的时候就背着敲出来了:</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"System Events"</span></span><br><span class="line">	<span class="keyword">tell</span> appearance preferences <span class="keyword">to</span> <span class="keyword">set</span> dark mode <span class="keyword">to</span> <span class="keyword">not</span> dark mode</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br></pre></td></tr></table></figure>
<p>不是还有个功能根据屏幕亮度判断是否该启用深色模式么？一开始我以为获取屏幕亮度是件很简单的事情，结果并没有类似于 <code>UIScreen.main.brightness</code> 这样的 API。于是 WWDC 的 lab 时间我基本就是在不断地尝试/咨询，可惜苹果的工程师也不清楚。最后还是在 StackOverflow 找到个 <a href="https://stackoverflow.com/questions/3239749/programmatically-change-mac-display-brightness" target="_blank" rel="noopener">有点复杂的解决方案</a></p>
<p>当然 Apple Engineer 也没有告诉我怎么收听屏幕亮度变化，只告诉我去研究 private framework。当时我就想看看系统偏好设置是怎么做的，于是磨皮擦痒的我就开始同时用键盘和滑条疯狂地调整屏幕亮度。boom，崩溃，Bug Report 跳出来，告诉我研究方向是 <code>CoreBrightness</code>。天真的我想着，太好了，直接调用现成的就行了。结果水品太差没分析出个名堂，不过发现了它在屏幕变化的时候会在 <code>NSDistributedNotificationCenter</code> 发通知。wow~ ⊙o⊙，问题解决。</p>
<p>前面折腾了这么久，根据日出日落自动定时，我就偷懒直接用了第三方库 <a href="https://github.com/ceeK/Solar" target="_blank" rel="noopener">Solar</a>。不过也有好处，详细了解了各种不同种类的日出日落。实际的定时我也偷了懒，用的是 <a href="https://github.com/jianstm/Schedule" target="_blank" rel="noopener">Schedule</a>。</p>
<p>但是，当我一把沙盒打开，就开始各种扯拐。解决方案也只有两种。当然，你哪种都不能用：</p>
<ol>
<li>把脚本文件放到 <code>FileManager.SearchPathDirectory.applicationScriptsDirectory</code>。有些侥幸上架的 App，比如 <a href="https://itunes.apple.com/app/id1039633667" target="_blank" rel="noopener">Irvue</a>，就是采用的这种方法。这个时候就可以用 <code>NSUserAppleScriptTask</code> 来执行这些脚本文件了。苹果爸爸说，不行，你这逃逸沙盒。</li>
<li>配置 <code>com.apple.security.temporary-exception.apple-events</code> 为目标对象的 bundle id，也是我现在选择的方法——简洁优雅。当然，就算我给了详尽的解释，仍然被算作了 Sandbox Escape。</li>
</ol>
<p>又不是逃逸闭包，你™才是 <code>@escaping</code> 呢。</p>
<h2 id="分发渠道"><a class="markdownIt-Anchor" href="#分发渠道"></a> 分发渠道</h2>
<p>当然，作为一个良民，我还是希望上 Mac App Store 的，所以才有了上面和 Sandbox 的折腾。但是苹果爸爸明显很是不高兴，具体的过程大家还是去看 <a href="https://github.com/ApolloZhu/Dynamic-Dark-Mode/issues/10" target="_blank" rel="noopener">这个记录</a> 吧，我见着伤心。</p>
<p>所以现在的下载方式是：</p>
<ol>
<li>直接从 <a href="https://github.com/ApolloZhu/Dynamic-Dark-Mode/releases" target="_blank" rel="noopener">Release</a> 下载 pkg 或者 zip。推荐 pkg，因为不用手动移到“应用程序”文件夹</li>
<li><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew Cask</a>：<code>brew cask install dynamic-dark-mode</code></li>
<li>之后会考虑加入 Sparkle 来自动更新，不过得等我有空，有空</li>
<li>即使哪天 App Store 被判为垄断（Apple Inc. v. Robert Pepper）的话，也没有希望上架</li>
<li>我要是有机会的话，看看能不能找 Cook 聊聊改 <a href="https://download.developer.apple.com/Documentation/License_Agreements__Apple_Developer_Program/Apple_Developer_Program_License_Agreement_20181019.pdf" target="_blank" rel="noopener">Apple Developer Program License Agreement 3.3.4 ©</a></li>
</ol>
<h2 id="市场分析"><a class="markdownIt-Anchor" href="#市场分析"></a> 市场分析</h2>
<p>因为我自己的宣传工作没有做到位，现在 GitHub 上基本上没有什么星星（你们自己点就行了，但千万别去买啊，要不我会被锤的）。现在比较流行的大概是：</p>
<ul>
<li>
<p><a href="https://github.com/ApolloZhu/Dynamic-Dark-Mode" target="_blank" rel="noopener">Dynamic Dark Mode</a>：人有的时候就是要脸皮厚一点。不过话又说回来，Google 能直接搜到，星星也还是有些，关键还有 <strong>简体中文</strong> 和其他语言的支持。</p>
</li>
<li>
<p><a href="https://nightowl.kramser.xyz/" target="_blank" rel="noopener">NightOwl</a>：可能是营销做得最好的，也是唯一我百度到的产品。<strong>但是</strong>，我并不喜欢 Google Analytics（根据描述，你的信息至少会被发送一次）。</p>
</li>
<li>
<p><a href="https://github.com/HarshilShah/Nocturnal" target="_blank" rel="noopener">Nocturnal</a>：退出 App 的方法很有意思，感觉哪天可以借鉴一下？</p>
</li>
<li>
<p><a href="https://github.com/sindresorhus/dark-mode" target="_blank" rel="noopener">sindresorhus/dark-mode</a>：命令行工具。作者每个 repo 的星星都不少，是个大神……</p>
</li>
<li>
<p><a href="https://github.com/zenangst/Gray" target="_blank" rel="noopener">Gray</a>：在系统使用深色模式的情况下，配置每个 App 是否使用深色模式。</p>
</li>
<li>
<p><a href="https://justgetflux.com/" target="_blank" rel="noopener">Flux</a> 或 <a href="https://github.com/thompsonate/Shifty" target="_blank" rel="noopener">Shifty</a>：夜间模式+深色模式二合一。</p>
</li>
</ul>
<p>有意思的是，每个 App 的实现都有那么些不一样，包括因为星星太少被我忽略的那些。当然，等苹果出了官方版本之后（他们肯定有计划，Mac App Store 一个都不让通过），我们这些第三方也就基本没啥用了。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC</tag>
        <tag>macOS</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>有什么要我帮你带的吗？</title>
    <url>/2018/10/21/do-me-a-favor/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center"><h2 id="没什么要带的就带声问候吧"><a class="markdownIt-Anchor" href="#没什么要带的就带声问候吧"></a> 没什么要带的，就带声问候吧。</h2>
</blockquote>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>culture</tag>
      </tags>
  </entry>
  <entry>
    <title>Stanford 图书馆之 Terman Library</title>
    <url>/2018/07/31/stanford-library-terman/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>坐落在 Stanford Engineering Quad 的图书馆，虽然小，但也有它独特之处。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/43494776-50cb07d8-94e9-11e8-9918-b005e909522b.jpg" alt="八边形" /></p>
<a id="more"></a>
<p>Terman Library 被从 William Gates Computer Science 搬到了 Engineering Quad，明显没有 Green Library 那么宏伟。要找到它，也花了我些功夫。之前 WWDC 的时候有群同学（被我煽动来上 CS193P 结果我却没来）参观的时候发现进不了 Huang Building。我也是如此，CS110 半期考试的前一天组织在这里的地下室复习，徘徊了好几圈，尝试刷卡进入，但都没能成功。第二天参加 Engineering Quad Tour 才跟着向导，从 Huang 凸起八边形留给餐厅的入口成功溜进来，顺着楼梯到二楼图书馆的入口。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/43495747-b3c0887c-94ee-11e8-9fff-4231246091a0.jpg" alt="Terman" /></p>
<p>Terman 图书馆以工程学方面的书籍为主，有计算机，生物，物理，航空航天等各种方面的书籍，不过藏书量因为有限的空间明显少很多，只有左右书架各两排，仅有的几本关于 Cocoa 的书也都是 Objective-C。估计正是如此，下午四点半就会 <em>开始</em> 关门。唯一我觉得还行的，可能是单独分隔出去的阳台吧：</p>
<p><img src="https://user-images.githubusercontent.com/10842684/43494778-514797e4-94e9-11e8-9acf-e59a58faa29e.jpg" alt="阳台望出" /></p>
<p>配有桌椅，感觉这个氛围可以边读书边喝下午茶。室内对着阳台的的沙发也很舒服，可以 <em><del>垫着脚脱了鞋看电视剧摸鱼</del></em> 看着窗外的风景完成作业。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/43494784-51e384d8-94e9-11e8-9808-2050fe9ebef7.jpg" alt="平视" /></p>
<p>比起 Green 来说，借书倒是方便许多，扫一下就可以了，要说烦恼的话，Stanford 没有限制一次可以借多少本书；像我这样拖延症晚期，不知何时才能把借的书都看完……</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>Stanford</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>Stanford 图书馆之 Green Library</title>
    <url>/2018/07/20/stanford-library-green/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>经历了 B 站的一天<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，我认为是时候去 Green Library 借阅那本著名的书——《+449884800s》。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/43034480-08eacc6e-8c92-11e8-887b-844d9b49d7fc.jpeg" alt="之前人少的时候照的 Green Library 和门前的喷泉" /></p>
<a id="more"></a>
<p>小孩们在 Green Library 门口的红色喷泉下嬉水，我绕开积起的水塘，轻轻推门走进了这个神秘的地方。去年的来的时候，因为不是学生，我被冰冷的标示拒之门外，终于今日能来一睹其貌。刷卡过闸，笨拙的姿势暴露了我是初来乍到；一楼的大厅空空荡荡，不知所措的我决定让咨询台的人给我指明方向。</p>
<p>沿着楼梯上了三楼，阳光正好，可惜不能拍照。我径直走向编号所指的书架，但每行书架之间狭窄的间隙却没有灯光照亮。后来才知道书架上有控制灯的开关，但我觉得很有可能不让参观的原因之一就是不够金碧辉煌吧？时间还早，我决定在这一层先转一圈再说。有不少给组队学习用的房间，不过都上了锁，没能一探究竟。书确实不少，但因为阴暗的光线反而给人一种压抑的感觉。转着转着，我迷失了方向；看到自然光透过窗户落在独立学习区域的桌子上，我迫不及待的跳了进去——</p>
<p><img src="https://user-images.githubusercontent.com/10842684/43034483-0935a694-8c92-11e8-9f0f-5207727cfe34.jpeg" alt="Green Library 窗外风景照" /></p>
<p>静静享受午后时光，耳边只有指尖翻动书页的声响。</p>
<p>在下午上课之前我准备再去图书馆其他地方转转。每层都差不多，黑暗中书海波澜不惊。地下一层有个多媒体室，和一条通往图书馆另一侧的通道。装修十分简陋，一开始我差点以为是什么员工专用的停车场。不过走过去之后，在凉爽的地下室里是几张桌子和各种政府记录。拉开通往楼上的门，我感觉像是进了储藏间——很矮的层高，堆满的书架，只有中间一个很小的楼梯。推门回到图书馆正常的一楼，算是松了口气。再走下去，墙上开始出现了各种裱着的地图。尽头是通往 Main Quad 的出口，但是，但是，当我一回头——</p>
<div class="note danger">
            <p>画风突变，宽敞的灰色大理石台阶，一步一步通向亮堂的二楼。圆桌左侧的图书室有两层高，洋溢着温暖的气氛，在书的环绕中的散着几张书桌，可以说是我理想的图书馆了。各位搜索出 Green Library 高大上的图片，多半是这里了。</p>
          </div>
<p>从此回到主楼，还是找问讯台和蔼的大叔问清了出借手续，还书日期正好和我剩下的时间一样，一个月。</p>
<p>不早了，明天（不对已经是今天了）要去水族馆，不能又放别人鸽子。</p>
<!-- thoughtcrime IS death -->
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>今天是 bilibili world 2018 的第一天；这天 bishi 姥爷进了小黑屋；为了响应广电总局号召，b 站的《ISLAND》也因被作为 CCTV 的典型，沉了。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>Stanford</tag>
        <tag>bilibili</tag>
        <tag>anime</tag>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript &quot;Memes&quot; From CS193C</title>
    <url>/2018/07/10/cs193c-memes/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>We’ll be using HTML, CSS, and JavaScript. JavaScript is the programming Language.</p>
<footer><strong>Patrick Young</strong><cite>Lecture 1</cite></footer></blockquote>
<blockquote><p>Because JavaScript is JavaScript, things can be totally wrong but still legal.</p>
<footer><strong>Patrick Young</strong><cite>Lecture 5</cite></footer></blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>Stanford</tag>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>The Past, Present, and Future of Computer Science Education in Virginian High Schools</title>
    <url>/2018/06/11/computer-science-education/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Before we start, let me ask you a question: For the public high schools of Fairfax County in Virginia, approximately what percentage of them do not have any computer science related courses?</p>
<a id="more"></a>
<p>You might guess it would be around 15% or 25%, but what if I told you that <em><strong>half</strong></em> of the FCPS high school students can’t learn programming at school? With the introduction of self-driving automobiles and all the developments in machine learning and artificial intelligence, the availability of these related courses should be front and center. Not only because some students may want to learn how to write those apps, but also the requirement for more and more employees in various sectors to have computer skills.</p>
<p>Therefore, Virginian high schools should prioritize funding for computer science programs of cutting-edge technologies by updating current curriculums, supplementing new courses, and training more competent teachers to best meet the job market demands.</p>
<h2 id="a-sneak-peak-at-the-history"><a class="markdownIt-Anchor" href="#a-sneak-peak-at-the-history"></a> A Sneak Peak at the History</h2>
<p>The first computer was invented in the United States, but do you know what’s more fascinating? The growth of computer-related jobs. According to the report from the Bureau of Labor Statistics of the U.S. Department of Labor, there has been a continuously rising demand for computer scientists, even during the recession period between 2007 and 2009. Not only is it independent of the current economic trends, the job outlook for these fields predicted by the report is very promising. In the upcoming 10 years, there will be 24% more jobs for software developers and 28% more for information security analysts. That is 3 or even 4 times the 7% average increase of all jobs.</p>
<p>So do we not have any CS courses offered at high schools? Well, we do. The AP Computer Science A class regulated by the College Board is one of them. Unlike the other courses designed by high schools, APCSA has been updated several times to reflect the changes in the current trends. Initially, back in 1984, this class teaches students Pascal. Then in 1999, they decided to switch to C++, and later in 2003, they switched to Java, the top language used across all computer programs. However, they did not update the curriculum since 2014 to reflect the major changes in the Java programming languages, and basically, the students are now learning the wrong “facts.” The outdated materials frustrate students and require students to do much more work than they need if they know about the recent changes. It’s like you could get your hands on an iPhone X, but you have to stick with a slow iPhone 6 without even your battery replaced.</p>
<p>Indeed, some of the high schools already have a variety of programming classes offered for students of different levels. For example, Oakton High School, a typical public high schools in Fairfax County, Virginia, teaches Information Systems, Programming, Webpage Development, APCS A and Principles, and the advanced variants for some of these classes. They provide students with many choices, but none of them teach students the new skills that tech companies are looking for.</p>
<p>Let’s look at the web development class. Its textbook teaches students how to use XHTML, which is known for its poor compatibility and had been abandoned a long time ago. The current industrial standard is HTML 5, with much more powerful features and straightforward “grammar.” Concerned, I asked the teacher how the county plans to update the course curriculum. The teacher — Larson — gave me an unexpected answer. They are taking it away sooner rather than later, for they believe students are not interested in it and the class itself is too hard. I think the county doesn’t really understand why the students are not signing up for that class. While the difficulty might be one of the reasons, the main cause is likely that the class really is not sufficient to prepare them for their future jobs.</p>
<p>Even worse, around 50% of the FCPS high schools don’t offer a single computer science class. Sharon Wu is a current member of the Career and Technical Education Advisory Committee. She said, in fact, FCPS has no budget to hire more CS professionals or offer more classes. Even at Thomas Jefferson High School for Science and Technology, one of the top-ranked high schools in Virginia, students are seeking summer programs because “school is too easy and no advanced stuff is taught in class.”</p>
<h2 id="whats-happening-now"><a class="markdownIt-Anchor" href="#whats-happening-now"></a> What’s Happening Now?</h2>
<p>Maybe these issues aren’t important in the first place — students do not realize how important it is for them to be able to use a computer. Many high school students these days are obsessed with smartphones, but at the same time, they don’t know how to use a computer. The school libraries have to teach them how to find the most relevant sources in the databases, the tech office has to help them connect to the school Wi-Fi, and some even need help with using word processing softwares to complete their assignments.That’s because they don’t know what they can do with computers and programming. Students who do know are taking classes on their own to acquire knowledge for brighter futures. These motivated students are willing to do regardless of the consequences, whether it means traveling to a local college on a regular basis or giving up some of their homework time. I do the same, and for me, the motivation came from Masako Wakamiya. She is an 82-year-old Japanese woman who learned programming on her own after retirement. She made several apps to teach people traditional culture and handkerchief making. She proved to me — and the world — that everyone, no matter their gender, age, or race, can master programming. Then could we utilize the skills as our “wings” in daily life, exploring a wider world that we could not have imagined before.</p>
<p>However, we do want to have support from our schools. Students were really excited when Oakton (for example) announced the new Cyber Security elective.</p>
<p><img src="https://user-images.githubusercontent.com/10842684/46906595-f47c2c80-ced3-11e8-984e-5ba26a913e12.jpg" alt="Students trying to penetrate into the classroom." /></p>
<p>The information session was crowded with students of all grade levels. The room couldn’t fit them all, so many just stood outside, trying to grasp any information they could hear. This is an exciting change, but with it comes more problems to solve. Too many students sign up for this class and the teacher, Mr. Larson, will need to balance out his schedule with all other programming classes. Even after taking out the webpage development class, he still needs help from another teacher. Without an increase in funding qualified teachers, some students will need to take their alternative instead.</p>
<h2 id="warningtodo"><a class="markdownIt-Anchor" href="#warningtodo"></a> #warning(TODO)</h2>
<p>We could do nothing, but what we can at least try to resolve these issues?</p>
<p>The most apparent solution is to use up-to-date materials in class. This will not be as easy as it sounds. Textbooks might need to be replaced more frequently than those for other subjects, teachers need to spend more time planning their classes to incorporate the new materials. In case there isn’t a textbook ready for use, teachers can consult other free, but at the same time professional, resources online. For example, the authors of The Swift Programming Language ebook are constantly updating it to demonstrate the new features and replacing examples used in the book with more relevant ones. Is this too hard? Maybe, but the AP US History exam was modified almost immediately after the 2017 AP Exam. If the history teachers can handle the changes, I believe our Computer Science teachers can do the same.</p>
<p><img src="https://user-images.githubusercontent.com/10842684/46906599-f7771d00-ced3-11e8-9712-2995d94ac2d2.png" alt="A map from code.org showing the states that require all high schools to have CS classes." /></p>
<p>Virginia already allows rigorous computer science courses to satisfy core high school graduation requirement and allocates funding specifically to computer science, but we can push this further. The state can make computer science fundamental to K-12 education. Congress’ 2018 budget has dedicated $50 million per year for STEM and the new grant guidelines prioritize funding for computer science in schools. With that and the state standards for computer science education, we can require all schools to teach computer science in Virginia.</p>
<p>If all of our future generations can learn how to use the state-of-the-art technologies, they’ll be able to use programming to</p>
<blockquote class="blockquote-center"><p style="font-size: 1.3em;font-weight:bold">Create a world like no one has seen before.</p>
<p>— <em>Danielle Feinberg, Director of Photography for Lighting at Pixar</em></p>
</blockquote>
<hr />
<h2 id="side-notesreferences"><a class="markdownIt-Anchor" href="#side-notesreferences"></a> Side Notes/References</h2>
<p>Danielle Feinberg and her team use <strong>programming</strong> to generate the astonishing scenes we see in Pixar <strong>movies</strong>, such as the Marigold Bridge in Coco and the Scottish forests in Brave. For more, see WWDC18 lunch session <em>The Art of Science: Bringing Pixar’s Imagined Worlds to Life</em>.</p>
<p><a href="http://Code.org" target="_blank" rel="noopener">Code.org</a> is always trying to expand CS education to more students. Their <a href="https://docs.google.com/document/d/15zBdBbXUA-yEzxEq0VeWAEb9nXuGjmNFWNrYp6UdM8U/edit" target="_blank" rel="noopener">email</a> directed me to a <a href="https://code.org/files/Making_CS_Fundamental.pdf" target="_blank" rel="noopener">solution</a>.</p>
<p>Dr. Wu really helped me a lot, and I’m looking forward to continue working with her. And thanks to Mr. Lau and Mr. Larson of Oakton High School in giving me insights of the difficulties and realities the teachers face, allowing me to analyze the issues from a different perspective.</p>
<p>I highly recommend you to check out the YouTube video “<a href="https://www.youtube.com/watch?v=gUjXiYtOC7Y" target="_blank" rel="noopener">Now Is the Time to Get Your Own Wings</a>” by Wasako Wakamiya. It’s definitely not a story you can hear about every day.</p>
<p>Other information is from the National Science Foundation (College Board), and the US Department of Labor.</p>
<p>Thanks to editor <a href="https://www.uscecc.org/wuzup-team-bio" target="_blank" rel="noopener">Jiachen Sun</a> for revising my <a href="https://medium.com/@Apollonian/the-past-present-and-future-of-cs-education-in-virginia-high-schools-88b892d8c320" target="_blank" rel="noopener">crappy first draft posted on Medium</a>. This polished version is also available through <a href="https://www.uscecc.org/computer-science-education" target="_blank" rel="noopener">Wuz Up!</a>, a multi-cultural group aimed at teaching newcomers about American culture, values, and lifestyle.</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>WWDC</tag>
        <tag>English</tag>
        <tag>WWDC18</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>WWDC18 Day 0</title>
    <url>/2018/06/03/wwdc18-day-0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://user-images.githubusercontent.com/10842684/40917025-ade9f4f2-67b6-11e8-8ca5-ed1556894771.jpg" alt="WWDC18" /></p>
<blockquote>
<p>记于凌晨四点的圣何塞，沉浸在刚得到的 AirPods 的环绕之中。</p>
</blockquote>
<a id="more"></a>
<div class="note success">
            <p>大家其实可以读读 <a href="https://mp.weixin.qq.com/s/l5qEph47Tz2SVVVV9xMEHA" target="_blank" rel="noopener">上海商学院的公众号文章</a>，比我写的有趣多了。</p>
          </div>
<h2 id="check-in"><a class="markdownIt-Anchor" href="#check-in"></a> Check In</h2>
<p>昨天的文章刚改完就迎来了新一天的活动。早上八点，跟着小队从住宿徒步前往会议中心。日光温和，街上也还没什么人，路灯也都挂上了 WWDC18 的牌子。可惜路上的垃圾比较多，卫生环境还有待提高。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917027-ae24573c-67b6-11e8-868d-d53f8ef04c3d.jpg" alt="San Jose McEnery Convention Center" /></p>
<p>到了会场之后开始排队，苹果照样还是进行着各种尴尬的活动来让消磨时间。今年虽然 Yuma 没有特殊关照了，采访的没有他，不过排队过程中英俊的摄影还是跟他谈笑风生。预计的是 9:40 集合前往 secret location，但我们从 8:30 一直排到 9:30 才拿到 badge。</p>
<p>发 badge 时领的还有各种奇怪的胸针（没啥意思就不发了，如果有的话明天，也就是今天 6/4 的会写进去的 ），以及和去年一样的李维斯夹克衫（只不过他们把 17 换成了个 WWDC18 的胸针）。不过我在排队的时候发现了更有意思的东西：</p>
<div class="note primary">
            <h2 id="ar-game-room"><a class="markdownIt-Anchor" href="#ar-game-room"></a> AR Game Room</h2><p>既然需要单独提供个场地来玩 AR 游戏，ARKit 团队的人也“惊讶”的表示他们毫不知情，那多人互动应该是没得跑了吧？</p>
          </div>
<p>出来之后马上去拿了个热的 burrito 和水当早餐，吃到一半本来再想去接杯咖啡的，结果就被拉过去让上车了，前往：</p>
<h2 id="secret-location"><a class="markdownIt-Anchor" href="#secret-location"></a> Secret Location</h2>
<p><img src="https://user-images.githubusercontent.com/10842684/40917028-ae3d1880-67b6-11e8-80df-d6b569400641.jpg" alt="Scholarship Orientation" /></p>
<p>虽然动脑子一想就能猜到是 Apple Park 的 Steve Jobs Theater，但苹果还是喜欢假装地很神秘，毕竟他们的新总部四周绿树环绕，完全看不到里面。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917940-c5dde304-67b9-11e8-951b-b32ace52119b.jpg" alt="Apple Campus" /></p>
<p>大巴车把我们在飞船旁边放下来之后，苹果就让我们在烈日下徒步。路经 Visitor Center 的时候，还强烈推荐之后来逛逛。</p>
<p>结果是去 Café Macs 吃午餐。味道都挺不错的，吃的喝的随便拿，但唯一可惜的是不能拍照。那我就发个菜单给大家看看吧：</p>
<div class="note info">
            <p><strong>主食</strong>：Caprese Salad，Grilled cheese burger with potato wedges，Spring salad，Grilled chicken，Mac and cheese，Margarita pizza<br /><strong>饮料</strong>：普通的水（据说都比外面的水好喝），Simply，Glacéau Vitaminwater，Snapple<br /><strong>甜点</strong>：Brownies 和 Lemon Bars</p>
          </div>
<p>完了之后我们又徒步来到了 Steve Jobs Theater。当然，这里是不让带食物和饮料的。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917029-ae54593c-67b6-11e8-94e9-6cdfe2bbc31c.jpg" alt="Gound Level" /></p>
<p>上面一层视野开阔，能看到总部；设计巧妙，在正中间击掌或跺脚能感受到反射带来的奇特音效。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917024-adb8b31a-67b6-11e8-9f1d-f8c875736e5f.jpg" alt="Undeground" /></p>
<p>走下两侧的台阶，苹果的标志会在身后缓缓出现，正对着的就是 Steve Jobs Theater 的本体。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917030-ae6b7ea0-67b6-11e8-8a95-9a0e62a7a3df.jpg" alt="Steve Jobs Theater, title" /></p>
<p>据说这个名字被重做了 8 遍，为的是追求最完美的字体。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917711-09bb44aa-67b9-11e8-82cd-8f35d5527c0c.jpg" alt="Theater" /></p>
<p>内部是阶梯形的，只不过上面几排我觉得设计的有点太陡了，但整体的音效是很不错的。座位都是沙发，还算舒适，但并没有电源插座。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917709-0985544e-67b9-11e8-9d65-ae0999374544.jpg" alt="Photographer" /></p>
<p>听完讲座之后我们有序的到外面拍了合影，接着蜂拥前去和 Tim Cook 合影，最后大家自己找苹果工程师洽谈。不过今年工程师们并不好辨认，应该是苹果鼓励 scholars 之间也多交流交流吧。</p>
<div class="note success">
            <p>具体的内容比较偏技术，我之后会另写一篇总结。</p>
          </div>
<p>下午四点就让大家往外走了。出门的时候员工邀请我们从树上摘车厘子吃，毕竟加州阳光充足，味道还真不错。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917026-ae0b5638-67b6-11e8-9986-32afad4caf88.jpg" alt="AirPods" /></p>
<p>再往外走，我“惊奇”地发现他们把“滞销”的 AirPods 耳机送给我们当作“one more thing”，回到住宿试了下，效果也真不是吹的，使用方法也很简单（唯一缺点就是据说容易找不到）。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40917023-ad9e0ff6-67b6-11e8-9365-7082454953ac.jpg" alt="Visitor Center, Apple Park Shirts" /></p>
<p>最后呢，还是去游客中心去看了看，买了件 $40 的短袖。</p>
<h2 id="实用技巧"><a class="markdownIt-Anchor" href="#实用技巧"></a> 实用技巧</h2>
<h3 id="和苹果-ceo-合影"><a class="markdownIt-Anchor" href="#和苹果-ceo-合影"></a> 和苹果 CEO 合影</h3>
<p><img src="https://user-images.githubusercontent.com/10842684/40917710-099ffc90-67b9-11e8-85d6-69ae071056d3.jpg" alt="Reality" /></p>
<p>去年照过了，今年就没什么动力去挤了。拍 Scholars 合影的时候大家尽量站到正中间，那会是 Tim Cook 出现的地方。如果不幸离得比较远的话，建议使劲往里面挤。也可以提前判断好他移动的方向，贴着苹果员工站好。注意他一定会选择更隐蔽的消失方式，我今年是误判了——以为他会乘坐电梯，结果电梯旁边有个消防通道……</p>
<h3 id="参加-wwdc-本身"><a class="markdownIt-Anchor" href="#参加-wwdc-本身"></a> 参加 WWDC 本身</h3>
<p>没有必要熬夜排队参加 Keynote，今年厨子点名要把我们安排在前面他看得到的地方。之后的话 Session 和 Lab 中肯定是选择一对一的 Lab，尽可能地带着代码过去聊（相当于一年两次那种免费的技术咨询随便用），当然像我去年一样尬聊也行。周四的 Bash 不知道 Craig 唱不唱歌，现在十分期待。</p>
<h3 id="合照与签名"><a class="markdownIt-Anchor" href="#合照与签名"></a> 合照与签名</h3>
<p>错过了 Orientation 的话真的就是碰运气了。好像 Keynote 结束之后能找到 Tim Cook 合影，但可能性还是未知数。如果 Tim 或者 Craig 签名在 badge 上的话，之后是可以去找前台换的！希望大家不要遇到像去年 Bash 时下雨我又不知道能换的情况。</p>
<div class="note warning">
            <h2 id="未完待续"><a class="markdownIt-Anchor" href="#未完待续"></a> 未完待续</h2><p>接下来的内容，请关注 <a href="/tags/WWDC/">WWDC 系列</a>，我会挣扎着日更。</p>
          </div>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>WWDC</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>去 WWDC18 的路上</title>
    <url>/2018/06/02/wwdc18-day-before/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>考完 SAT，开始了 WWDC18 之行。<a id="more"></a>去年准备日更，结果因为作业没做完放弃了。今年基本做完了，应该没问题了…吧？</p>
<div class="note success">
            <h2 id="tsa-presupsup"><a class="markdownIt-Anchor" href="#tsa-presupsup"></a> TSA Pre✓<sup>®</sup></h2><p>莫名其妙又得到了这个特权：安检排队短，不用脱鞋不用脱外套，电脑和 iPad 也不需要从包里拿出来单独过检。</p>
          </div>
<p>过了安检之后我还在等飞机，群里的各位基本都到了……第一段是 IAD 飞 CLT，很短，电脑刚开机就要关的那种。本来华盛顿这边说是有雷雨的，最后还是天公作美，飞机基本算是准时推出去了。起飞过程十分轻盈，而且虽然 CRJ900 是小飞机，座位仍然很宽敞舒适的（United 你各个方面都多向其他航空公司学学）。</p>
<details>
<summary>飞机上正好没事，我们来回顾一下<a href="https://9to5mac.com/2018/06/02/leaked-macos-10-14-screenshots-show-off-new-dark-mode-apple-news-app-xcode-10" target="_blank" rel="noopener">今年走漏的风声</a>。</summary>
<p>Xcode 在 Mac App Store 的视频预览展示了期待已久的 Dark Mode ٩( ᐛ )و 从工程文件来看，很有可能 iOS 和 macOS 还没有合并 (◐‿◑) Xcode 上面右侧多了个像是录屏一样的按钮，不过具体是干什么的还是个未知数。往下看，Dock 栏里多了一个 News，就算是在 Safari 之外又多了个免费的 RSS 阅读器吧，个人其实并不是很期待。最后，壁纸！看起来像是沙漠，大家可以提前找找有什么适合新系统的名字（别叫 <em>High Desert</em> 就行）。</p>
</details>
<br>
到了夏洛特之后有一个小时的时间。除了临时被收去托运的行李差点忘在廊桥里没取之外，因为觉得时间充裕就没有立刻去排队买晚餐，结果最后冲刺去发现还需要排队等很久。看来我还是太 naïve 了。现在一想，我看来是少吃了一顿——美国飞机上饭点都不会配餐的，一共就给我们发了一包 pretzels 和两杯饮料。在 A32O 上小憩了一会儿，然后起来看机上杂志。西班牙语的那本配图精美，让我都有想要学西班牙语的冲动。另一本 American Way 则是美国社会生活的描述：
<br>
<blockquote><p>There’s no expiration date on a dream.</p>
<footer><strong>Amber Broke</strong><cite>American Way June 2018</cite></footer></blockquote>
<p>希望各位没能被选中的小伙伴们再接再厉，明年还有机会！</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40886484-8bb8d5fc-66ed-11e8-803c-fa3e4c5d598f.png" alt="傍晚" /></p>
<p>读完 <a href="https://google.github.io/swift/" target="_blank" rel="noopener">Google 的 Swift Style Guide</a>，窗外的天空开始泛红。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40886396-ffa03fb6-66eb-11e8-9fd5-4c97a72977f8.jpeg" alt="Scott the Service Dog" /></p>
<p>就在我转身拍摄夕阳的时候，才想起，我身后坐的是一只狗！Scott 是只 Service Dog，很乖，全程都没有叫，偶尔也像我一样扭头欣赏窗外的美景。</p>
<p>抵达圣何塞已经晚上九点了。因为加州规定未成年不能一个人坐 Uber/Lyft，只好依赖还算发达的公交系统。需要先走 20 分钟才能上 VTA，心里还是很害怕的。整个大街上除了偶尔驶过的汽车完全是空荡荡的，不管有没有路灯都觉得骇人。好不容易熬到了车站，</p>
<p><img src="https://user-images.githubusercontent.com/10842684/40886501-d5f11b98-66ed-11e8-89f5-d3c19ec3cb35.png" alt="VTA Light Rail" /></p>
<div class="note danger">
            <h2 id="这次我又没能及时刷卡"><a class="markdownIt-Anchor" href="#这次我又没能及时刷卡"></a> 这次我又没能及时刷卡！</h2><p>上次明明是上车后才刷的！不重新看<a href="https://www.clippercard.com/ClipperWeb/vta/index.do" target="_blank" rel="noopener">使用说明</a>，谁知道轻轨又要去找那个不起眼的机器！还要刷到亮绿灯才行！下车又不需要 tag off 了？！用户体验极差！</p>
          </div>
<p><img src="https://user-images.githubusercontent.com/10842684/40886399-fff15fae-66eb-11e8-815d-c97adbbe7b0a.jpeg" alt="SJSU" /></p>
<p>虽然 push 那个请求停车的条条一点感觉都没有，还是在去年 Scholarship Orientation 的地方顺利下了车，终于算是松了口气。熟练地找回了 San Jose State University 的 Campus Village 2，登记入住，睡觉。</p>
<p>明天（6/3 号，也就是今天）的 Orientation，前所未有地要坐 bus 去“top secret location”。个人感觉是会前往 Steve Jobs Theater 了（≧∇≦）不过在那之前，记者采访是安排在早上八点，在这里恭喜 <a href="https://weibo.com/u/5869573267" target="_blank" rel="noopener">@张国政</a> 同学了！你问我？hmmm…看看 IT 之家之后会不会有报道吧。</p>
<div class="note warning">
            <h2 id="未完待续"><a class="markdownIt-Anchor" href="#未完待续"></a> 未完待续</h2><p>接下来的内容，请关注 <a href="/tags/WWDC/">WWDC 系列</a>，我争取接下来一周日更。</p>
          </div>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>WWDC</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>我去，Mac 打不开了。怎么办？</title>
    <url>/2018/04/26/combat-mac-startup-issues/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Mac 刚开机就黑，根本进不了系统？要简单的话那肯定是预约苹果的 Genius Bar，只要不换零件都是免费的。但在等待的期间，我觉得还可以先尝试抢救一下。</p>
<a id="more"></a>
<h2 id="安全模式"><a class="markdownIt-Anchor" href="#安全模式"></a> <a href="https://support.apple.com/HT201262" target="_blank" rel="noopener">安全模式</a></h2>
<p>开机时按住 <code>shift</code> 键进入安全模式，系统会尝试修复问题，不过这只适用于由于软件导致的问题。</p>
<h2 id="恢复模式"><a class="markdownIt-Anchor" href="#恢复模式"></a> <a href="https://support.apple.com/HT201314" target="_blank" rel="noopener">恢复模式</a></h2>
<p>开机时同时按住 <code>command</code> 和 <code>r</code> 键进入恢复模式。这个时候有 Time Machine 备份那肯定是最好的，直接恢复备份就行了。没有的话可以先尝试<a href="https://support.apple.com/HT201639" target="_blank" rel="noopener">使用磁盘工具修复磁盘</a>。</p>
<p>到了最后是在没有办法的时候，重装系统也是从这里。<em><strong>不过在此之前，请先尝试其他方式，不能放弃治疗。</strong></em></p>
<h2 id="单用户模式"><a class="markdownIt-Anchor" href="#单用户模式"></a> <a href="https://support.apple.com/HT201573" target="_blank" rel="noopener">单用户模式</a></h2>
<p>开机时同时按住 <code>command</code> 和 <code>s</code> 键。你会看到黑底白字开始刷屏，不需要担心，等它停下就好了。接着我们就可以开始用 <a href="https://support.apple.com/HT203176" target="_blank" rel="noopener">fsck</a> 来尝试修复磁盘工具没法修复的问题。输入并回车</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fsck -fy</span><br></pre></td></tr></table></figure>
<p>希望你看到的不是类似于 <code>disk0s2: I/O error</code> 一类的错误信息。但要是不凑巧的话，你还可以再碰碰运气。输入并回车：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fsck_hfs FY /dev/disk0s2</span><br></pre></td></tr></table></figure>
<div class="note warning">
            <h2 id="但还是没修好"><a class="markdownIt-Anchor" href="#但还是没修好"></a> 但还是没修好</h2><p>尝试下其他<a href="https://support.apple.com/HT201255" target="_blank" rel="noopener">可以在开机时用的组合键</a>，仍然不行的话就只有考虑把电脑里还没有备份的文件拷贝出来了。具体操作请参考 <a href="https://apollozhu.github.io/2016/04/10/backup-dead-mac/">这篇文章</a>。</p>
          </div>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Scholar 眼里的 WWDC18</title>
    <url>/2018/04/20/wwdc18-preparation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今年我又侥幸中了奖学金，还送了一年开发者账号免费，有点意外，但合情合理，我觉得还行。可惜仍没有校友/网友能同行，略有些失落。希望各位不要放弃，明年还有机会！</p>
<div class="note success">
            <h2 id="see-you-at-wwdc18"><a class="markdownIt-Anchor" href="#see-you-at-wwdc18"></a> See you at WWDC18.</h2><p>Or, sometime in the future!</p>
          </div>
<a id="more"></a>
<h2 id="住宿62-check-in-69-check-out"><a class="markdownIt-Anchor" href="#住宿62-check-in-69-check-out"></a> 住宿（6/2 check in, 6/9 check out）</h2>
<p>就和会场还是在 McEnery Convention Center 一样，免费住宿仍在 <a href="https://maps.apple.com/?address=300%20Calle%208,%20San%20Lorenzo,%20PR%20%2000754,%20United%20States&amp;auid=6405642249850496317&amp;ll=37.334990,-121.878644&amp;lsp=9902&amp;q=Campus%20Village%202&amp;t=m" target="_blank" rel="noopener">San Jose State University 的 Campus Village 2</a>。房间是双人间，带窗，每人都还有个桌子。嗯，大概是这样的：</p>
<p><img src="https://user-images.githubusercontent.com/10842684/39096302-f37d0c6e-461b-11e8-9544-60bb332aa398.jpg" alt="房间示意图" /></p>
<blockquote>
<p>由 Vince14Genius 拍摄的去年的我</p>
</blockquote>
<p>整栋楼带电梯，一楼有厨房/活动室，每层楼都有个办公区和休闲区。地理位置也不错：每天早上走路到会场要不了多久（官方说 15 分钟），校园里环境也还行，周围吃的也不少。真要说有什么不方便的话，那就是我们未成年人需要有主办方的人陪着，或者家长给个许可让在保持联系的情况下自由活动。</p>
<p>哦，对了，男同胞们请使用 Gender Neutral 的卫生间。</p>
<h2 id="scholarship-orientation63"><a class="markdownIt-Anchor" href="#scholarship-orientation63"></a> Scholarship Orientation（6/3）</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/1rGM92Hr9f8?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
<p>类似于欢迎会的东西，领礼品（去年是 Apple TV）以及它们传授经验——如何才能最高效地利用 WWDC（去 Lab）。然后去年又讲了 Apple Pencil 的内部构造，同步数据传输和屏幕更新，以及为什么 Apple Watch 上会是 3 个圆环，而不是普通的计步器的原因。讲完了之后是合照，合照最后 Tim Cook 会出来，所以大家把照相设备准备好，就别背包了，想办法往中间蹭吧。</p>
<p>那么去年 Tim Cook 在出场之前，他都做了什么呢？有些 scholar 并没有出现在合照里，这又是为什么呢？媒体们呢，它们对于 scholar 们就没什么兴趣么？为什么我就是不写明呢？😏</p>
<h2 id="交通"><a class="markdownIt-Anchor" href="#交通"></a> 交通</h2>
<p>因为要考 SAT，所以得选下午的航班，因此来回程也就选择走 SJC 了，市内公交车也方便。最后照例列出航班：</p>
<table>
<thead>
<tr>
<th>航空公司</th>
<th style="text-align:right">航班号</th>
<th>时间</th>
<th style="text-align:center">中转机场</th>
<th style="text-align:right">第二段航班号</th>
<th>时间</th>
<th style="text-align:right">价格</th>
</tr>
</thead>
<tbody>
<tr>
<td>American(AA)</td>
<td style="text-align:right">5331</td>
<td>15:18-17:00</td>
<td style="text-align:center">CLT</td>
<td style="text-align:right">820</td>
<td>18:25-21:04</td>
<td style="text-align:right">197.30</td>
</tr>
<tr>
<td>United(UA)</td>
<td style="text-align:right">1851</td>
<td>12:45-18:36</td>
<td style="text-align:center">IAH</td>
<td style="text-align:right">2158</td>
<td>20:05-00:08</td>
<td style="text-align:right">228.80+7.00</td>
</tr>
</tbody>
</table>
<blockquote>
<p>让我心里一寒的是，当我在 Google 输入 SJC IAD 之后出来的时间自然就成了六月九号。确实方便，但它是怎么知道的呢？</p>
</blockquote>
<div class="note warning">
            <h2 id="未完待续"><a class="markdownIt-Anchor" href="#未完待续"></a> 未完待续</h2><p>接下来的内容，请关注 <a href="/tags/WWDC/">WWDC 系列</a>。去年作业没做完，今年我争取会议期间日更。</p>
          </div>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>WWDC18 奖学金指北</title>
    <url>/2018/03/16/wwdc18-scholarships-info-cn/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p><a href="https://apollozhu.github.io/2018/03/15/wwdc18-scholarships-info/">English Version Here</a></p>
</blockquote>
<p><a href="https://talk.swift.gg/20" target="_blank" style="position:relative;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:16px;margin-bottom:16px;cursor:pointer;border:1px solid #e7eaf1;border-radius:4px;box-shadow: 0 1px 3px 0 rgba(0,34,77,.05);"><img src="https://talk.swift.gg/img/android-icon-192x192.png" style="margin:0;border:none;padding:0;-ms-flex-negative:0;flex-shrink:0;width:90px;height:90px;-o-object-fit:cover;object-fit:cover;"><span style="display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:10px 16px;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;"><span style="font-size:18px;font-weight:400;">如何（连续两次）获得 WWDC Scholarship<br />
</span><span style="overflow:hidden;font-size:15px;color:#8798ae;text-overflow:ellipsis;word-wrap:normal;white-space:nowrap;">ggtal - 程序员的闲聊节目<span style="display:inline-block;padding:1px 6px;margin-left:8px;font-size:12px;line-height:normal;color:#8590a6;vertical-align:1px;background-color:#f7f8fa;border-radius:3px;">播客</span></span></span></a></p>
<p>大家好，我是朱智语，去年通过 <a href="https://github.com/ApolloZhu/Swifty-Karel/tree/master" target="_blank" rel="noopener">Karel the Robot 的 Playground</a> 侥幸获得了 2017 年 <a href="https://developer.apple.com/wwdc/scholarships/" target="_blank" rel="noopener">WWDC 的奖学金</a>。关于参加 <a href="https://developer.apple.com/wwdc" target="_blank" rel="noopener">WWDC</a> 本身的介绍，特别是对于国内的朋友们，建议去看看 <a href="https://onevcat.com/2016/04/first-wwdc/" target="_blank" rel="noopener">喵神的这篇文章</a>。本文主要是分享下自己的经验，希望能抛砖引玉，避免其他对此感兴趣的在校学生或者 STEM 组织的成员错过这次机会。</p>
<p>这篇文章会有些长，请大家耐心、仔细地阅读。</p>
<a id="more"></a>
<h2 id="简单的介绍"><a class="markdownIt-Anchor" href="#简单的介绍"></a> 简单的介绍</h2>
<p>建议大家仔细阅读 <a href="https://developer.apple.com/wwdc/scholarships/" target="_blank" rel="noopener">官方的描述</a> 以及 <a href="https://developer.apple.com/wwdc/scholarships/terms/WWDC18-Scholarship-Terms-and-Conditions.pdf" target="_blank" rel="noopener">各种条款</a>，但总的来说你需要用 <em><strong>英文</strong></em> 和 Swift <em><strong>独立</strong></em> 编写一个有 <em><strong>创意</strong></em> 和 <em><strong>技术水平</strong></em> 的 Playground。你需要在北京时间 4 月 2 日早上 8 点之前上交，然后苹果就会在 4 月 21 日通知你是否被选中了！</p>
<p>关于在校学生证明，这个官方的说法是当前的课表或者其他证明在读的文档，加上系主任或者校长的联系信息。STEM 组织我不是很熟悉，但官方的说法大概是成员信息加上组织者的联系信息。文档格式要求 PDF、PNG 或者 JPG，而且交中文的文档也是没问题的，所有语言苹果都认。</p>
<h2 id="需要的软件"><a class="markdownIt-Anchor" href="#需要的软件"></a> 需要的软件</h2>
<p>好消息是，你并不需要苹果的付费开发者账号。而且更优秀的是，如果你有幸得到今年的奖学金，你还能免费成为一年的苹果开发者计划成员。</p>
<p>软件的话，如果你有一台 Mac，你需要 <em><strong>从 Mac App Store</strong></em>（还记得 XcodeGhost 么？）<a href="https://itunes.apple.com/app/id497799835" target="_blank" rel="noopener">下载 Xcode</a>；如果你有一台 iPad, 则需要从 App Store 免费下载 <a href="https://itunes.apple.com/app/id908519492" target="_blank" rel="noopener">Swift Playgrounds</a>；如果你只有 Windows 电脑，那么可以尝试使用虚拟机等（百度 Swift 吧有<a href="http://tieba.baidu.com/p/3092530089" target="_blank" rel="noopener">介绍</a>）。</p>
<h2 id="学习-swift"><a class="markdownIt-Anchor" href="#学习-swift"></a> 学习 Swift</h2>
<p>如果你有 iPad 的话，我强烈建议你尝试下 Swift Playgrounds 里的 “学习编程”，这样你就能在学习 Swift 的同时体验一下 Playground 与普通程序的不同之处。</p>
<p>不过还是有必要更系统的学习 Swift。如果看的懂英文的话，建议去 (i)Books 下载 《<a href="https://itunes.apple.com/book/id1002622538" target="_blank" rel="noopener">The Swift Programming Language</a>》；看不懂英文也没问题？，<a href="https://www.cnswift.org/" target="_blank" rel="noopener">这里有中文版</a>。对于有编程基础的同学，只需阅读 A Swift Tour（Swift 概览）应该就可以掌握这门简单的编程语言了；从未接触过编程的话这个章节可以略读，带着问题阅读 Language Guide（Swift 指南）是个不错的选择。</p>
<p>当然，你完全没有必要读 Language Reference（语言参考）和 Revision History（版本修订历史）。</p>
<h2 id="其他要学的"><a class="markdownIt-Anchor" href="#其他要学的"></a> 其他要学的</h2>
<p>开发 2D 平面游戏的话可以使用 <a href="https://developer.apple.com/spritekit/" target="_blank" rel="noopener">SpriteKit</a>，3D 游戏的话有 <a href="https://developer.apple.com/scenekit/" target="_blank" rel="noopener">SceneKit</a>，<a href="https://developer.apple.com/videos/play/wwdc2017/605/" target="_blank" rel="noopener">WWDC17 也有讲在 Swift Playgrounds 里使用 SceneKit</a>，但我觉得你应该已经略有了解，而且知道去哪里找 3D 模型。但其实 <a href="https://developer.apple.com/documentation/uikit" target="_blank" rel="noopener">UIKit</a> 本身已经能满足大部分的需求。这么短的时间肝 <a href="https://www.bilibili.com/video/av16339375" target="_blank" rel="noopener">斯坦福的 CS193p</a> 是来不及了，但官方还有 <a href="https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/" target="_blank" rel="noopener">Start Developing iOS Apps (Swift)</a>。</p>
<p>其实有时间的话，还应该去看看 <a href="https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS" target="_blank" rel="noopener">视图控制器的工作原理</a>，进一步了解 <a href="https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html" target="_blank" rel="noopener">TableView</a>，以及 <a href="https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Introduction/Introduction.html" target="_blank" rel="noopener">iOS 程序开发</a>。</p>
<h2 id="playground"><a class="markdownIt-Anchor" href="#playground"></a> Playground</h2>
<p>Playground 里的文档是支持 <a href="https://developer.apple.com/library/content/documentation/Xcode/Reference/xcode_markup_formatting_ref/" target="_blank" rel="noopener">Markup</a> 的，请避免使用 <code>print</code>，并改用这种方式 + <code>CustomPlaygroundQuickLookable</code>/<code>CustomPlaygroundDisplayConvertible</code> 引导用户。</p>
<h3 id="mac-xcode-和-playground"><a class="markdownIt-Anchor" href="#mac-xcode-和-playground"></a> Mac, Xcode, 和 Playground</h3>
<p>Xcode 里的 Playground 是在 <a href="https://developer.apple.com/videos/play/wwdc2014/408/" target="_blank" rel="noopener">2014 年的 WWDC 上介绍的</a>, 并且在 2015 年引入了上面的注释格式来帮助你 <a href="https://developer.apple.com/videos/play/wwdc2015/405/" target="_blank" rel="noopener">编写更加美观的 Playground</a>。 除了 Xcode 里的模版之外，官方还有一个 <a href="https://developer.apple.com/library/content/samplecode/StarterPlaygroundBook/Introduction/Intro.html" target="_blank" rel="noopener">简单的案例</a> 可供参考。如果你去翻 <a href="https://developer.apple.com/swift/blog/" target="_blank" rel="noopener">Swift 的博客</a> 的话，那里也有些没法编译但还是很有趣的 Playground。</p>
<h3 id="ipad-和-swift-playgrounds"><a class="markdownIt-Anchor" href="#ipad-和-swift-playgrounds"></a> iPad 和 Swift Playgrounds</h3>
<p>然后 <a href="https://developer.apple.com/videos/play/wwdc2016/408/" target="_blank" rel="noopener">2016 年 WWDC</a> 就介绍了 Swift Playgrounds 这个 iPad 上的程序，当然 <a href="https://developer.apple.com/videos/play/wwdc2017/408/" target="_blank" rel="noopener">去年也有更新</a>。相比之下，iPad 上的 Playground 有很多优势，比如 <a href="https://developer.apple.com/library/content/samplecode/TalkingToTheLiveView/Introduction/Intro.html" target="_blank" rel="noopener">特殊的数据传递方法</a>，cut scene（用 HTML 编写的“剧情画面”，引入接下来的内容），封面图和术语表等。详情可以参考 <a href="https://developer.apple.com/library/content/documentation/Xcode/Conceptual/swift_playgrounds_doc_format/" target="_blank" rel="noopener">Playground Book Format Reference</a>。</p>
<h2 id="个人瞎分析"><a class="markdownIt-Anchor" href="#个人瞎分析"></a> 个人瞎分析</h2>
<p>断网离线判定，不能要求账号，以及 3 分钟时限的规则还在，大家请多注意，但今年不知道为啥提到用苹果新科技这一点，只提了加上图片和音效……不过我估计还是会有不少 <a href="https://developer.apple.com/arkit" target="_blank" rel="noopener">增强现实</a>（你看今年宣传图）和 <a href="https://developer.apple.com/coreml" target="_blank" rel="noopener">机器学习</a> 类的 Playground。</p>
<p>不过说实话，即使可以在说明原因和正确使用 License 的情况下使用第三方开源库，但要交的仍然不能算是是普通的程序。这是你自己写的 Playground，作为可交互式的程序，我建议大家还是尽量体现出 Playground 的特点：</p>
<ol>
<li>利用 Playground 的各种特性来引导用户，说明接下来要干什么，能达到什么目标</li>
<li>让用户通过编程来主动 <a href="https://developer.apple.com/videos/play/wwdc2017/416/" target="_blank" rel="noopener">学习新的内容</a></li>
<li>通过有趣的内容激发兴趣，鼓励用户更多地去了解，学习和参与编程</li>
<li>……</li>
</ol>
<p>去年的 Playground，虽然有不少被采用的并不具备以上特征，但并不能否定他们作为有价值的参考对象。代码的话大部分应该都在 <a href="https://github.com/wwdc/2017" target="_blank" rel="noopener">GitHub 上这个项目里</a>，某Tube 上也有个 <a href="https://www.youtube.com/playlist?list=PLl469UE7Uwr0bdon2CvnpxmQs16qu4nkf" target="_blank" rel="noopener">播放列表</a>（虽然不是很正确但还是希望大家想办法研究，包括 <a href="https://www.youtube.com/watch?v=cq_zLMKB-SE" target="_blank" rel="noopener">这个挺不错的</a> 的投稿）。<a href="https://itunes.apple.com/story/id1358780266" target="_blank" rel="noopener">App Store 里的故事</a> 大家也可以去瞧一瞧，看看过去获奖者的经历。</p>
<p>与此同时，我觉得这个和美国申请大学差不多，硬性条件 Playground 达到某种水平之后就完全靠 “Beyond WWDC” 这篇文章来分高下了。不多，500 词的英语写作，请大家感情丰富，有理有据地描述你如何分享你了解的编程知识以及用对 CS 的热情感化大众。建议大家不要无中生有，还是实事求是的好，不过同一件事情描述的角度不同，体现出来的效果自然是不一样的。大家可以把文章拿去让其他人读一读，参考下大家的意见多修改几遍比较好。</p>
<h2 id="最后说几句"><a class="markdownIt-Anchor" href="#最后说几句"></a> 最后说几句</h2>
<p>你问我难不难，那我肯定说难，不过也并不是说就届不到，实现不了。但也不能说就因为难就去抄，你看去年那个 <a href="https://github.com/wwdc/2017/issues/7" target="_blank" rel="noopener">2048</a> 就被拒了吧。耍小聪明也是不行的，比如交两份啊，尝试黑进苹果什么的都是明令禁止的哦！</p>
<p>如果你还有什么其他问题的话，我都会尽快回答，可能的话我也会更新文章的内容。</p>
<p>最后，祝大家能心想事成，也希望我们能相约六月的圣何塞。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>WWDC18 Scholarships Information</title>
    <url>/2018/03/15/wwdc18-scholarships-info/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><details>
<summary>Wait, before we start, what is WWDC?</summary>
<p>I’ll add my description soon, but for now, check out the <a href="https://developer.apple.com/wwdc" target="_blank" rel="noopener">official website</a>.</p>
</details>
<p>Thank you all for being interested in <a href="https://developer.apple.com/wwdc" target="_blank" rel="noopener">Apple’s Worldwide Developer Conference</a> and <a href="https://developer.apple.com/wwdc/scholarships/" target="_blank" rel="noopener">this scholarship opportunity</a>. I hope all of us could go together, to learn, and have fun!</p>
<p>I know this article is a little bit long, but please read through this carefully before you start. If you have any questions, just ask me through messenger, or in the comment area below.</p>
<blockquote>
<p>I’ll be constantly updating this, and the Chinese version is available <a href="https://apollozhu.github.io/2018/03/16/wwdc18-scholarships-info-cn/">here</a>.</p>
</blockquote>
<a id="more"></a>
<h2 id="important-dates"><a class="markdownIt-Anchor" href="#important-dates"></a> Important Dates</h2>
<table>
<thead>
<tr>
<th style="text-align:right">Date</th>
<th>Event</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">April 1, 20:00 EDT</td>
<td>Submission Due</td>
</tr>
<tr>
<td style="text-align:right">April 20</td>
<td>Announce Status</td>
</tr>
<tr>
<td style="text-align:right">June 3-8</td>
<td>Orientation + WWDC!</td>
</tr>
</tbody>
</table>
<h2 id="general-information"><a class="markdownIt-Anchor" href="#general-information"></a> General Information</h2>
<p>Please read the <a href="https://developer.apple.com/wwdc/scholarships/" target="_blank" rel="noopener">description</a> carefully, as well as the <a href="https://developer.apple.com/wwdc/scholarships/terms/WWDC18-Scholarship-Terms-and-Conditions.pdf" target="_blank" rel="noopener">terms and conditions</a>. In summary, you are required to write a Playground – an interactive program – that is creative and technically accomplished.</p>
<h2 id="things-to-get"><a class="markdownIt-Anchor" href="#things-to-get"></a> Things to Get</h2>
<p>You do <em><strong>NOT</strong></em> need a paid Apple Developer Account. Do you know what’s better than that? You’ll get one year of Apple Developer membership if you win!</p>
<p>If you have a Mac, download <a href="https://itunes.apple.com/app/id497799835" target="_blank" rel="noopener">Xcode from Mac App Store</a>, or if you have an iPad, download <a href="https://itunes.apple.com/app/id908519492" target="_blank" rel="noopener">Swift Playgrounds from App Store</a>, or if you have a Windows, get a virtual machine or whatever that works.</p>
<h2 id="learn-swift"><a class="markdownIt-Anchor" href="#learn-swift"></a> Learn Swift</h2>
<p>If you have an iPad, I highly recommend you to go through one of those “Learn to Code” playgrounds to get a general idea about what a legit playground should be like, in addition to the Swift programming language itself.</p>
<p>At the same time, everyone by now should have either an iOS device or a Mac, please open (i)Books and get <em><a href="https://itunes.apple.com/book/id1002622538" target="_blank" rel="noopener">The Swift Programming Language</a></em>. You can always choose to <a href="https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html" target="_blank" rel="noopener">read it online</a> as well.</p>
<p>Most of you are already familiar with Java, so reading just “A Swift Tour” should be adequate for you to understand this simple programming language. For those of you never learned programming before, just scan through that, and chapter 2 (Language Guide) will answer your questions.</p>
<p>You do <em>NOT</em> need to read chapter 3 (Language Reference) and 4 (Revision History).</p>
<h2 id="general-stuff-to-learn"><a class="markdownIt-Anchor" href="#general-stuff-to-learn"></a> General Stuff to Learn</h2>
<h3 id="i-want-to-write-a-2d-game"><a class="markdownIt-Anchor" href="#i-want-to-write-a-2d-game"></a> I Want to Write a 2D game</h3>
<p>You should learn <a href="https://developer.apple.com/spritekit/" target="_blank" rel="noopener">SpriteKit</a>.</p>
<h3 id="i-want-to-write-a-3d-game"><a class="markdownIt-Anchor" href="#i-want-to-write-a-3d-game"></a> I Want to Write a 3D game</h3>
<p>You should learn <a href="https://developer.apple.com/scenekit/" target="_blank" rel="noopener">SceneKit</a>, but I hope you’ve already had some sense of how 3D works and where to get your 3D models. A bonus for you, <a href="https://developer.apple.com/videos/play/wwdc2017/605/" target="_blank" rel="noopener">Apple talked about using SceneKit in the iPad version of Swift Playgrounds</a>.</p>
<h3 id="otherwise"><a class="markdownIt-Anchor" href="#otherwise"></a> Otherwise</h3>
<p>Well, <a href="https://developer.apple.com/documentation/uikit" target="_blank" rel="noopener">UIKit</a> itself can do a lot of stuff. To get started, follow <a href="https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/" target="_blank" rel="noopener">Start Developing iOS Apps (Swift)</a>.</p>
<p>If you have time, you may also want to have a general understanding of how <a href="https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS" target="_blank" rel="noopener">view controllers work</a>, maybe more about <a href="https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html" target="_blank" rel="noopener">table views</a>, or even <a href="https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Introduction/Introduction.html" target="_blank" rel="noopener">iOS Apps in general</a>.</p>
<h2 id="more-about-playground"><a class="markdownIt-Anchor" href="#more-about-playground"></a> More About Playground</h2>
<p>No matter what, you should read the <a href="https://developer.apple.com/library/content/documentation/Xcode/Reference/xcode_markup_formatting_ref/" target="_blank" rel="noopener">Markup Formatting Reference</a>. Your Playground will look a lot better with this in conjunction with <code>CustomPlaygroundQuickLookable</code>/<code>CustomPlaygroundDisplayConvertible</code>.</p>
<h3 id="mac-xcode-and-playground"><a class="markdownIt-Anchor" href="#mac-xcode-and-playground"></a> Mac, Xcode, and Playground</h3>
<p>It was first <a href="https://developer.apple.com/videos/play/wwdc2014/408/" target="_blank" rel="noopener">introduced back in 2014</a>, and later in 2015 you can use the format mentioned above to <a href="https://developer.apple.com/videos/play/wwdc2015/405/" target="_blank" rel="noopener">author rich Playgrounds</a> to better instruct your users. Here is <a href="https://developer.apple.com/library/content/samplecode/StarterPlaygroundBook/Introduction/Intro.html" target="_blank" rel="noopener">a simple Swift Playground Book</a> for you to get started, and you can also find other interesting ones from the <a href="https://developer.apple.com/swift/blog/" target="_blank" rel="noopener">Swift Blog</a>, although many of them would be outdated and require some changes for them to work.</p>
<h3 id="ipad-and-swift-playgrounds"><a class="markdownIt-Anchor" href="#ipad-and-swift-playgrounds"></a> iPad and Swift Playgrounds</h3>
<p>This app is first <a href="https://developer.apple.com/videos/play/wwdc2016/408/" target="_blank" rel="noopener">introduced in 2016</a> and <a href="https://developer.apple.com/videos/play/wwdc2017/408/" target="_blank" rel="noopener">updated again last year</a>. iPad Playground has many features that a normal Xcode Playground doesn’t have – Cut Scenes written in html (a great place to inform your user what’s this chapter about), cover images, vocab lists, etc. To fully utilize those features, please read the <a href="https://developer.apple.com/library/content/documentation/Xcode/Conceptual/swift_playgrounds_doc_format/" target="_blank" rel="noopener">Playground Book Format Reference</a>, and experiment with <a href="https://developer.apple.com/library/content/samplecode/TalkingToTheLiveView/Introduction/Intro.html" target="_blank" rel="noopener">this sample</a> that allows you to send messages to a Swift Playground live view and saving data to its key-value store.</p>
<h2 id="analysis"><a class="markdownIt-Anchor" href="#analysis"></a> Analysis</h2>
<p>Remember that your playground will be judged offline, the program can <em><strong>NOT</strong></em> require an account for sign in, and they’ll only spend 3 minutes in judging it, so think about what you are going to do. Even without thinking I can tell you many people will be doing <a href="https://developer.apple.com/arkit" target="_blank" rel="noopener">augmented reality</a> and <a href="https://developer.apple.com/coreml" target="_blank" rel="noopener">machine learning</a>; you can not imagine how easy it is to implement those fancy but scary stuff with ARKit and Core ML. Well, try to be creative, add some graphics and audios, and incorporate some of Apple’s new technologies (even if they didn’t mention about that)…</p>
<p>For the first time, you are allowed to use open source frameworks (providing that you included their licenses correctly and explained why). Nonetheless, what you are going to submit is not just a normal program. I think these are some reasons why Apple prefers Playground over normal apps, and maybe you want to address some of them:</p>
<ol>
<li>user will be directed about what to do and informed of what is expected</li>
<li>it provide an interactive way for the users to <a href="https://developer.apple.com/videos/play/wwdc2017/416/" target="_blank" rel="noopener">learn things through programming</a></li>
<li>it sparks users’ interest in coding and encourages further participation</li>
<li>…(many more to add)</li>
</ol>
<p>Also, the “Beyond WWDC” essay is very important. You should explain, in 500 words, how you share your coding knowledge and enthusiasm for computer science with others. Spend some time on this and revise it several times.</p>
<p>However, that doesn’t mean the playground itself isn’t important. There were many amazing playgrounds, such as <a href="https://www.youtube.com/watch?v=cq_zLMKB-SE" target="_blank" rel="noopener">this one here</a>, but the quality of the <a href="https://www.youtube.com/playlist?list=PLl469UE7Uwr0bdon2CvnpxmQs16qu4nkf" target="_blank" rel="noopener">other ones</a> varies. So my suggestion is analysis why some of them got accepted and some got rejected, see if you can resonate with <a href="https://itunes.apple.com/story/id1358780266" target="_blank" rel="noopener">former winners</a>, and just try your best.</p>
<p>If you’d ever ask me if it’s hard, I’ll answer yes but <em><strong>DOABLE</strong></em>. Just make sure you don’t copy any others’ code – the <a href="https://github.com/wwdc/2017/issues/7" target="_blank" rel="noopener">2048 playground</a> from <a href="https://github.com/wwdc/2017" target="_blank" rel="noopener">last year’s submissions</a> was <strong>rejected</strong> for this reason.</p>
<blockquote class="blockquote-center"><p>Everything is doable if you try.</p>
<p><strong>Mr. Lau</strong></p>
</blockquote>
<p>Good luck.</p>
<p>– Apollo (a.k.a Zhiyu Zhu, last year’s scholarship winner for submitting <a href="https://github.com/ApolloZhu/Swifty-Karel/tree/master" target="_blank" rel="noopener">Karel the Robot Playground</a>)</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC</tag>
        <tag>English</tag>
        <tag>WWDC18</tag>
      </tags>
  </entry>
  <entry>
    <title>制作 Telegram 表情包</title>
    <url>/2018/02/25/telegram-sticker-border/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>在制作 <a href="https://slow-start.com/#tamate" target="_blank" rel="noopener">百地 たまて</a> 的<a href="https://t.me/addstickers/TamateMomochi" target="_blank" rel="noopener">表情包</a>的时候，才知道 telegram 和微信一样对表情包有要求，512 px 加白边。纵使别人连 psd 文件都给你们了，你们还是照样不遵守规范……所以让我们来看看选中 Layer 后要加些啥 <em><strong>fx</strong></em>：</p>
<p><img src="https://user-images.githubusercontent.com/10842684/36642537-a9badbe4-1a0e-11e8-99f4-200281c3ad24.png" alt="Duang" /></p>
<a id="more"></a>
<h2 id="outer-glow"><a class="markdownIt-Anchor" href="#outer-glow"></a> Outer Glow</h2>
<h3 id="stucture"><a class="markdownIt-Anchor" href="#stucture"></a> Stucture</h3>
<p>Blend Mode: Screen<br />
Opacity: 100%<br />
Noise: 0%<br />
Color: #fcfcfc</p>
<h3 id="elements"><a class="markdownIt-Anchor" href="#elements"></a> Elements</h3>
<p>Technique: Softer<br />
Spread: 89%<br />
Size: 5px</p>
<h3 id="quality"><a class="markdownIt-Anchor" href="#quality"></a> Quality</h3>
<p>Contour: Linear<br />
Anti-aliased: 自行判断<br />
Range: 50%<br />
Jitter: 0%</p>
<h2 id="drop-shadow"><a class="markdownIt-Anchor" href="#drop-shadow"></a> Drop Shadow</h2>
<p>Layer knocks Out Drop Shadow: YES</p>
<h3 id="stucture-2"><a class="markdownIt-Anchor" href="#stucture-2"></a> Stucture</h3>
<p>Blend Mode: Multiply<br />
Color: #000000<br />
Opacity: 25%<br />
Angle: 120<br />
Use Global Light: YES<br />
Distance: 5px<br />
Spread: 0%<br />
Size: 10px</p>
<h3 id="quality-2"><a class="markdownIt-Anchor" href="#quality-2"></a> Quality</h3>
<p>Contour: Linear<br />
Anti-aliased: 自行判断<br />
Noise: 0%</p>
<p><img src="https://user-images.githubusercontent.com/10842684/36642777-3d1d27e0-1a12-11e8-88e1-77aa003d887f.png" alt="Wink" /></p>
<p>你学会了吗？</p>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>一团糟的回锅肉丁！</title>
    <url>/2018/02/24/hash/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不，不，我们要讨论的是 hash，哈希在编程中的运用，毕竟所有的 Java 对象都是 <a href="https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md" target="_blank" rel="noopener"><code>Equatable &amp; Hashable</code></a> 的，而且和 Swift 一样没带上 <a href="https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md#support-for-comparable" target="_blank" rel="noopener"><code>Comparable</code></a> 一起玩。</p>
<a id="more"></a>
<h2 id="查找表和哈希表"><a class="markdownIt-Anchor" href="#查找表和哈希表"></a> 查找表和哈希表</h2>
<p>为了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 搜索而存在的数据类型，无序遍历。Look up table 的数组为了放下所有的值，会浪费很多的空间，而且是各占一个位置。而 hash table 则是把 hashcode 通过一个 hash function 转换为合法的数组索引，更节省空间。不过这也给哈希表带来了最大的问题：collision。</p>
<h2 id="解决冲突碰撞"><a class="markdownIt-Anchor" href="#解决冲突碰撞"></a> 解决冲突（碰撞）</h2>
<p>两个不“相等”的对象被安排到同一个索引的时候，我们就需要考虑如何 resolve collision。</p>
<h3 id="开放定址"><a class="markdownIt-Anchor" href="#开放定址"></a> 开放定址</h3>
<p>Open addressing 就是可以占别人的位置，其中一种占的方式是线性的 linear probing，也就是当前的没了就占下一个空位。但这种方式是有弊端的。一是占的越多，就会产生 filled sequence，一连串都被占了。这种 cluster 就会导致发生冲突的可能性变得更高，于是最后就喜闻乐见地变成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 了。二是得用 soft delete，删除的时候要留个占位的，否则搜索就全乱了，因此占位的对象太多的时候也需要 rehash。</p>
<p>还有一种 quadratic probing，没了就占往后数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>i</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">i^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 的空位。这种方式对 load factor 要求很高，负载不能超过 50%，否则很可能会找不到空位。那就扩容量呗！先不说会降低遍历效率，关键在于 rehash 的时候对数组长度还有要求……目前网络上的描述大多不完善（准确），所以现在正在研究中，要是捣鼓得出结果的话之后会单独讨论。</p>
<h3 id="聚集"><a class="markdownIt-Anchor" href="#聚集"></a> 聚集</h3>
<p>这类方法是把每个空位视为一个 bucket，也就是存放多个值的集合。用二维数组实现会浪费太多空间，不推荐。<code>ArrayList</code> 和 <code>LinkedList</code> 会稍微好些，即使负载大于 100% 的时候性能也不会掉太多。但极端情况下还是会导致查找变成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，所以如果可以比较对象的话，用 BST 能保证 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span> 的搜索。</p>
<h2 id="java-里哈希值的运用"><a class="markdownIt-Anchor" href="#java-里哈希值的运用"></a> Java 里哈希值的运用</h2>
<p>Java 里的 <code>TreeSet</code> 比较坑，因为内部是基于 <code>TreeMap</code> 的二叉搜索树实现的，所以要不得有个 <code>Comparator</code>，要不类型本身得是 <code>Comparable</code>，但是构造器并没有对泛型进行限制，所以不满足条件会直接抛 <code>ClassCastException</code>。</p>
<p>相比之下 <code>HashSet</code> 里的 <code>HashMap</code> 是基于 <code>hashCode()</code> 然后 <code>equals(Object)</code> 进行的判断。记住别只是重载个 <code>equals(this.class)</code>，因为对泛型的类型擦除会导致运行时直接去找 <code>equals(Object)</code>。</p>
<p>顺便提下 <code>Hashtable</code>，和 <code>HashMap</code> 的区别就是 <code>synchornized</code>，不接受 <code>null</code> 值，继承了被抛弃的 <code>Dictionary</code>，总结一下就是没有被钦定。</p>
<h2 id="潜规则"><a class="markdownIt-Anchor" href="#潜规则"></a> 潜规则</h2>
<p>所以为了正常使用这些基于哈希值的数据类型，除了别搞幺蛾子之外，存在着 hashcode contract：</p>
<ul>
<li><code>compareTo</code> 返回 <code>0</code> 时 <code>equals</code> 返回 <code>true</code>，反之亦然</li>
<li>同一个对象在状态未变的情况下，该次程序运行期间哈希值相同</li>
<li>同时 <code>@Override</code> <code>equals</code> 和 <code>hashCode</code>，使“相同”的对象具有相同的哈希值</li>
<li>相同的哈希值并不代表两个对象“相等”</li>
</ul>
<hr />
<p>顺便说一句，《算法图解》（<em>Grokking Algorithms</em>）并没有想象中的那么实用（有趣且全面），不是很推荐。但不论怎么说，<a href="https://github.com/egonSchiele" target="_blank" rel="noopener">作者</a> 的艺术作品还是可以的。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>CENTER 情人节活动</title>
    <url>/2018/02/20/center-valentines/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><details>
<summary>猜猜答案是啥？
<img src="https://user-images.githubusercontent.com/10842684/36642695-801f1d6a-1a11-11e8-969a-1a724081cc1b.jpg" class="" title="Why did the polynomial plant die?">
</summary>
<img src="https://user-images.githubusercontent.com/10842684/36642700-92dd692a-1a11-11e8-8dcc-41ad6e3760ba.jpg" class="" title="Its roots were imaginary">
</details>
<a id="more"></a>
<p>当听到让带 “Valentines” 的时候，我是一脸懵逼的。仔细问了才知道外国小朋友好像在小学的时候，情人节会准备些像这样的小东西送给班上 <em><strong>每</strong></em> 一个人……</p>
<p>上面这个是手写的，但据老师说超市都在打折销售小卡片什么的（毕竟情人节已经过了）。可是我只身一人在家，又没有交通工具……</p>
<p>该准备尽快考驾照了</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>culture</tag>
      </tags>
  </entry>
  <entry>
    <title>Drama</title>
    <url>/2018/02/16/drama/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>原来学钢琴的时候，我有一支录音笔。<a id="more"></a> 它曾经装满了我爸的美国乡村音乐，不过自从我开始学琴之后，就给我用来录制老师弹奏的片段，方便我回家练习。一切本应如此平常。但应该是在六年级的时候吧，一天全体男生被留下来开班会反省，理由是班上几个调皮的同志摸了女生的屁股。这事和我这种“乖孩子”没啥关系，<del style="display: none">也不存在吃醋或者戴绿帽什么的，</del>但当老师说女生很纯洁的时候，我们自然是忿忿不平，约着准备证明这是错误的。过了几天，我带上了我的录音笔，与其说是准备把同学们平时的谈话录下来当作呈堂证供，不如说是拿着好玩，顺便听下曲子而已。然后班主任就找到了我，怀疑我是准备把老师告上教育局…… Excuse me? 还有这种操作？的确是我考虑不周，但还是觉得委屈，哭了一场，但也没给同学提起。</p>
<p>尽管原来经常有人夸我成熟，我倒反而觉得我是单纯。一味追求真实和真理，不明白这些勾心斗角；情商为零，不遵守也不了解潜规则；相信可以不争，甚至避免当权。可以说是个很随和的人了，当然，锅从天上来就另外考虑了。</p>
<p>就比如今天收到封社团指导老师的邮件，说很紧急，让我尽快过去。我课也没上了，请了个假马上飞奔过去。结果是因为星期三的时候借用了另一个数学老师的教室，那老师说我们在维持秩序的时候，<em>毫无风度</em>，针对她和向她请教的学生，让她们闭嘴。哇哦，好大的锅，关键是这诉苦的邮件还顺便抄送了另外两个老师，<strong>说我们不仅没有谢谢她给我们提供了教室</strong>，还这样对待她，<em>心力憔悴，重任在身</em> 的她只好抛下我们。可以理解，因为是这两位老师最后想办法找到了个教室安置我们社团，但同时也意味着不妥善处理这件事情就会导致这两位虽然和我关系还不错的老师之后不再帮助我们。我不敢想象星期四吃午饭的时候这群数学老师到底交谈了什么，也想不清楚该怎么为这件事道歉。毕竟这里再怎么说也是美国，一味道歉只会让事情更糟糕。</p>
<p>仔细回想了下，我不是最早到的，但我到的时候，那老师其实不在；我收拾完教室之后是走的最晚的，但如上面所说，那老师早已经离开了，以至于我以为这就是间给我们用的空教室，毕竟我一开始是拜托隔壁的老师，我走的最后也请隔壁的老师来锁了门，还感谢了他（thank you 肯定说了不下三遍）。我作为一个自认为和没听过「爱」的 Violet Evergarden 差不多的（木头）人，自认为算是仁至义尽了。要是这位老师想要礼物的话，我更希望能直接告诉我们，我们不仅不会拒绝，说不定再加上当天还是情人节，额外的都有。</p>
<p>估计是责任大于委屈，我竟然没哭，一整天就在排查，找人问情况，调查到底发生了什么。 我们社团一直属于人多又有活力的那种，要开始 lecture 的时候不得不吼两句，但我不觉得任何社员，甚至我们学校任何的学生真有如此胆大包天，敢去明目张胆地 diss 老师。到最后也觉得是那个老师累坏了，草木皆兵。虽说可以理解，我们社员的素质确实能够提高，我们引导的方法确实能够更明确；但这锅，绝对背不得。</p>
<p>吃午饭的时候和另一个同学聊起了这件事，他说同学们肯定想都没想过去 shush 任何的老师，同时对 CS Club 被卷入这种 “drama” 深表同情，感觉他话是说到我心坎里去了。像我们这种喜欢和代码打交道的，估计都是因为 code 都是说一就是一，不需要什么阿谀奉承，也没有什么尔虞我诈吧。</p>
<p>也好，现在我也是 “very upset [sic] the way they treated me, …, but I had so much work to do and after what they did, I have to leave”，弹起了积灰的钢琴，追寻一丝平静。</p>
<p>这事情肯定该怎么处理还是怎么处理，该送礼还是要送礼，当然前提是我们不背锅。</p>
<p>唉，不管是春晚，还是 bilibili 的拜年祭，怕是都没机会看了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>culture</tag>
        <tag>management</tag>
      </tags>
  </entry>
  <entry>
    <title>Paradox, 0x00</title>
    <url>/2018/02/01/meaning-of-life/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center"><p>The meaning of life is to find the meaning of life.</p>
</blockquote>
<a id="more"></a>
<div class="note danger">
            <p>error: variable used within its own initial value</p>
          </div>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>philosophy</tag>
      </tags>
  </entry>
  <entry>
    <title>Freedom?</title>
    <url>/2018/01/30/ap-lang-quarter-3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>Any real change implies the breakup of the world as one has always known it, the loss of all that gave one an identity, the end of safety. And at such a moment, unable to see and not daring to imagine what the future will now bring forth, one clings to what one knew, or thought one knew; to what one possessed or dreamed that one possessed. Yet, it is only when a man is able, without bitterness or self-pity, to surrender a dream he has long cherished or a privilege he has long possessed that he is set free—he has set himself free—for higher dreams, for greater privileges.</p>
<footer><strong>James Baldwin</strong><cite><Span Style=font-style:normal>“Faulkner and Desegregation”</span>Nobody Knows My Name</cite></footer></blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>这怎么可能是真的？</title>
    <url>/2018/01/21/swift-a123-equalilty/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> a == <span class="number">1</span> &amp;&amp; a == <span class="number">2</span> &amp;&amp; a == <span class="number">3</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"All three match!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这本来是个 <a href="https://stackoverflow.com/questions/48270127/can-a-1-a-2-a-3-ever-evaluate-to-true" target="_blank" rel="noopener">JavaScript 的面试题</a>，但这并不能阻止<a href="https://twitter.com/twostraws/status/954709346679754755" target="_blank" rel="noopener">我们在推特上研究 Swift 里的解法</a>。</p>
<a id="more"></a>
<blockquote class="twitter-tweet" data-lang="zh-cn"><p lang="en" dir="ltr">All three match – how many ways can you think of to make this true in Swift? You’ll learn by trying 👍 <a href="https://t.co/FTRh2uKhTb" target="_blank" rel="noopener">pic.twitter.com/FTRh2uKhTb</a></p>&mdash; Paul Hudson (@twostraws) <a href="https://twitter.com/twostraws/status/954709346679754755?ref_src=twsrc%5Etfw" target="_blank" rel="noopener">2018年1月20日</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<div class="note warning">
            <p>本文不讨论 Unicode 或藏代码这些方法。</p>
          </div>
<h2 id="计算型变量"><a class="markdownIt-Anchor" href="#计算型变量"></a> 计算型变量</h2>
<p>这可能是大家最容易想到的，只要每次自加一就好了：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> _a = <span class="number">0</span></span><br><span class="line"><span class="keyword">var</span> a: <span class="type">Int</span> &#123;</span><br><span class="line">    _a += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> _a</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="重载运算符"><a class="markdownIt-Anchor" href="#重载运算符"></a> 重载运算符</h2>
<div class="note info">
            <p>参数名并不重要，所以本文采用统一的 <code>lhs</code> 和 <code>rhs</code></p>
          </div>
<p>当然除了改变量之外，改运算符也是一种思路：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> ==<span class="params">(lhs: <span class="keyword">inout</span> Int, rhs: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="comment">// 不加 `inout` 那 `lhs` 就改为 `a`</span></span><br><span class="line">    <span class="keyword">defer</span> &#123; lhs += <span class="number">1</span> &#125; <span class="comment">// `a = 0` 就不用 `defer`</span></span><br><span class="line">    <span class="keyword">return</span> !(lhs != rhs) <span class="comment">// 避免造成递归</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后就出现了更简单粗暴的：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> &amp;&amp;<span class="params">(lhs: Bool, rhs: Bool)</span></span> -&gt; <span class="type">Bool</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line"><span class="comment">// 如果 T 已经是 Equatable，那必须得替换成更准确的类型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> ==&lt;T&gt;<span class="params">(lhs: T, rhs: Int)</span></span> -&gt; <span class="type">Bool</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="遵循新协议"><a class="markdownIt-Anchor" href="#遵循新协议"></a> 遵循新协议</h2>
<p>这个有点反着来的感觉，确实不容易想到。我们可以让某种 <code>Equatable</code> 遵循 <code>ExpressibleByIntegerLiteral</code> 协议，这样 1、2、3 就能被视为和 <code>a</code> 是同一个类型的，我们也就可以欺骗已经存在的 <code>==</code>，让他们被视为相等的：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Foo</span>: <span class="title">ExpressibleByIntegerLiteral</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> bar</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">init</span>(integerLiteral value: <span class="type">Int</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span> = .bar</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者我这个有点重现 C 语系感觉的：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Bool</span>: <span class="title">ExpressibleByIntegerLiteral</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">init</span>(integerLiteral value: <span class="type">Int</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span> = value != <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<p>楼主中途又加了个限制，要求代码同时符合这个运行结果：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> b == <span class="number">1</span> &amp;&amp; b == <span class="number">2</span> &amp;&amp; b == <span class="number">3</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"All three match!"</span>) <span class="comment">// 不执行这一条</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"All three don't match!"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但这只要 <code>a</code> 和 <code>b</code> 不是同一个类型/实现就可以了，没啥影响。而且我们还可以用类似于这样的方法来掩人耳目：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a: <span class="type">Bool</span> = <span class="number">1</span>, b = <span class="number">1</span></span><br><span class="line"><span class="comment">// 上面的 `b` 还是 `Int`</span></span><br></pre></td></tr></table></figure>
<p>如果你还有其他的姿势，不妨在下面，到 <a href="https://h.bilibili.com/1789925" target="_blank" rel="noopener">bilibili</a>，或者去 <a href="https://twitter.com/twostraws/status/954709346679754755" target="_blank" rel="noopener">推特</a> 上回复。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>令人脸扁的 macOS 程序图标替换</title>
    <url>/2017/12/07/mac-app-icon/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>毕竟是亲儿子，用 Swift 实现运行时替换程序图标，是舒服得脸扁；不过用 Java 实现，那可是恼火得脸扁。</p>
<a id="more"></a>
<h2 id="如果你用-swift"><a class="markdownIt-Anchor" href="#如果你用-swift"></a> 如果你用 Swift</h2>
<p>用 Swift 在 macOS 上把图标替换为另一张图片：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">NSApp</span>.applicationIconImage = #imageLiteral(resourceName: <span class="string">"图标的名字.png"</span>)</span><br></pre></td></tr></table></figure>
<p>如果要设置为 <code>NSView</code> 的话，可以用下面的方法：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果有需要可以获得图标的大小：</span></span><br><span class="line"><span class="keyword">let</span> size = <span class="type">NSApp</span>.dockTile.size</span><br><span class="line"><span class="type">NSApp</span>.dockTile.contentView = &lt;#<span class="type">T</span>##作为图标的 <span class="type">NSView</span>##<span class="type">NSView</span>#&gt;</span><br><span class="line"><span class="type">NSApp</span>.dockTile.display()</span><br></pre></td></tr></table></figure>
<div class="note primary">
            <p><code>&lt;##&gt;</code> 是 Xcode 使用的占位符的格式，大家可以尝试下。</p>
          </div>
<h2 id="如果你用-java"><a class="markdownIt-Anchor" href="#如果你用-java"></a> 如果你用 Java</h2>
<p>你可能会说为什么不用 <code>JFrame::setIconImage</code> 或者 <code>add</code> 到 JavaFX 的 <code>Stage.getIcons()</code> 里——naïve。虽然他们不考虑 Mac，但我们为他们着想，在 Java 彻底提出解决方案之前，为了兼容其他平台，我们使用反射实现：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Class NSApplication = Class.forName(<span class="string">"com.apple.eawt.Application"</span>);</span><br><span class="line">    Method sharedApplication = NSApplication.getMethod(<span class="string">"getApplication"</span>);</span><br><span class="line">    Object shared = sharedApplication.invoke(NSApplication);</span><br><span class="line">    Method setApplicationIconImage = NSApplication.getMethod(<span class="string">"setDockIconImage"</span>, java.awt.Image<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    setApplicationIconImage.invoke(shared, <span class="comment">/*作为图标的  Image*/</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Throwable ignored) &#123; &#125;</span><br></pre></td></tr></table></figure>
<p>虽然错的明明是他们，但上面提到的方法在 Java 9 （没事干不要用 Java 9）下还是会被警告的，因为<a href="http://openjdk.java.net/jeps/272" target="_blank" rel="noopener">之后会有解决方案</a>。顺便提一句，虽然因为上面的例子肯定要 try-catch 所以没有必要，但可以这样判断是 Mac 系统：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.getProperty(<span class="string">"os.name"</span>).toLowerCase().contains(<span class="string">"mac"</span>)</span><br></pre></td></tr></table></figure>
<hr />
<p>有哪里写错了记得让我同时更新 <a href="https://www.bilibili.com/read/mobile/99301" target="_blank" rel="noopener">B 站 cv99301</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
  </entry>
  <entry>
    <title>LeetCode - 2. Add Two Numbers</title>
    <url>/2017/11/01/leetcode-add-two-numbers/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>本来说 LeetCode 准备全用 Swift，（这道题正常做法 Swift 也行，详见正确答案），但是想偷懒，这个时候只有靠 python 这种适合大数据的才行，毕竟这道题的本质是把两个数相加。</p>
<a id="more"></a>
<blockquote>
<p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>
<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>
<p>Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br />
Output: 7 -&gt; 0 -&gt; 8</p>
</blockquote>
<p>实际上这就是计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>342</mn><mo>+</mo><mn>465</mn><mo>=</mo><mn>807</mn></mrow><annotation encoding="application/x-tex">342 + 465 = 807</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">4</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">6</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">7</span></span></span></span>，每个数字分别是倒着写的。所以先 <code>toInt</code> 递归把链表转换成整数，然后 <code>toListNode</code> 把整数转回链表。但这种不负责任的写法 Swift 会溢出，于是换了 python。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">toInt = <span class="keyword">lambda</span> l: l <span class="keyword">and</span> toInt(l.next) * <span class="number">10</span> + l.val <span class="keyword">or</span> <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toListNode</span><span class="params">(i)</span>:</span></span><br><span class="line">    base = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> str(i):</span><br><span class="line">        new = ListNode(int(c))</span><br><span class="line">        new.next = base</span><br><span class="line">        base = new</span><br><span class="line">    <span class="keyword">return</span> base</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addTwoNumbers</span><span class="params">(self, l1, l2)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> toListNode(toInt(l1)+toInt(l2))</span><br></pre></td></tr></table></figure>
<p><code>toListNode</code> 里转字符串完全是不得已而为。我一开始（也是 <a href="https://discuss.leetcode.com/topic/14575/python-for-the-win" target="_blank" rel="noopener">StefanPochmann</a>）用的方法是这样的：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toListNode</span><span class="params">(i)</span>:</span></span><br><span class="line">    this = ListNode(i % <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">9</span>:</span><br><span class="line">        this.next = toListNode(i / <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">return</span> this</span><br></pre></td></tr></table></figure>
<p>有些蹊跷的是，在数字够大的时候，会和正确结果有些出入。原因不明，难不成是除法带来的浮点误差？</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>algorithm</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Windows 10 上跑 Swift</title>
    <url>/2017/09/22/swift-on-win-10/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>抛开大多数连 Swift 是什么都没有听说过的人，知道 Swift 的人大多都觉得它只能用于 iOS 开发，其实不然。Swift 在 15 年底就支持了 Windows 和 Android，不过因为编译过程过于复杂，所以没有掀起太大的涟漪；反倒是 2017 年夏天的时候微软宣布把 Ubuntu 搬进 Windows 让 Swift 有了大显身手的机会。</p>
<a id="more"></a>
<h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2>
<p>Windows Subsystem for Linux (WSL) 是这一切的基础，所以我们需要在 Windows 10 上安装 Ubuntu，然后用 bash 安装 Swift 编译器。可惜的是 WSL 并不支持 Swift 的交互式解释器（REPL），尽管如此缺依然要求你有 <strong>版本 1607 及以上 的 64 位 Windows 10</strong>（可以在 <em>设置 &gt; 系统 &gt; 关于</em> 中查看）。</p>
<h2 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h2>
<p>我们先要启用适用于 Linux 的 Windows 子系统。以 <strong>管理员</strong> 身份运行 Powershell，输入以下内容。完成后按 <code>Y</code> 重启电脑。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Enable-WindowsOptionalFeature</span> <span class="literal">-Online</span> <span class="literal">-FeatureName</span> Microsoft<span class="literal">-Windows</span><span class="literal">-Subsystem</span><span class="literal">-Linux</span></span><br></pre></td></tr></table></figure>
<p>或者可以在 <em>控制面板 &gt; 程序 &gt; 启用或关闭 Windows 功能</em> 中，勾选“适用于 Linux 的 Windows 子系统(Beta)”，然后点确定。根据提示重启。</p>
<p>重启以后，启用开发人员模式。以 <strong>管理员</strong> 身份运行 Powershell，输入以下内容：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">reg add <span class="string">"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock"</span> /t REG_DWORD /f /v <span class="string">"AllowDevelopmentWithoutDevLicense"</span> /d <span class="string">"1"</span></span><br></pre></td></tr></table></figure>
<p>或者可以在 <em>设置 &gt; 更新和安全 &gt; 针对开发人员</em> 中，选择 “开发人员模式”</p>
<p>最后安装 Ubuntu，建议用 <strong><em>非</em>管理员</strong> 模式运行 Powershell，输入以下内容。完成安装之后，输入 <code>bash</code> 进入 Ubuntu 系统。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lxrun /install /y</span><br></pre></td></tr></table></figure>
<p>以上方法是懒人配置，如果想自定义，请输入 <code>bash</code>，然后根据提示配置。</p>
<p>最后安装 Swift。为了简化步骤，借鉴了喵神借鉴 Vapor 来的代码，稍微修改后做了个自动安装的脚本。输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(curl -sL https://raw.githubusercontent.com/ApolloZhu/script/master/swift/install/4)</span>"</span></span><br></pre></td></tr></table></figure>
<p>看到“✅ Done”，下一行写着 Swift 版本号的话，那就大功告成了！如果想自定义安装步骤，可以把上面的 <a href="https://github.com/ApolloZhu/script/blob/master/swift/install/4" target="_blank" rel="noopener">bash 脚本</a>稍微改改。</p>
<h2 id="接下来呢"><a class="markdownIt-Anchor" href="#接下来呢"></a> 接下来呢？</h2>
<p>因为不支持 REPL，所以只有写好了程序再编译。怎么才能写程序？ <del>写程序是不可能的，这辈子都不可能写程序的</del> 因为 Ubuntu 是 Windows 的子系统，所以文件是两边都可以访问的，也就是你可以在 Windows 上把程序写好了，再在 Ubuntu 里运行。不过没了 Xcode，你们用什么编辑器就都随意吧。</p>
<p>玩腻了要卸载 Ubuntu？执行命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">lxrun /uninstall /full /y</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<ul>
<li><a href="https://github.com/apple/swift/blob/master/lib/Basic/LangOptions.cpp" target="_blank" rel="noopener">Swift 支持的平台</a></li>
<li><a href="https://msdn.microsoft.com/en-gb/commandline/wsl/install_guide" target="_blank" rel="noopener">WSL 安装</a></li>
<li><a href="https://github.com/Microsoft/BashOnWindows/issues/688" target="_blank" rel="noopener">暂不支持 Swift 交互式解释器</a></li>
<li>本文在 B 站 <a href="https://www.bilibili.com/read/mobile/18127" target="_blank" rel="noopener">cv18127</a></li>
</ul>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>Swift</tag>
      </tags>
  </entry>
  <entry>
    <title>Explosive AP Chemistry Survey</title>
    <url>/2017/08/30/ap-chem-survey/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://user-images.githubusercontent.com/10842684/29992768-89b5b8d2-8f71-11e7-99db-116541df381a.png" alt="Finish the prompt: When I think about AP Chemistry, I am excited about... Explosion! Finish the second prompt: When I think about AP Chemistry, I worry that... It actually explodes." /></p>
<p><a href="http://konosuba.com/" target="_blank" rel="noopener"><img src="https://pa1.narvii.com/6354/bd84d66c323ce1eb9a4612b792c0dbba7b72a8b9_hq.gif" alt="Explosion!" /></a></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>anime</tag>
        <tag>chemistry</tag>
      </tags>
  </entry>
  <entry>
    <title>A 1000 Times</title>
    <url>/2017/08/30/a-1000-times/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>AP Language &amp; Composition 第一节课要求赏析歌词，感觉就像看到了现在/未来的自己。</p>
<blockquote class="blockquote-center"><p>I had a dream that you were mine<br />
I’ve had that dream a thousand times</p>
</blockquote>

    <div id="aplayer-FhakGmuy" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="468738969" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#66ccff"
    ></div>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>music</tag>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>到底放引号里面还是外面？</title>
    <url>/2017/08/28/punctuated-quote/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>暑假上 SAT 的时候老师没有想明白分号到底是放引号内还是外，今天算是找到了一个科学的解释：</p>
<a id="more"></a>
<table>
<thead>
<tr>
<th style="text-align:center">情景</th>
<th style="text-align:center">美式标准</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">引用内容</td>
<td style="text-align:center">双引号</td>
</tr>
<tr>
<td style="text-align:center">在引用内容内引用</td>
<td style="text-align:center">单引号</td>
</tr>
<tr>
<td style="text-align:center">逗号和句号</td>
<td style="text-align:center">总是在引号内</td>
</tr>
<tr>
<td style="text-align:center">其他标点（冒号、分号、问号等）</td>
<td style="text-align:center">如为引用内容则放引号内，否则一律放引号外</td>
</tr>
</tbody>
</table>
<blockquote>
<p>以上节选翻译自：<a href="https://blog.apastyle.org/apastyle/2011/08/punctuating-around-quotation-marks.html" target="_blank" rel="noopener">APA Style Blog: Punctuating Around Quotation Marks</a></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>translation</tag>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>Advanced CS Student Survey</title>
    <url>/2017/08/25/apcsab-survey/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>Dear Advanced APCS students,</p>
<p>In order to provide an excellent learning environment for you in this coming school year, I would like you to help me answer the following questions, be as specific and detailed as possible, so that I can do a better job in terms of fulfilling your needs.  Thank you for your time.</p>
<footer><strong>Mr. Lau</strong></footer></blockquote>
<a id="more"></a>
<h2 id="why-did-you-sign-up-to-take-this-course-be-specific"><a class="markdownIt-Anchor" href="#why-did-you-sign-up-to-take-this-course-be-specific"></a> Why did you sign up to take this course?  Be specific.</h2>
<p>Just interested; to learn.</p>
<h2 id="what-do-you-expect-to-learn-from-this-course-if-you-know-nothing-about-the-curriculum-just-brainstorm-by-yourself-and-tell-me-something-that-you-want-to-learn"><a class="markdownIt-Anchor" href="#what-do-you-expect-to-learn-from-this-course-if-you-know-nothing-about-the-curriculum-just-brainstorm-by-yourself-and-tell-me-something-that-you-want-to-learn"></a> What do you expect to learn from this course?  If you know nothing about the curriculum, just brainstorm by yourself and tell me something that you want to learn.</h2>
<p>Fully understand Big-O notation. Basic algorithms and data structures, and when/why to choose one over another.</p>
<h2 id="what-did-you-do-over-the-summer-that-is-related-to-computing-summer-camp-internship-self-learning-taking-an-online-course-teaching-other-people-please-tell-me-what-you-learned-through-this-experience-be-as-specific-as-possible"><a class="markdownIt-Anchor" href="#what-did-you-do-over-the-summer-that-is-related-to-computing-summer-camp-internship-self-learning-taking-an-online-course-teaching-other-people-please-tell-me-what-you-learned-through-this-experience-be-as-specific-as-possible"></a> What did you do over the summer that is related to computing (summer camp, internship, self-learning, taking an online course, teaching other people)?  Please tell me what you learned through this experience.  Be as specific as possible.</h2>
<p>Mainly translating Stanford’s Developing iOS 10 Apps with Swift; read The Swift Programming Language (Beta). Wrote an app to post the translated subtitle to online video platform, practiced using recursion, HTTP request, async background queue, and Continuous Integration.</p>
<p>Wrote a raffle app in Kotlin (Google’s new programming language for Android, basically Java), refreshed memory of Swing, learned a little about JavaFX.</p>
<p>Read part of the K&amp;R (The C Programming Language).<br />
Watched a short series of basic tutorials about HTML &amp; CSS.<br />
Watched How GitHub uses GitHub series. Learned several git commands.</p>
<h2 id="please-check-those-topics-that-you-know-something-about-tell-me-something-about-each-if-possible"><a class="markdownIt-Anchor" href="#please-check-those-topics-that-you-know-something-about-tell-me-something-about-each-if-possible"></a> Please check those topics that you know something about.  Tell me something about each if possible.</h2>
<ul>
<li>[x] Linked List: Holding a pointer to the previous/next Element. Easier to add/remove, harder to find index.</li>
<li>[x] Recursion: Using itself in the definition of itself. Throws StackOverFlowException.</li>
<li>[ ] Big-O notation</li>
<li>[x] Stack: First (push) In, Last (pop) Out. How I deal with recursive methods.</li>
<li>[x] Queue: FIFO.</li>
<li>[x] Priority Queue: Queue, elements ordered by priority.</li>
<li>[x] Hash Table: AKA Dictionary&lt;K: AnyHashable, V: AnyObject&gt;, mapping Key to Value.</li>
<li>[ ] Heap</li>
<li>[x] Tree: Nodes. May traverse in Pre/In/Post order (if should visit root first).</li>
<li>[x] Binary Search Tree: Each node has max 2 child, with left &lt; this &lt; right, and each child is BST</li>
<li>[x] Graph: (Un)directed edges connecting vertices.</li>
<li>[ ] Depth first search</li>
<li>[ ] Breadth first search</li>
<li>[ ] Quicksort (and basically all other sorting algorithms)</li>
</ul>
<h2 id="your-concerns-about-this-course-be-specific-and-honest-write-as-much-as-necessary"><a class="markdownIt-Anchor" href="#your-concerns-about-this-course-be-specific-and-honest-write-as-much-as-necessary"></a> Your concerns about this course.  Be specific and honest.  Write as much as necessary!</h2>
<p>Big-O notation sounds/is quite confusing, it took me a long time to understand why merge sort is <code>O(nlogn)</code>.</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>「貴方のことが好きです。私と付き合ってください！」</title>
    <url>/2017/08/24/bilibili-kiminonawa/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div class="note success">
            <p>求点赞！请在登陆 B 站账号的浏览器打开：<a href="https://www.bilibili.com/activity/likes/like/10156?oid=2127098" target="_blank" rel="noopener">https://www.bilibili.com/activity/likes/like/10156?oid=2127098</a>，谢谢！</p>
          </div>
<p><img src="https://user-images.githubusercontent.com/10842684/29665442-108631e2-88a2-11e7-9bab-0fb1e88119b3.png" alt="我的告白：二次元是你的，离开的也是你。纵然我接受秒速五厘米的结局，可否让我不忘却你的名字？" /></p>
<a id="more"></a>
<p>话说这次 Bilibili 蹭《你的名字。》这个热点的 <a href="https://www.bilibili.com/blackboard/topic/activity-yourname1708.html" target="_blank" rel="noopener">活动</a> 好像慢了一拍吧……</p>
<blockquote>
<p>标题大意为“我很喜欢你，请和我交往吧！”，摘自：</p>
</blockquote>
<p><a href="https://www.zhihu.com/publications/book/19552101" target="_blank" style="position:relative;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:16px;margin-bottom:16px;cursor:pointer;border:1px solid #e7eaf1;border-radius:4px;box-shadow: 0 1px 3px 0 rgba(0,34,77,.05);"><img src="https://pic2.zhimg.com/c0295ae7b42a2396a81f7f18cfc788e5_200x0.jpg" style="border:none;padding:0;-ms-flex-negative:0;flex-shrink:0;width:90px;height: 90px;-o-object-fit:cover;object-fit:cover;"><span style="display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:10px 16px;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;"><span style="font-size:18px;font-weight:400;">《日本有意思》作者：Nina Rong</span><span style="overflow:hidden;font-size:15px;color:#8798ae;text-overflow:ellipsis;word-wrap:normal;white-space:nowrap;">www.zhihu.com<span style="display:inline-block;padding:1px 6px;margin-left:8px;font-size:12px;line-height:normal;color:#8590a6;vertical-align:1px;background-color:#f7f8fa;border-radius:3px;">电子书</span></span></span></a></p>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>anime</tag>
        <tag>zhihu</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub&#39;s Swift Style Guide</title>
    <url>/2017/08/23/github-swift-style-guide-irony/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://zhuanlan.zhihu.com/p/28767790" target="_blank" rel="noopener">中文版本</a></p>
<p>When I was cleaning up my GitHub repos and stars, I found <a href="https://github.com/github/swift-style-guide" target="_blank" rel="noopener">GitHub’s style guide for Swift</a>, and I find this 2nd most starred style guide quite amusing.</p>
<a id="more"></a>
<p>Despite the fact that Xcode defaults to using 4 spaces for indentation (and we can clearly see the impact by checking <a href="https://ukupat.github.io/tabs-or-spaces/" target="_blank" rel="noopener">tabs-or-spaces</a>), the style guide suggests using tabs instead. I’m totally fine with that, but I can easily tell there are some disagreements among the contributors:</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myGreatProperty: <span class="type">Int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">subscript</span>(index: <span class="type">Int</span>) -&gt; <span class="type">T</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> objects[index]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>But there’s more. For now (2017 Auguest 23), there are three <a href="https://github.com/github?language=swift" target="_blank" rel="noopener">Swift repos</a> under GitHub’s <a href="https://github.com/github" target="_blank" rel="noopener">main account</a> – one source, two forks. Well, then let’s focus on <a href="https://github.com/github/SoftU2F" target="_blank" rel="noopener">SoftU2F</a>, the ONLY Swift repository GitHub actually owns. Isn’t it natural for me to expect this repo to follow GitHub’s own style guide? But ironically, even SoftU2F is <em><strong>NOT</strong></em> doing that!</p>
<p><img src="https://octodex.github.com/images/front-end-conftocat.png" alt="The Front-End Conftocat on GitHub Octoex" /></p>
<p>In conclusion, seems that GitHub is not interested in styling their Swift code, and thus the GitHub community (or at least the 4k stargazers) has no actual intention to follow GitHub’s style guide, too.</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>English</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>CUL8TR, Ben</title>
    <url>/2017/08/21/cul8tr-ben/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>摩尔门教的同学 <a href="https://github.com/bencullenn" target="_blank" rel="noopener">Ben Cullen</a> 高中毕业了，需要去服务两年再去考上的大学，所以昨天下午在家举行 Farewell Open House。</p>
<a id="more"></a>
<p>虽然是同校，但我是在 <a href="https://hacktj.org/" target="_blank" rel="noopener">HackTJ</a> 上才遇到他的。当时我们组一直在纠结做什么，最后定下点子之后也是在摸鱼，略有些无聊，我一个人出去溜达一圈。转悠的时候发现社长所在的组用的是 Swift，于是我就这么中途“叛变”了。当时时间紧，做的 <a href="https://github.com/bencullenn/HackYourHealthHackTJ" target="_blank" rel="noopener">HackYourHealth</a> 只能说是差点得奖（评奖前又把我们叫过去审了一遍），不过借此机会认识了 Ben，之后偶尔有些交流。</p>
<p>因为各种原因这是我第一次去同学聚会，很多规矩不懂。大家就吃吃喝喝，聚在一起闲聊，但是要穿正装？幸好我平时穿衣服都还比较正式，不知道蒙混过去没有（机智的我也习惯性地把运动鞋脱了）。</p>
<p>不过收获也不少。了解到 Ben 的父亲在 Washington Post 主要负责手机客户端，但是偏好 Python，偶尔应公司要求用 Go。还了解到 Ben 暑假在某游戏公司带薪实习，就顺便把我介绍给了来送行的老板（高中找 intern 真的是很头疼的事情，这还真帮我省了不少功夫）。</p>
<p>虽然 Ben 收到了我给他的 WWDC 胸针，可是他的 Macbook Air 还是被同学打倒的果汁给续了…我也就不追究他妹妹“趁火打劫”走另一个胸针的事了吧。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>culture</tag>
        <tag>religion</tag>
      </tags>
  </entry>
  <entry>
    <title>CS193P 第五集神翻译</title>
    <url>/2017/08/20/cs193p-ep5-funny-translations/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>翻译斯坦福 CS193P (Developing iOS 10 Apps with Swift) 的时候脑子一热留了个神翻译：<a id="more"></a><a href="https://github.com/ApolloZhu/Developing-iOS-10-Apps-with-Swift/blob/d1bb7f08ef2546f357f6813d3442758e46420cda/subtitles/5.%20Gestures%20and%20Multiple%20MVCs.srt#L1330" target="_blank" rel="noopener">第五集十三分五十秒</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">274</span><br><span class="line">00:13:50,130 --&gt; 00:13:51,862</span><br><span class="line">Bingo!</span><br><span class="line">赢了呢！（千岁梗）&lt;##&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/10842684/29495877-f262acea-8595-11e7-8e81-82e1e06d9835.png" alt="胜ったな、ガハハ！" /></p>
<p>差点忘了 <a href="https://github.com/ApolloZhu/Developing-iOS-10-Apps-with-Swift/blob/d1bb7f08ef2546f357f6813d3442758e46420cda/subtitles/5.%20Gestures%20and%20Multiple%20MVCs.srt#L1640" target="_blank" rel="noopener">第五集十六分二十七秒</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">336</span><br><span class="line">00:16:27,853 --&gt; 00:16:30,554</span><br><span class="line">One is you have to ask a UIView, please start</span><br><span class="line">第一步是告诉 UIView 请开始你的表演&lt;##&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/10842684/29495970-0fa8aca4-8597-11e7-856b-997e3f53c68d.jpg" alt="李达康：请开始你的表演" /></p>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>Stanford</tag>
        <tag>anime</tag>
        <tag>translation</tag>
      </tags>
  </entry>
  <entry>
    <title>那些值得一看的 WWDC 视频（持续更新）</title>
    <url>/2017/08/16/wwdc-videos-worth-watching/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>为了避免违反苹果的条款，把所有搬运的视频自己删了（之前已经删了一批），免得被苹果工作人员催着删（比如某人录制的 17 年第二天早上奥巴马夫人演讲）。</p>
<p>那就通过此文分享那些有趣/有用的 WWDC 视频吧。</p>
<a id="more"></a>
<h2 id="wwdc-2016"><a class="markdownIt-Anchor" href="#wwdc-2016"></a> WWDC 2016</h2>
<h3 id="国际化最佳实践"><a class="markdownIt-Anchor" href="#国际化最佳实践"></a> 国际化最佳实践</h3>
<blockquote>
<p>看点：开始小哥打结还以为太紧张说不出话来，结果…</p>
</blockquote>
<p>视频：<a href="https://developer.apple.com/videos/play/wwdc2016/201/" target="_blank" rel="noopener">Session 201: Internationalization Best Practices</a></p>
<p>当时是我在为了一个 <a href="https://github.com/ApolloZhu/FBLA-2017-NLC" target="_blank" rel="noopener">比赛的 App</a> 狂补本地化/国际化，把所有和本地化有关的视频都翻出来了。可以看出苹果一直重视中国市场，工具也越来越好用 (不明白 Route 85 为什么讲这部分的第一期还在推荐用 genstrings)，所以看到这个的时候内心还是很感动的。特别是名字的识别部分，从 ABRecordRef 到 NameComponent，再到现在的大数据自动识别…</p>
<p>看完之后建议看看每年最新的一期，一般都有些新的黑科技。当然如果有去 WWDC 现场不想看 Session，可以在 Lab 直接问 Internationalization &amp; Localization 团队的人有什么新东西（2017 年应该是 stringsdict 模版）。顺便提一下，<a href="https://youtu.be/--0Plt3vyt4?list=PLOU2XLYxmsIKGQekfmV0Qk52qLG5LU2jO" target="_blank" rel="noopener">Route 85</a> 除了上面提到的那一期之外，其他的还是很推荐的。</p>
<h3 id="高效地使用-metal"><a class="markdownIt-Anchor" href="#高效地使用-metal"></a> 高效地使用 Metal</h3>
<blockquote>
<p>看点：实现斯特拉的魔法ED（误）</p>
</blockquote>
<p>视频：<a href="https://developer.apple.com/videos/play/wwdc2016/603/" target="_blank" rel="noopener">Session 603: Internationalization Best Practices</a></p>
<div class="note warning">
            <p>建议先学 OpenGL/Metal 再看。</p>
          </div>
<p><a href="https://bangumi.bilibili.com/anime/5540" target="_blank" rel="noopener">斯特拉的魔法</a>，2016年10月番，ED 的效果很有趣，一直有人常使用各种方法重现。这个视频是讲解 <a href="https://developer.apple.com/library/content/samplecode/AdoptingMetalII" target="_blank" rel="noopener">示例代码</a> 的理论，具体该代码模仿 ED 见 <a href="https://www.bilibili.com/video/av7801365/" target="_blank" rel="noopener">av7801365</a>。</p>
<hr />
<h2 id="wwdc-2015"><a class="markdownIt-Anchor" href="#wwdc-2015"></a> WWDC 2015</h2>
<h3 id="使用-xcode-7-进行-ui-测试"><a class="markdownIt-Anchor" href="#使用-xcode-7-进行-ui-测试"></a> 使用 Xcode 7 进行 UI 测试</h3>
<blockquote>
<p>看点：用户界面测试竟然是这样写出来的？</p>
</blockquote>
<p>视频：<a href="https://developer.apple.com/videos/play/wwdc2015/406/" target="_blank" rel="noopener">Session 406: UI Testing in Xcode</a></p>
<p>看完之后觉得 XCUITest 真的是黑科技。顺便提一下，设置<code>accessibilityIdentifier</code> 能够更精准地定位元素，同时 2017 年增加了附件（比如截屏） 的功能。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
        <tag>tips</tag>
        <tag>WWDC15</tag>
        <tag>WWDC16</tag>
      </tags>
  </entry>
  <entry>
    <title>Tag 迟到的 GitHub Release</title>
    <url>/2017/08/15/git-tag-github-release/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://apollozhu.github.io/Developing-iOS-10-Apps-with-Swift/">CS193P 翻译</a>了好长的时间了（快四个月了吧，才翻译四集不到？），现在想到通过 release 能够方便通过 RSS 订阅更新，但是 GitHub 只支持最近的几次 commit。怎么办呢？<a id="more"></a>了解了 GitHub 的 release 其实是基于 git 的标签，那就只有先用 git 打 tag，之后再在 GitHub 上根据 tag 生成 release。</p>
<h2 id="创建-tag"><a class="markdownIt-Anchor" href="#创建-tag"></a> 创建 tag</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git tag -a &lt;<span class="comment">#版本号#&gt; -m "&lt;#信息#&gt;" &lt;#commit#&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果省略 -m 和参数的话，会让你进入 <em><strong>vim</strong></em> 输入信息的。（<code>:wq</code> 退出）<br />
如果省略最后的提交号的话，会 tag 目前的 HEAD。</p>
<h2 id="同步-tag"><a class="markdownIt-Anchor" href="#同步-tag"></a> 同步 tag</h2>
<p>打完标签之后，还需要同步到服务器。普通的 <code>git push</code> 是不会同步标签的，需要加个参数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --tags</span><br></pre></td></tr></table></figure>
<p>当然，如果你只想同步部分 tag（比如打错了？），可以只同步某个 tag:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push &lt;<span class="comment">#tag 名#&gt;</span></span><br></pre></td></tr></table></figure>
<hr />
<p>更详细的使用方法可以参考 <a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE" target="_blank" rel="noopener">Git 基础 - 打标签</a></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>git</tag>
        <tag>CLI</tag>
      </tags>
  </entry>
  <entry>
    <title>没有老婆X，机器学习造</title>
    <url>/2017/08/15/gen-scale-tag-anime-girl/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不是很懂我们这些二次元的（滑稽），但好东西要分享，方法如下——</p>
<a id="more"></a>
<h2 id="第一步-生成"><a class="markdownIt-Anchor" href="#第一步-生成"></a> 第一步 - 生成</h2>
<p>打开 <a href="https://make.girls.moe/#/" target="_blank" rel="noopener">make.girls.moe</a></p>
<p>等待 “Loading Model…” 结束之后，就可以直接点击 “Generate” 生成了</p>
<p><img src="https://wx3.sinaimg.cn/large/9b6450acly1fikc00za7sj203k03kjs5.jpg" alt="真·小老婆" /></p>
<p>如果你要自定义配置（Options），看不懂英文，可以用这个翻译一下：<a href="https://raw.githubusercontent.com/ApolloZhu/script/master/make.girls.moe.js" target="_blank" rel="noopener">https://raw.githubusercontent.com/ApolloZhu/script/master/make.girls.moe.js</a></p>
<h2 id="第二步-放大"><a class="markdownIt-Anchor" href="#第二步-放大"></a> 第二步 - 放大</h2>
<blockquote>
<p>虽然官方并不是很推荐，详见讨论 <a href="https://github.com/makegirlsmoe/makegirls.moe_web/issues/3" target="_blank" rel="noopener">链接</a></p>
</blockquote>
<p>打开 <a href="http://waifu2x.udp.jp/" target="_blank" rel="noopener">waifu2x.udp.jp</a></p>
<p>降噪程度 选 <em><strong>最高</strong></em>，放大倍数 选 <em><strong>2x</strong></em></p>
<p>记住点 “I’m not a robot” 左边的选择框</p>
<p>下载，上传，如此重复放大几次</p>
<p>把最终效果和原图对比一下：</p>
<p><img src="https://wx2.sinaimg.cn/large/9b6450acly1fikc01isy1j20zk0hr168.jpg" alt="对比" /></p>
<h2 id="可选-打标签"><a class="markdownIt-Anchor" href="#可选-打标签"></a> 可选 - 打标签</h2>
<p>打开 <a href="http://demo.illustration2vec.net/" target="_blank" rel="noopener">demo.illustration2vec.net</a></p>
<p>图片上传最开始最小的版本就可以了，然后机器会帮你把老婆分类</p>
<p><img src="https://wx4.sinaimg.cn/large/9b6450acgy1fiprcw6r6cj20zk0jj77o.jpg" alt="骑士&amp;魔法的男/女主角" /></p>
<div class="note success">
            <p>等等，好像这是可爱的男孩子</p>
          </div>
<hr />
<p>最后，附上三个项目的 GitHub 地址： <a href="https://github.com/makegirlsmoe" target="_blank" rel="noopener">make.girls.moe</a>, <a href="https://github.com/nagadomi/waifu2x" target="_blank" rel="noopener">waifu2x</a>, <a href="https://github.com/rezoo/illustration2vec" target="_blank" rel="noopener">Illustration2Vec</a></p>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>AI/ML</tag>
        <tag>anime</tag>
        <tag>translation</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果开发者视频全面上线简体中文字幕</title>
    <url>/2017/08/15/apple-dev-cn-sub/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://developer.apple.com/click/images/000-cn-subtitles-2017/cn-subtitles-2017.jpg" alt="开发者视频现已配有简体中文字幕" /></p>
<p>视频包括 <a href="https://developer.apple.com/videos/wwdc2017/" target="_blank" rel="noopener">WWDC 2017 视频</a> 和 <a href="https://developer.apple.com/app-store/insights/" target="_blank" rel="noopener">Developer Insight（开发者经验分享视频）</a>，其实前些天就陆陆续续在上去了，一开始我以为是机器翻译，但是仔细看才发现不是（当时我还是很惊讶的）。</p>
<blockquote>
<p>本文部分转自苹果邮件</p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
        <tag>translation</tag>
      </tags>
  </entry>
  <entry>
    <title>效率提高八倍的方法</title>
    <url>/2017/08/02/last-minute-epf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center"><p>To Fail to Plan is to Plan to Fail</p>
</blockquote>
<a id="more"></a>
<p>熟悉我的人大多知道我不玩游戏，却不知道根本原因是有一次差点没做完作业。拖延症估计一直就没治好过，只能说幸好还没到计算我 Credit Rating 的时候，还有机会改正。这次算是一直在 default 这个课程的进度… 一个月的时间本来是很充裕的，硬是变成了</p>
<blockquote>
<p>“用四分之三完成四分之一，用四分之一赶完四分之三”</p>
</blockquote>
<p>哈哈，deadline 让我的效率提高到了原来的九倍。（滑稽）</p>
<p>还记得不知道谁说过：“时间管理软件只对会管理时间的人有用”。想想也是，必须要有自制力去坚持完成才行。原来一直没有下定过决心，因为放不下对那种美好世界的向往；不过今年 TOEFL, SAT, AP 课程和社团管理还等着我呢，看来是时候和二次元说再见了。</p>
<blockquote>
<p>See you later, alligator.</p>
</blockquote>
<p>就算我最终还是没能改掉拖延症，至少希望不要学会下面这种神奇的操作：</p>
<p><img src="https://wx1.sinaimg.cn/large/9b6450acgy1fi4svz3ahaj20n2053jru.jpg" alt="If a programmer injures his wrist from using his computer in an unsafe position, he should contact Occupational Safety and Health Administration" /></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>anime</tag>
        <tag>economics</tag>
        <tag>management</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么这世上没有免费的午餐？</title>
    <url>/2017/08/01/no-free-lunch/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center"><p>There is no such thing as a free lunch</p>
</blockquote>
<a id="more"></a>
<p>从理论上来讲，任何事情都有 trade-off，权衡取舍。即使别人请你吃了免费的午餐，午餐本身的成本是不用分担的，但是我们还要考虑 opportunity cost，机会成本。你本来可能打算用这段时间干些其他的事情，比如把打赏的按钮加到博客里，说不定有人就已经给你砸了几个硬币。</p>
<p>就算不考虑机会成本，我们可以分析一下现实的状况：</p>
<p><img src="https://wx2.sinaimg.cn/large/9b6450acgy1fi4svxx8iyj20gm02874i.jpg" alt="Almost nothing is for free: If someone is offering you a free lunch, a free seminar, or a free weekend, he or she is trying to sell you something. The person will deny it, but he or she is luring you to a hotel meeting room, a restaurant, or an office for a reason -- and that reason is not to feed you; it is to sell you something." /></p>
<p>比如上次在车展上，某人登记了个人信息，参加一个据说会抽中某地免费几日游的活动。过了几天，没想到还真有人给她打电话来了。尽管我和我的老师都持怀疑态度，她还是很兴奋地去领奖了。结果发现整个就是旅行社为了推销酒店和旅行计划的套路，就如上面这段文字所描述的那样。</p>
<p>其实就算你只去吃了免费的午餐，对方也是没有亏损的，因为它们得到了你的个人信息。只能希望不会发生 identity theft，身份盗用的问题，要不然为了贪小利就吃了大亏了。</p>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>translation</tag>
        <tag>economics</tag>
      </tags>
  </entry>
  <entry>
    <title>可不可以跳过汇编，直接学习SWIFT语言？</title>
    <url>/2017/07/27/swift-or-assembly-first/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>看到知乎上有个很有趣（没有建设性）的问题 ——</p>
<blockquote>
<p><a href="https://www.zhihu.com/question/24831599" target="_blank" rel="noopener">可不可以跳过汇编，直接学习SWIFT语言？</a></p>
</blockquote>
<p>来晚了，只好在这里大声喊出理所当然的答案 —— <a id="more"></a></p>
<p><em><strong>不可以</strong></em>！我才买了一本王爽的《汇编语言》</p>
<p><img src="https://wx2.sinaimg.cn/large/9b6450acgy1fhyg7t2eqlj21kw16odx9.jpg" alt="A WWDC17 Swift pin, on [the] &quot;Assembly Language&quot; by Shuang Wang" /></p>
<blockquote>
<p>免得被知乎大佬说不求上进 —— <a href="https://www.zhihu.com/question/61130823" target="_blank" rel="noopener">知乎：如何评价 6 岁开始编程的马舜喆？他的前途会如何？</a></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC17</tag>
        <tag>zhihu</tag>
        <tag>Assembly</tag>
      </tags>
  </entry>
  <entry>
    <title>美国梦</title>
    <url>/2017/07/19/the-american-dream/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>中国梦博大精深，不可参透，相比之下美国梦就显得有些世俗了：</p>
<blockquote><p>For many people, the American dream means an opportunity to start their own businesses.</p>
<footer><strong>Economics and Personal Finance</strong></footer></blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>translation</tag>
        <tag>economics</tag>
      </tags>
  </entry>
  <entry>
    <title>顾客是上帝</title>
    <url>/2017/07/17/consumer-sovereignty/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>看到经济学教材里的 consumer sovereignty 立刻就想到了“顾客是上帝”这句话，虽然更准确意思是顾客是至高无上的，不过应该差不多吧？感觉定义还是很有趣的：</p>
<blockquote><p>To succeed, businesses must produce goods and services that consumers are willing and able to buy.</p>
<footer><strong>Economics and Personal Finance</strong><cite>Definition of Consumer Sovereignty</cite></footer></blockquote>
<p>按个人理解，假设客户只是选择购买商品，而没有购买服务（付小费），那个时候应该不算是“上帝”的。不过现实中，客户真要是摆出这句话，怂回去还是显得有些小气了。</p>
<div class="note success">
            <p>题外话，虽然我不信教，不过根据我浅薄的理解，上帝不是替人民受苦受难的吗？</p>
          </div>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>translation</tag>
        <tag>economics</tag>
        <tag>religion</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello!My World!! - Fhána</title>
    <url>/2017/07/17/fhana-hello-my-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;Creation&gt; hello = <span class="comment">/*my*/</span> <span class="keyword">new</span> World();</span><br><span class="line"><span class="comment">// The Java I learned might be a fake one.</span></span><br><span class="line"><span class="comment">// 我可能学了假的 Java.</span></span><br></pre></td></tr></table></figure>

    <div id="aplayer-IAsNjxYx" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="487590992" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#66ccff"
    ></div>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>anime</tag>
        <tag>music</tag>
        <tag>translation</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Swift 和 NS_EXTENSION_UNAVAILABLE</title>
    <url>/2017/06/20/swift-and-ns-extension-unavailable/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://wx1.sinaimg.cn/large/9b6450acgy1fgsia3aimjj20n103mq35.jpg" alt="'shared' is unavailable: Use view controller based solutions where appropriate instead." /></p>
<p>根据 <a href="https://developer.apple.com/library/content/documentation/General/Conceptual/ExtensibilityPG/ExtensionOverview.html#//apple_ref/doc/uid/TP40014214-CH2-SW6" target="_blank" rel="noopener">App Extension Programming Guide</a>，有些 API 在 App Extension 中是不允许调用的，其中最典型的一个就是 <code>UIApplication.shared</code>。这些方法和属性都由 <code>NS_EXTENSION_UNAVAILABLE</code> 这个宏作为标记，在 App Extension 中使用的话 Swift 代码直接无法通过编译（因为程序会直接崩溃），但是因为 Swift 不支持宏定义，所以无法用 <code>#if</code> 来判断是否允许调用。</p>
<p>那么用 Swift 的我们应该怎么做呢？</p>
<a id="more"></a>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="meta">@available</span>(iOSApplicationExtension, unavailable, message: <span class="string">"This method is NS_EXTENSION_UNAVAILABLE."</span>)</span><br><span class="line"><span class="meta">@available</span>(watchOSApplicationExtension, unavailable, message: <span class="string">"This method is NS_EXTENSION_UNAVAILABLE."</span>)</span><br><span class="line"><span class="meta">@available</span>(tvOSApplicationExtension, unavailable, message: <span class="string">"This method is NS_EXTENSION_UNAVAILABLE."</span>)</span><br><span class="line"><span class="meta">@available</span>(iOSMacApplicationExtension, unavailable, message: <span class="string">"This method is NS_EXTENSION_UNAVAILABLE."</span>)</span><br><span class="line"><span class="meta">@available</span>(<span class="type">OSXApplicationExtension</span>, unavailable, message: <span class="string">"This method is NS_EXTENSION_UNAVAILABLE."</span>)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">problemSolved</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="type">UIApplication</span>.shared</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>好了，散伙。</p>
<h2 id="sr-1266-修复之前"><a class="markdownIt-Anchor" href="#sr-1266-修复之前"></a> [SR-1266] 修复之前</h2>
<p>其实我是因为 <a href="https://github.com/vtourraine/AcknowList/pull/46" target="_blank" rel="noopener">AcknowList</a> 需要兼容 App Extension 才了解到，感谢 <a href="https://github.com/apple/swift/pull/12410" target="_blank" rel="noopener">这个 PR</a>，我们不用再曲线救国了。不过当时因为 <code>@available</code> 只是运行时判断，所以并不能解决无法编译的问题。无奈的我想到了这些（很可能不兼容 Objective-C）的方法：</p>
<ol>
<li>最简单的是把需要用到这些 API 的代码作为 <code>extension</code> 放在另一个文件中，只在非扩展的 target 中包含。</li>
<li>或者是修改工程文件，把 <code>NS_EXTENSION_UNAVAILABLE</code> 加到扩展 target 的 Build Settings 里的 Swift Compiler - Custom Flags 里。这样就能用 <code>#if</code> 判断了。<img src="https://wx3.sinaimg.cn/large/9b6450acgy1fgslugnclwj20jk05ijs3.jpg" alt="" /></li>
<li>最后这个方法是在 WWDC17 去 Messages Extension 的 lab 时候想到的，问了下苹果工程师，大概没问题。自己把函数或变量修饰为 <code>@available(...OSAplicationExtension, unavailable)</code>，然后内部通过 Key Path 实现。其它 <code>NS_EXTENSION_UNAVAILABLE</code> 适用的地方尝试调用会因为 <code>@available</code> 无法通过编译，所以只要自己控制好不要在实现的时候乱用就行。完整的例子如下：</li>
</ol>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="meta">@available</span>(iOSApplicationExtension, unavailable, message: <span class="string">"This is unavailable: Use view controller based solutions where appropriate instead."</span>)</span><br><span class="line"><span class="meta">@available</span>(macOSApplicationExtension, unavailable, message: <span class="string">"This is unavailable: Use view controller based solutions where appropriate instead."</span>)</span><br><span class="line"><span class="meta">@available</span>(watchOSApplicationExtension, unavailable, message: <span class="string">"This is unavailable: Use view controller based solutions where appropriate instead."</span>)</span><br><span class="line"><span class="meta">@available</span>(tvOSApplicationExtension, unavailable, message: <span class="string">"This is unavailable: Use view controller based solutions where appropriate instead."</span>)</span><br><span class="line"><span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">show</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> keyWindow = <span class="type">UIApplication</span>.value(forKeyPath: #keyPath(<span class="type">UIApplication</span>.shared.keyWindow))</span><br><span class="line">    show(<span class="keyword">in</span>: keyWindow <span class="keyword">as</span>? <span class="type">UIWindow</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">show</span><span class="params">(<span class="keyword">in</span>: UIWindow)</span></span> &#123; &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>长辈用手机时总寻求子女帮助的原因竟然是？</title>
    <url>/2017/06/15/reason-behind-the-elders-whos-trys-out-tech/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>在知乎上读 AppSo 发布的 <a href="https://www.zhihu.com/publications/book/119554848" target="_blank" rel="noopener">《iPhone 就该这样用》</a>，本来以为可以学到点技巧，结果却收获了一个发人深省的观点——</p>
<blockquote><p>其实很多时候不是他们不会用，而是他们想接着这些仅有的话题和我们聊上几句话。</p>
<p>把 iPhone 变成「老人机」不难，难的是有耐心陪着长辈说话。</p>
<footer><strong>孙润晨</strong><cite>十三、如何为长辈设置 iPhone/iPad?</cite></footer></blockquote>
<p><a href="https://www.zhihu.com/publications/book/119554848" target="_blank" style="position:relative;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-top:16px;margin-bottom:16px;cursor:pointer;border:1px solid #e7eaf1;border-radius:4px;box-shadow: 0 1px 3px 0 rgba(0,34,77,.05);"><img src="https://pic1.zhimg.com/50/v2-f23e0da5cb6788cca75e186d11699c8c_200x0.webp" style="margin:0;border:none;padding:0;-ms-flex-negative:0;flex-shrink:0;width:90px;height:90px;-o-object-fit:cover;object-fit:cover;"><span style="display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:10px 16px;overflow:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;"><span style="font-size:18px;font-weight:400;">《iPhone 就该这样用》作者：AppSo</span><span style="overflow:hidden;font-size:15px;color:#8798ae;text-overflow:ellipsis;word-wrap:normal;white-space:nowrap;">www.zhihu.com<span style="display:inline-block;padding:1px 6px;margin-left:8px;font-size:12px;line-height:normal;color:#8590a6;vertical-align:1px;background-color:#f7f8fa;border-radius:3px;">电子书</span></span></span></a></p>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>zhihu</tag>
      </tags>
  </entry>
  <entry>
    <title>去 WWDC17 的路上</title>
    <url>/2017/06/03/wwdc17-day-before/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>本文根据记忆补写，可能和实际情况略有出入</p>
</blockquote>
<p>一开始的计划是从 IAD 分两段飞到 SJC，然后落地后按地图的指示花 2 美元坐到校园。但还是想着顺便参观下斯坦福校园，所以最后决定直飞 SFO。搭乘早上第一班飞机，坐在经济舱宽敞的皮质座椅上享受着清晨的阳光，十点准时抵达旧金山国际机场。<a id="more"></a>我是预计参加 Stanford 11 点不需要预约的 Walking Tour，但因为 Paypal 绑定失败导致没能坐成 Uber。反正也赶不上了，就索性坐公交车前往吧。</p>
<div class="note success">
            <p>当地交通虽然可以现场现金支付，不过建议先在网上办理 <a href="https://www.clippercard.com" target="_blank" rel="noopener">Clipper Card</a>，方便，学生也有优惠（以下价格为优惠前），可以在公交系统附近充值。</p>
          </div>
<div class="note primary">
            <h2 id="sfo-stanford1-小时-11-分钟1015"><a class="markdownIt-Anchor" href="#sfo-stanford1-小时-11-分钟1015"></a> SFO -&gt; Stanford，1 小时 11 分钟，$10.15</h2>
          </div>
<p>人生地不熟，旧金山的机场又大结构还复杂，只能靠标示摸索前行。甚至在当地归家心切的留学生都要来问我，我也只能笑着表示无能为力。好不容易找到了可以乘坐 Bart 的 San Francisco Airport Station。在工作人员的指导下在站外的机子上充了卡，但进站之后还是懵了。不过这次不是因为复杂，而是太简单了！标示都没有一个，害得我差点坐反。幸亏机智的我及时问了下旁边的人……</p>
<p><img src="https://img.grouponcdn.com/pwa_test/2rncH4ktQrF8Fa5Qb45QbyAtMXjs/2r-674x446/v1/c700x420.jpg" alt="Bart" /></p>
<p>本来都看了地图做好计划了的，可在 Millbrae 下车之后还是一脸懵逼。跟着人流来刚好到了 Caltrain 上车的地方，却在此之前陷入了往哪个方向坐的问题……正当我纠结的时候，车来了。我之前看的时间表好像说的是这火车还只有上午有，所以这应该算是末班车了，情急之下我随便抓了个人问，他说他问工作人员说就是这辆，我就跟着上了。</p>
<p>你以为这就可以安心了？并不！上去之后发现竟然没有刷卡的地方？？我悄悄问旁边的人，才得知需要在上车之前在某个机器上刷……</p>
<p><img src="https://user-images.githubusercontent.com/10842684/39087402-7333e2e2-456e-11e8-9150-49d1277eefea.jpg" alt="卧槽" /></p>
<p>明明是开放式站台啊，加州人民素质太好了吧！不过现在还不是惊讶的时候，得计划好怎么去补票。到了下一站，我提着行李（就算只有一件我也不想把行李丢车上，万一没赶上呢），飞一般地跳下了车。凭着直觉找到了刷卡的小柱子。刷了卡之后又一个冲刺上了车。</p>
<p><img src="https://user-images.githubusercontent.com/10842684/39087862-80bb6988-4575-11e8-9841-39693b77eb3b.jpg" alt="棒棒哒" /></p>
<p>终于可以放松一会儿了。车上人不多，还是双层的呢。但是因为提着行李不方便坐，两节车厢之间又很宽敞，就准备站在那里直到下车。列车员看到了，让我还是去找个位置坐，行李我也只能想办法塞到隔壁座位。</p>
<p>到了 Palo Alto Station，有不少人都下了车。下去基本就到斯坦福了，虽然可以在 PATC-University Circle 等坐 SE 线去校园里面，但我还是决定漫步校园。</p>
<div class="note danger">
            <p>下车记得 tag off，也就是再刷一次卡，否则会按照你坐到 <em><strong>终点站</strong></em> 算哦。</p>
          </div>
<div class="note success">
            <h2 id="斯坦福之行"><a class="markdownIt-Anchor" href="#斯坦福之行"></a> 斯坦福之行</h2><p>详见 <strong>不好意思没写完，之后再来看看吧 😉</strong></p>
          </div>
<div class="note primary">
            <h2 id="stanford-campus-village-22-小时2"><a class="markdownIt-Anchor" href="#stanford-campus-village-22-小时2"></a> Stanford -&gt; Campus Village 2，2 小时，$2</h2>
          </div>
<p>提着行李从游客中心出来之后，沿着热闹的体育场旁边的小路来到了公路边。说实话 EL Camino Real and California 这站存在感太低了，我甚至都怀疑会不会有公交车来。坐上 522 路之后，沿途欣赏了两个小时的风景，最后在 Santa Clara &amp; 6th 站下了车，前往住宿所在的 San Jose State University。</p>
<p>其实我提前下了一个站（能怪我么它那几个站离得那么近），估计可能真的是紧张，完全忘了需不需要提前拉绳子通知司机停车，不过应该 VTA 是不需要 tag off 的。各位要乘坐的话还请和司机确认一下。</p>
<div class="note warning">
            <h2 id="未完待续"><a class="markdownIt-Anchor" href="#未完待续"></a> 未完待续</h2><p>接下来的内容，请关注 <a href="/tags/WWDC/">WWDC 系列</a></p>
          </div>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
        <tag>Stanford</tag>
      </tags>
  </entry>
  <entry>
    <title>A &quot;Good&quot; Letter to Next Years&#39; APCSA Students</title>
    <url>/2017/05/24/letter-to-apcsa-students/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>This letter was included into the <a href="https://drive.google.com/file/d/0BzsLc9xUiW_Oajh6cUNGVXJZUms/view" target="_blank" rel="noopener">summer packet</a> with minor modifications</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (Student student : APCSA.future.students)</span><br><span class="line">    System.out.print(<span class="string">"Hello "</span>+ student.name);</span><br></pre></td></tr></table></figure>
<p>You’ll learn about computer science and Java here. You won’t be learning about how to write visually attractive programs for the most of the times, but what you learn will empower you to write those programs with ease. This course is the prerequisites for all other CS courses, but why are you taking it? For me, <strong>I was here to learn.</strong></p>
<a id="more"></a>
<p>Despite the fact that I love programming, I’m afraid of computer science, especially those abstract algorithms. To prepare for this course, I read Think Java carefully. Mr. Lau suggested to read the first three chapters, I read it entirely. You can download it on your phone, and read it whenever you take your phone out. You don’t need a full time period, except for the exercises at the end of each chapter. You might find yourself unable to complete the exercise questions like me; if you do, just go back and read about that part again. There are no preferred answers to those questions, so any code that generates the same result are correct. But if you ever wonder, mine is on <a href="https://github.com/ApolloZhu/Think-Java-Exercises" target="_blank" rel="noopener">GitHub</a>.</p>
<p>Even with a significant amount of knowledge about programming, you can always find something new here, so don’t just assume you are omniscient. Java is advanced but primitive, stern but nonchalant, expressive yet confusing. Learning Java is like learning a foreign language, you have to practice using it. Thus, I strongly recommend starting the labs early. Similar to those exercises included in Think Java, there are no standard ways to implement them. Therefore, explain to your tutor how you choose to complete the task, don’t let them type the code for you. And you never want your friend to show you their program; it will limit your imagination.</p>
<p>This course requires you to think logically, trace what’s going on. It is a frustrating process, but the good news is, you have a lot of resources. You can ask questions in class, take notes on or annotate important concepts for review. Another option is coming to Mr. Lau’s cougar time. You’ll find a comfortable environment for studying computer science. If you have any questions, you can always ask Mr. Lau or students around you. A lot of “good” students and center tutors come on daily bases. They will always help you <em><strong>IFF</strong></em> you ask. Or join Oakton Computer Science Club, you’ll find many opportunities to practice what you learned in this course, and meet with some really advanced students.</p>
<p>You can be a good student too. It’s very simple: <strong>understand what you are doing.</strong> <em><strong>Never use a code snippet until you can write it and its variations out without any assistance.</strong></em> I’m definitely talking about plagiarism, but that’s not my focus. I want to emphasis on the importance of solving problems by yourself. If you can’t visualize the process in your head, draw a graph, a table, or a stack to visualize the flow of your program. If your program doesn’t compile, read the error messages. A lot of them doesn’t make any sense to you (and me), but you’ll find the culprit through these traces. If you have a logic error, try break points. They are very easy to learn and convenient to use. You’ll find them handy.</p>
<p>Other than understanding how it works, <strong>you need to know why it works.</strong> You can achieve this by reading the source code of Java. Written by top developers in the world, Java source code demonstrates the conventions of writing Java code. You can compare your own solutions to theirs, and ask yourself what’s the difference. With a lot of documentations and comments, you can figure out why they choose to do it that way. Of course I’m not asking you to read all 2 billion lines of Java code, that’s neither necessary nor efficient. When Mr. Lau tell you “this is not natural,” it is a good place to start. If you have a professional IDE like Eclipse, just ctrl/command click on that method or class; otherwise, find it in the <code>JAVA_HOME</code> directory.</p>
<p>A quick note for those “good” students. You may use “advanced” stuff – such as regular expressions and lambdas – in your lab. That’s what people use in real life, but make sure you know how to complete the tasks without those language features, fancy methods, and classes.</p>
<p>Remember: <em><strong>ALL</strong></em> are equal before computer science; <code>(to be) || !(to be)</code>, that is <code>true</code>.</p>
<p><a href="https://github.com/ApolloZhu" target="_blank" rel="noopener">@ApolloZhu</a><br />
2017/5/24</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>2017 ACSL All-Star Contest</title>
    <url>/2017/05/18/acsl17-all-star-contest/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>没想到在六月份去 WWDC 之前，5/27 号我还要先飞洛杉矶参加 <a href="http://www.wixtest.acsl.org/all-star-contest-information" target="_blank" rel="noopener">ACSL All-Star Contest</a>。</p>
<a id="more"></a>
<p>因为学校放假，社团组织略有疏忽，指导教师的邮箱把主办方发来的通知标为了垃圾邮件，等到我们组里一个比较看重这个比赛的同学注意到不对劲去问的时候，我们只剩下一周左右的时间。虽然官方推荐的酒店已经订满了，租车的优惠也没了，但是既然都进了决赛（后来才知道这也是我们社团第一次进决赛），哪有不去的道理？</p>
<p>按道理来说，因为是通过学校社团报的名，这个应该属于学校活动。需要先让老师完成填写 <a href="https://www.fcps.edu/sites/default/files/media/forms/fs141.pdf" target="_blank" rel="noopener">REQUEST FOR APPROVAL OF UNUSUAL FIELD TRIP</a>，并提供一个比较详细的日程表。经过学校各级领导签字批准过后，家长再在 <a href="https://www.fcps.edu/sites/default/files/media/forms/fs152_0.pdf" target="_blank" rel="noopener">PARENTAL AUTHORIZATION AND ACKNOWLEDGEMENT OF RISK FOR FIELD TRIP</a> 上签字，连着 <a href="https://www.fcps.edu/sites/default/files/media/forms/se3_0.pdf" target="_blank" rel="noopener">EMERGENCY CARE INFORMATION</a> 和支票一起交给学校，由学校的账户统一支付。就算 Activity Office 的 Ms. Jay 说会帮我们盯着，但这个过程下来肯定是赶不上的。而且 Mr. Lau 和 Mr. Larson 都没空当 Chaperone，学校也不认同家长代替，这事就只好私了了。</p>
<h2 id="5-月-26-日星期五"><a class="markdownIt-Anchor" href="#5-月-26-日星期五"></a> 5 月 26 日，星期五</h2>
<p>今天本来只上半天课，但因为化学有个单元测试，航班又在傍晚，就没准逃课的。结果家长们商量好了让我们聚在一起集训一天，顺势请了个病假，稍微发了个邮件告诉 Mr. Lau 不要担心（Mr. Lau，我有多喝热水哦）。星期四看算法竞赛入门到凌晨一点，早上九点再到 Justin 家继续看各种资料复习准备。不过感觉大家都不是很投入的样子——有怀抱宠物呼呼大睡的，有玩游戏翻漫画的，有追番到胃疼的（原谅真美这集堪比好想急死你）。</p>
<p>下午三点出发到 IAD 乘机，因为 UA 没有柜台，拿着打印的电子机票就直接过安检进去了。没想到国内航班的 D 航站楼和国际相比差远了，连座位都不够，整体显得很拥挤。到了 D23 登机口换了 UA719 的登机牌，坐在地上等了半个小时。因为是国内航班，即使有五个小时，还是在饭点，却依然没有正餐，只有一小包饼干和饮料。即使是坐第一排 7E，也许因为是 737-800 吧，第一次体会到了为什么会有人需要买靠枕 —— 座位的设计绝对没考虑人体工程学。</p>
<h3 id="洛杉矶"><a class="markdownIt-Anchor" href="#洛杉矶"></a> 洛杉矶</h3>
<p>洛杉矶时差三个小时，到的时候是晚上八点。出了机场，到外面有紫色牌子（Rental Car Shuttles）的地方等 Hertz 的黄色 shuttle. 酒店其实没有想象的远，也有可能是 LA 大家开车速度很快，四十分钟左右就到了。晚饭在酒店旁边 The Oaks <s>连锁（误）</s> 商场的 Chess Factory 吃的，开胃菜 + 每人一份主食 + 招牌起司蛋糕总共大约 $130 左右，分量很大，大家都没吃完。住的 La Quinta Inn &amp; Suites Thousand Oaks Newbury Park 酒店整体感觉很好，Wi-Fi 也不慢，只不过和其他美国酒店一样没有洗漱套装。</p>
<h2 id="5-月-27-日星期六"><a class="markdownIt-Anchor" href="#5-月-27-日星期六"></a> 5 月 27 日，星期六</h2>
<p>早上六点起床，本来准备七点准时去会场 <a href="https://www.google.com/maps/place/456+N+Reino+Rd,+Newbury+Park,+CA+91320" target="_blank" rel="noopener">Newbury Park HS</a>，结果酒店七点才开始供应早餐。早餐有面包，饮料，燕麦，还可以自己烤华夫饼，简单吃了一下，收拾整理，八点左右到了会场。带队“老师”到体育馆中间的桌子交 $200 报名费，领取奖牌，优惠券，日程安排和午餐券。组织者八点半准时开始说明规则，四十五的时候让学生代表去领题目，其余的队员去找教室，家长老师去特定的休息室。</p>
<p>编程题目有一定的困难，但还是属于可以完成的范畴。中途在测试的时候输入的数据没选好，把电脑卡死了，然后就陷入了两小时和电脑的苦战。虽然依然在想算法，但其实把算法转成代码还是没那么容易。有一道题算是完成了，但是有些小瑕疵；有一道题本来都完成了，但是因为 IDE 的问题，完成的版本被删除了（早知道就让他们先把这道题过了再说），只留下了原来一个快完成的版本。剩下两道时间不够，没能实现…十二点半交卷，想方设法请求监考老师再给我们点时间，未果，郁郁寡欢地吃了两块披萨，就去考笔试了。虽然全部都是选择题，但是有一个可恶的选项 <code>E —— 以上皆不是</code>。虽然基础都掌握了，但是因为题目本身很复杂，结果也只得了一半的分。</p>
<h3 id="观光"><a class="markdownIt-Anchor" href="#观光"></a> 观光</h3>
<p>其他不说，学校整个感觉就是地广人稀 —— 高中完全给人一种大学的感觉，竟然还配备了一个游泳池。考虑到多半不会得奖，就没等到四点，两点半考完就开始往洛杉矶走，准备路上去好莱坞看看。志性的 HOLLYWOOD 只瞥见了一眼，主要还是在城镇里和富人区开车转了一遍。印象最深的是某个建筑外墙上的彩绘，和路边满树的紫色小花（原谅我无知）。晚餐本来准备在鼎泰丰吃，不出所料地要等很长时间，就在旁边 Granville 吃了，价格还算人道。</p>
<p><img src="https://wx2.sinaimg.cn/mw690/9b6450acgy1fg7u1wwjvqj21kw16o7wh.jpg" alt="" /></p>
<h3 id="回程"><a class="markdownIt-Anchor" href="#回程"></a> 回程</h3>
<p>大家好像不想久留，即使星期一因为 Memorial Day 放假，还是迫不及待地坐星期六晚上 21:51 的 UA784 赶回来。回来路上给车加了油，还回 Hertz，坐摆渡车到了候机楼。星期天早上迎着朝阳回到 IAD，各自回家睡了一天懒觉。</p>
<h2 id="账务估计"><a class="markdownIt-Anchor" href="#账务估计"></a> 账务估计</h2>
<table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:center">金额</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">机票</td>
<td style="text-align:center">2569.60</td>
</tr>
<tr>
<td style="text-align:center">酒店</td>
<td style="text-align:center">369.58</td>
</tr>
<tr>
<td style="text-align:center">租车</td>
<td style="text-align:center">35.52</td>
</tr>
<tr>
<td style="text-align:center">报名</td>
<td style="text-align:center">200</td>
</tr>
<tr>
<td style="text-align:center">餐食</td>
<td style="text-align:center">??</td>
</tr>
<tr>
<td style="text-align:center">总计</td>
<td style="text-align:center">3164.7</td>
</tr>
<tr>
<td style="text-align:center">平坦</td>
<td style="text-align:center">1070</td>
</tr>
</tbody>
</table>
<h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2>
<p>感谢 Justin 的妈妈及时给 Mr. Lau 发了封邮件说明情况。我相信没有她的帮助，就没有我们这次的旅程。以下是原文节选：</p>
<blockquote><p>Justin told me over the weekend that their group (Nithin Jonnalagadda, Zhiyu Zhu and Justin Li) has the opportunity to participate in this year’s ACSL All-Star Contest in southern California on May 27. I am very excited for them, and I think this is a very good experience for them to participate the activities outside school and see other students who share the same interest and passion with them from all over the country.</p>
<p>My husband will be happy to be the chaperone. I have already purchased the air tickets for the four of them, reserved the hotel rooms, and rented a car last night. I would like to know if there is anything else that needs to be done to participate in this event to represent Oakton High School (like certain forms, school permissions, etc.).</p>
<p>Last, I would like to thank you for acting as the group’s mentor and guiding them for the past two years. I am pretty sure they would not have been able to make it without your help. Looking forward to what these boys can achieve as they continue on!</p>
<footer><strong>Justin's Mom</strong><cite>An Email to Mr. Lau</cite></footer></blockquote>
<p>感谢 Mr. Lau 为我们积极沟通联系，以及平常上课时的认真负责。这次还真被他说中了，真没得奖。</p>
<p>另外感谢主办方代表 <a href="mailto:amcompsci@cox.net">Mr. Tebrow</a> 在我们不代表学校的情况下网开一面；感谢 <a href="mailto:kickrg@gmail.com">Mr. Kick</a> 及时告诉我们时间表。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>ACSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Exam Appendix -- Java Quick Reference</title>
    <url>/2017/05/02/apcsa-appendix-b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Accessible methods from the Java library that may be included on the exam</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">Object</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object other)</span></span>;</span><br><span class="line">	<span class="function">String <span class="title">toString</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">Integer</span> </span>&#123;</span><br><span class="line">	Integer(<span class="keyword">int</span> value);</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">intValue</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="comment">/** Minimum value represented by an `int` or `Integer`. */</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> MIN_VALUE;</span><br><span class="line">	<span class="comment">/** Maximum value represented by an `int` or `Integer`. */</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> MAX_VALUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">Double</span> </span>&#123;</span><br><span class="line">	Double(<span class="keyword">double</span> value);</span><br><span class="line">	<span class="function"><span class="keyword">double</span> <span class="title">doubleValue</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">String</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">Comparable</span>&lt;<span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">length</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="comment">/** <span class="doctag">@return</span> the substring beginning at `from` and ending at `to-1`. Note: the substring has length of `to - from`.	*/</span></span><br><span class="line">	<span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span></span>;</span><br><span class="line">	<span class="comment">/** <span class="doctag">@return</span> `substring(from, length())`. */</span></span><br><span class="line">	<span class="function">String <span class="title">substring</span><span class="params">(<span class="keyword">int</span> from)</span></span>;</span><br><span class="line">	<span class="comment">/** <span class="doctag">@return</span> the index of the first occurrence of `str`; -1 if not found. */</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String str)</span></span>;</span><br><span class="line">	<span class="comment">/** <span class="doctag">@return</span> value &lt; 0 if `this` less than `other`; 0 if equals to `other`; &gt; 0 if greater than `other`. Note: According to ACSII. */</span></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(String other)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">lang</span>.<span class="title">Math</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">abs</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">abs</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">pow</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">double</span> exponent)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">sqrt</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">double</span> <span class="title">random</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">java</span>.<span class="title">util</span>.<span class="title">List</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="comment">/** Appends obj to end of list.	<span class="doctag">@return</span> `true` Note: only if operation allowed, such as always true for `ArrayList`. */</span></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E obj)</span></span>;</span><br><span class="line">	<span class="comment">/** Inserts `obj` at position `index`, for 0 ≤ `index` ≤ `size()`. */</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E obj)</span></span></span><br><span class="line"><span class="function">	E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">	<span class="comment">/** Replaces the element at position `index` with `obj`. <span class="doctag">@return</span> the element formerly at the specified position. */</span></span><br><span class="line">	<span class="function">E <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E obj)</span></span>;</span><br><span class="line">	<span class="comment">/** Removes element from position `index`, moving elements at position `index + 1` and higher to the left by 1 (subtracts 1 from their indices) and adjusts size. <span class="doctag">@return</span> the element formerly at the specified position. */</span></span><br><span class="line">	<span class="function">E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">java</span>.<span class="title">util</span>.<span class="title">ArrayList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">util</span>.<span class="title">List</span>&lt;<span class="title">E</span>&gt; </span>&#123; &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>English</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>WWDC17 准备记录</title>
    <url>/2017/04/23/wwdc17-preparation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>今年被选为了 Scholar，记录一下各种事宜，方便下次（如果还有的话）参考。没选中的同学们再接再厉，明年还有机会。我觉得最好不要像<a href="https://forums.developer.apple.com/thread/76431" target="_blank" rel="noopener">这个同学这样</a>在<a href="https://forums.developer.apple.com/community/other/wwdc17-scholarships/" target="_blank" rel="noopener">论坛</a>里发牢骚和冷嘲热讽还不提供证据，终究只会给苹果留下坏印象，偷鸡不成蚀把米。</p>
<a id="more"></a>
<h2 id="公开宣布"><a class="markdownIt-Anchor" href="#公开宣布"></a> 公开宣布</h2>
<p>得奖了当然是要到各个平台宣传啊！这样说不定能正好找到一起去的小伙伴呢，比如今年就建了一个 “WWDC2017中国春游团”。</p>
<ul>
<li>QQ 说说</li>
<li>微信朋友圈</li>
<li>Facebook</li>
<li>微博 <a href="https://huati.weibo.com/k/WWDC" target="_blank" rel="noopener"><code>#WWDC#</code></a></li>
<li>Twitter <a href="https://twitter.com/hashtag/WWDCScholars" target="_blank" rel="noopener"><code>#WWDCScholars</code></a> <a href="https://twitter.com/hashtag/WWDC17" target="_blank" rel="noopener"><code>#WWDC17</code></a></li>
<li>通报学校，互惠共赢</li>
</ul>
<h2 id="接受奖项"><a class="markdownIt-Anchor" href="#接受奖项"></a> 接受奖项</h2>
<p>公布结果那天（4/22）有空就在刷邮件，然后就看到了</p>
<p><img src="https://wx3.sinaimg.cn/mw690/9b6450acgy1feuvehykdoj20km0eddkk.jpg" alt="" /></p>
<p>点 Accept Your Scholarship，会跳到苹果开发者官网，然后全选 Yes。最后 Optional 的那个应该是某个报刊杂志的采访吧，官网也不好看，没勾。</p>
<p>更具你接受的时间，这个神奇的 <a href="https://developer.apple.com/account/#/events" target="_blank" rel="noopener">Events Tab</a> 出现时机也不同。我是晚了一个小时，结果等了两天。其实这个票也就是看着安心，因为现在你并不能对它做什么。</p>
<p><img src="https://wx4.sinaimg.cn/mw1024/9b6450acgy1feyhouy306j20zk0m8q4r.jpg" alt="" /></p>
<h2 id="行程计划"><a class="markdownIt-Anchor" href="#行程计划"></a> 行程计划</h2>
<p>完了之后苹果会再来一封邮件，包含了住宿信息，这个时候就可以开始计划了。今年（2017）是在 San Jose State University Campus Village 2，6月3日入住，6月10日退房。附近的机场可以参考苹果的<a href="https://developer.apple.com/wwdc/attending/" target="_blank" rel="noopener">旅行建议</a>，但是机票和到达之后到宿舍的过程就需要自己计划了。虽然也可以申请 travel assistant，让苹果付钱，不过这个机会还是给更需要帮助的人吧。</p>
<p>群里正好遇到一个同在 VA 的同志，他准备从 BWI 飞 OAK。便宜是便宜，100 多美金，但是我看是下午的航班，五点半到，之后再是两个小时的 Bart，而且我这边早上也要先去巴尔的摩，觉得有些麻烦，很遗憾不能通行。但也因此我才发现 Google 机票查询支持多个机场同时考虑，重新制定了计划。</p>
<p>目前大致计划如下，早上七点过 Virgin 的航班从 IAD 飞 SFO，十点过到了之后去 Stanford 逛一圈，之后再去宿舍。之前有幸认识到了一个斯坦福的学生，刚刚发了邮件，正在等待回复来决定最后的计划。[5/23 更新]：斯坦福好像把外部的邮箱都屏蔽了…</p>
<table>
<thead>
<tr>
<th style="text-align:center">航空公司</th>
<th style="text-align:right">航班号</th>
<th>时间</th>
<th style="text-align:center">价格</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Virgin</td>
<td style="text-align:right">VX67</td>
<td>7:20-10:05</td>
<td style="text-align:center">228.2</td>
</tr>
<tr>
<td style="text-align:center">American</td>
<td style="text-align:right">UA517</td>
<td>14:55-23:05</td>
<td style="text-align:center">265.2</td>
</tr>
</tbody>
</table>
<h2 id="badge"><a class="markdownIt-Anchor" href="#badge"></a> Badge</h2>
<p>5/23 发了一封邮件链接到 <a href="https://developer.apple.com/wwdc/attending/get-ready/#!/" target="_blank" rel="noopener">Get Ready for WWDC.</a> 这个页面上可以更改挂牌上面的名字（昵称）和填写应急联系人的信息。</p>
<h2 id="家长许可"><a class="markdownIt-Anchor" href="#家长许可"></a> 家长许可</h2>
<p>针对未成年人有个特殊要求，就是家长需要签署的 <a href="https://developer.apple.com/wwdc/agreement/parent/WWDC_Permission_Statement_NoGuardian.pdf" target="_blank" rel="noopener">WWDC 2017 Permission Statement</a>。<a href="https://forums.developer.apple.com/thread/76578" target="_blank" rel="noopener">论坛里也有人在问</a>，结果也没人回答，最后 5/18 号左右才开始打电话。我可能手机关机没接上，苹果直接给家长打过去了。主要就是问问家长去不去，为什么，不去的话让家长放心一类的。最后说要发封<a href="https://developer.apple.com/wwdc/agreement/parent/" target="_blank" rel="noopener">邮件</a>，等到 25 号才来。主要就是填个紧急联系信息，同意 “出了事苹果不负责，熊孩子搞事请走人” 的条款。</p>
<h2 id="最后确认"><a class="markdownIt-Anchor" href="#最后确认"></a> 最后确认</h2>
<p>开会前的周二伴随着新版的 WWDC App，苹果发来了通知书，再次强调了些重要的事项。这个时候就可以把 Badge 添加到 Wallet 里了。周四旅行社发来邮件，要家长和我同意各种事项，把签好字的发回去。</p>
<div class="note warning">
            <h2 id="未完待续"><a class="markdownIt-Anchor" href="#未完待续"></a> 未完待续</h2><p>接下来的内容，请关注 <a href="/tags/WWDC/">WWDC 系列</a></p>
          </div>
<hr />
<h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2>
<h3 id="没收到确认邮件"><a class="markdownIt-Anchor" href="#没收到确认邮件"></a> 没收到确认邮件？</h3>
<ol>
<li>检查垃圾邮件</li>
<li>如果开发者账号是 iCloud 账号，到苹果开发者官网去领（这是个 Bug）</li>
<li>发邮件问苹果什么情况</li>
</ol>
<h3 id="我之前抽奖买的票怎么办"><a class="markdownIt-Anchor" href="#我之前抽奖买的票怎么办"></a> 我之前抽奖买的票怎么办？</h3>
<p>听别人说可以退，发邮件给苹果说明情况，会帮你解决的。当然也有人选择给女朋友（当然你要先有一个女朋友）。虽然一般来说是不能转让的，比如奖学金的票就肯定不能转，但是苹果允许在通知它以后把自己买的票在团队里用。</p>
<blockquote><p>Tickets may not be sold, resold, bartered, auctioned, or transferred in any way. As an exception to the foregoing, requests to transfer tickets among eligible members of the same team may be submitted to Apple for consideration at <a href="mailto:wwdc@apple.com">wwdc@apple.com</a>. Apple reserves the right to reject any transfer requests.</p>
<footer><strong>Apple</strong><cite><a href="https://developer.apple.com/wwdc/policy/" target="_blank" rel="noopener">WWDC 2017 Registration and Attendance Policy</a></cite></footer></blockquote>
<h3 id="xcode-83-的-bug"><a class="markdownIt-Anchor" href="#xcode-83-的-bug"></a> Xcode 8.3 的 Bug</h3>
<p>就是在交稿之前发布的新版本，偏偏 Playground 出了问题，论坛赶紧发布<a href="https://forums.developer.apple.com/message/219665#219665" target="_blank" rel="noopener">补救措施</a></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
      </tags>
  </entry>
  <entry>
    <title>WWDC17 奖学金项目</title>
    <url>/2017/04/03/wwdc17-scholarship/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://cloud.githubusercontent.com/assets/10842684/24595546/7968d9de-1805-11e7-9283-df85393876c5.png" alt="" /></p>
<p>老实交代，真的是最后几分钟交上去的，紧张的不得了。提交的时候还出了错，让重新登录账号，重新输入信息。那个时候整个人都是慌的，成功提交完了之后人都还在发抖。最后竟然选中了，算是了却了个多年（那个，你又没活那么久）的心愿吧，欣喜如狂。</p>
<a id="more"></a>
<p>看到 WWDC 的新闻出来了，马上就去看今年 Scholarship 的题目。本来都觉得自己没什么好 App 不准备参加的，结果今年苹果不按套路出牌，不交 app，交 playground。想起来之前有个没有完全实现的 <a href="https://github.com/ApolloZhu/Swifty-Karel" target="_blank" rel="noopener">Swifty Karel</a> 可以用，正好 playground 还能帮我解决编译的问题。</p>
<p>Karel 是斯坦福 <a href="https://web.stanford.edu/class/cs106a/" target="_blank" rel="noopener">CS106A</a> 课程很早开始就用来引导学生学习 Java 的工具，<a href="https://web.stanford.edu/class/cs106a/resources/karel-the-robot-learns-java.pdf" target="_blank" rel="noopener">Karel the Robot Learns Java</a> 一书中有比较全面的介绍。感觉和 Swift Playgrounds 教程几乎没有区别；唯一区别就是，一个是萌萌哒的 3D，一个是像素风的 2D。</p>
<h2 id="改进"><a class="markdownIt-Anchor" href="#改进"></a> 改进</h2>
<p>最后因为时间不够了，其实交上去的 playground 并不算美观，除非 Apple（让我）继续改进，就算选中也不可能拿去展示。我们先来定个小目标，列个<a href="https://github.com/ApolloZhu/Swifty-Karel/issues/1" target="_blank" rel="noopener">改进清单</a>：</p>
<ul>
<li>[x] 基本函数介绍</li>
<li>[x] <code>Playground.current</code> 的配置</li>
<li>[x] 自定义 <code>ColorScheme</code></li>
<li>[x] <code>Playground.current</code> 的导出</li>
<li>[x] 首页 <code>&quot;Hello WWDC17&quot;</code></li>
<li>[x] 斯坦福 pdf 里的案例</li>
<li>[ ] TOC，页眉页脚，LICENSE</li>
<li>[ ] README</li>
</ul>
<h2 id="忏悔"><a class="markdownIt-Anchor" href="#忏悔"></a> 忏悔</h2>
<p>因为对 SpriteKit 一点也不熟悉，只好用 UIView 和 Timer 来搞动画。其实如果有空可以熟悉一下游戏引擎。之前因为宣誓尽量不开发游戏，加上尝试 SpriteKit 受挫，基本就没动过。现在看来游戏引擎也不是只能开发游戏，还能作为一种展示 UI 的手段。不过改为用 SpriteKit 实现只怕是劳神费力，除非有什么要紧的 bug，否则多半是不会考虑的。</p>
<p>说实话现在还有个不怎么起眼的 bug。因为乱用 Singleton，导致现在 WorldModel 不走 liveView 都展示不出 Karel 来。希望能在写 README 之前解决这个问题。</p>
<h2 id="致谢"><a class="markdownIt-Anchor" href="#致谢"></a> 致谢</h2>
<p>谢谢初中的徐喜元老师当年破例让我在 NOIP 竞赛班旁听；谢谢老司机 JD 同学领我入门，时刻激励着我不断学习；谢谢父母对我编程的支持；感谢所有英语老师给我这一切的基础。最后我还希望感谢蔡昕老师，是他的话语时刻警醒着我不能做“留洋的泡沫”，同时这里也希望请他原谅我的不告而别。</p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>WWDC17</tag>
        <tag>WWDC</tag>
        <tag>Stanford</tag>
      </tags>
  </entry>
  <entry>
    <title>近血亲，越血腥</title>
    <url>/2017/03/24/bloody-blood/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>The near in blood, the nearer bloody.</p>
<footer><strong>William Shakespeare</strong><cite>Macbeth</cite></footer></blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>translation</tag>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>笑里藏刀</title>
    <url>/2017/03/24/daggers-in-smiles/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>There’s daggers in men’s smiles.</p>
<footer><strong>William Shakespeare</strong><cite>Macbeth</cite></footer></blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>translation</tag>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS 下编译 Synergy</title>
    <url>/2017/03/23/building-synergy/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://symless.com/synergy" target="_blank" rel="noopener">Synergy</a> 是一款跨平台多电脑共享一套鼠标键盘的利器，可惜正常下载要收费。曾经有段时间可以免费下<a href="https://symless.com/nightly" target="_blank" rel="noopener">内测版</a>，但是现在也不行了。不过作为<a href="https://github.com/symless/synergy" target="_blank" rel="noopener">开源</a>软件，我们可以自己编译。此编译指南<strong>应该</strong>适用于 macOS 10.10 及以上，但是***就算编译正常，还是什么都显示不出来***。</p>
<a id="more"></a>
<h2 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h2>
<ol>
<li>安装 <a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a></li>
<li>从 Mac App Store 下载 <a href="https://itunes.apple.com/us/app/xcode/id497799835" target="_blank" rel="noopener">Xcode</a>
<ol>
<li>打开 Xcode, 选择菜单栏中的 Xcode &gt; Preferences &gt; Locations</li>
<li>在 Command Line Tools 中选择一个版本</li>
</ol>
</li>
<li>安装 cmake, qt5</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">brew install cmake</span><br><span class="line">brew install qt5</span><br></pre></td></tr></table></figure>
<h2 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h2>
<ol>
<li>下载 synergy</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/symless/synergy.git;<span class="built_in">cd</span> synergy</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>修正 <code>ext/toolchain/commands1.py</code> 文件中的 <a href="https://github.com/symless/synergy/issues/4572" target="_blank" rel="noopener">bug</a> 和 <a href="https://github.com/symless/synergy/pull/5826" target="_blank" rel="noopener">bug</a></li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">""</span> <span class="string">"s:frameworkRootDir = .*$:frameworkRootDir = \"<span class="variable">$(which qmake | sed "s/bin.*$/Frameworks/")</span>\":"</span> ext/toolchain/commands1.py</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">""</span> <span class="string">"s:Contents/Info.plist:Resources/Info.plist:"</span> ext/toolchain/commands1.py</span><br><span class="line">sed -i <span class="string">""</span> <span class="string">"/self.move/d"</span> ext/toolchain/commands1.py</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>配置参数</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./hm.sh conf -g2 --mac-sdk $(sw_vers -productVersion | sed <span class="string">'s/.\d*.$//'</span>) --mac-identity <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>编译</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./hm.sh build</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>移动到 Applications 文件夹</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mv bin/Release/Synergy.app /Applications/Synergy.app</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>删除原文件</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..;rm -rf synergy</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<ol>
<li><a href="https://github.com/symless/synergy/wiki/Compiling#Mac_OS_X_1010_and_above" target="_blank" rel="noopener">Synergy compile instructions</a></li>
</ol>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法</title>
    <url>/2017/03/20/sorting-algorithm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>目前包括：选择排序，插入排序，归并排序</p>
<p>情景：将数组 <code>a</code> 中的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个整数从小到大排序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="选择排序"><a class="markdownIt-Anchor" href="#选择排序"></a> 选择排序</h2>
<p>比较次数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n(n-1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p>
<p>时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<h3 id="选择最小"><a class="markdownIt-Anchor" href="#选择最小"></a> 选择最小</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length-<span class="number">1</span>;i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> minIndex = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;a.length;j++)</span><br><span class="line">        <span class="keyword">if</span> (a[j] &lt; a[minIndex])</span><br><span class="line">            minIndex = j;</span><br><span class="line">    swap(a, minIndex, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="选择最大"><a class="markdownIt-Anchor" href="#选择最大"></a> 选择最大</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length-<span class="number">1</span>;i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> maxIndex = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;a.length-i;j++)</span><br><span class="line">        <span class="keyword">if</span> (a[j] &gt; a[maxIndex])</span><br><span class="line">            maxIndex = j;</span><br><span class="line">    swap(a, maxIndex, i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="插入排序"><a class="markdownIt-Anchor" href="#插入排序"></a> 插入排序</h2>
<p>时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;a.length;i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> cur = a[i], newIdx = i;</span><br><span class="line">    <span class="keyword">while</span> (newIdx &gt; <span class="number">0</span> &amp;&amp; a[newIdx-<span class="number">1</span>] &gt; cur)</span><br><span class="line">        a[newIdx] = a[--newIdx];</span><br><span class="line">    a[newIdx] = cur;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="归并排序"><a class="markdownIt-Anchor" href="#归并排序"></a> 归并排序</h2>
<p>时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mtext> </mtext><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\,logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">    mergeSort(a, <span class="number">0</span>, a.length-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> mid = (start+end)/<span class="number">2</span>,</span><br><span class="line">          i = start,</span><br><span class="line">          j = mid+<span class="number">1</span>,</span><br><span class="line">        len = end-start+<span class="number">1</span>,</span><br><span class="line">     temp[] = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line"></span><br><span class="line">    mergeSort(a, i, mid);</span><br><span class="line">    mergeSort(a, j, end);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;len;k++)</span><br><span class="line">        <span class="keyword">if</span> (j&gt;end || i&lt;=mid &amp;&amp; a[i]&lt;a[j])</span><br><span class="line">            temp[k] = a[i++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            temp[k] = a[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;len;k++)</span><br><span class="line">        a[start+k] = temp[k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>APCSA 易错点整理</title>
    <url>/2017/03/20/apcsa-traps/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>此文只包含对于本人来说死记硬背能提升做题速度的知识点，所有写过的代码见 <a href="https://github.com/ApolloZhu/APCSA" target="_blank" rel="noopener">APCSA</a></p>
<h2 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h2>
<blockquote>
<p>Q: A large Java program was tested extensively, and no errors were found. What can be concluded?</p>
</blockquote>
<blockquote>
<p>A: <strong>The program may have bugs.</strong></p>
</blockquote>
<a id="more"></a>
<p>Even after you tested –</p>
<ul>
<li>values from each range</li>
<li>all boundary values</li>
<li>values outside boundaries</li>
</ul>
<h2 id="读完-prepost-condition"><a class="markdownIt-Anchor" href="#读完-prepost-condition"></a> 读完 pre/post-condition</h2>
<p>这个要是读漏或者读错整个题都会错啊！而且很多时候可以简化代码，不用考虑那么全面。</p>
<h3 id="不要杞人忧天"><a class="markdownIt-Anchor" href="#不要杞人忧天"></a> 不要杞人忧天</h3>
<p>如果你是个非要用空格或是制表符的强迫症患者，这条一定要记住。对于我们这些完美主义者，就算题目给出的答案明显不可能完美地实现，但只要题目中说了 <strong>“implemented correctly”</strong>，请睁一只眼闭一只眼，千万不要和 College Board 计较。</p>
<h2 id="整数除法"><a class="markdownIt-Anchor" href="#整数除法"></a> 整数除法</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.print(<span class="number">3</span>/<span class="number">4</span>); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure>
<h2 id="四舍五入"><a class="markdownIt-Anchor" href="#四舍五入"></a> 四舍五入</h2>
<p>强转 int 直接 truncate 小数部分，不分正负</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">round</span><span class="params">(<span class="keyword">double</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>)(num + (num &gt; <span class="number">0</span> ? .<span class="number">5</span> : -.<span class="number">5</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h1 id="常识"><a class="markdownIt-Anchor" href="#常识"></a> 常识</h1>
<h2 id="请在答案中使用这个函数的-flag"><a class="markdownIt-Anchor" href="#请在答案中使用这个函数的-flag"></a> 请在答案中使用这个函数的 flag</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">aMethod</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">/* implementation not shown */</span> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="随机数"><a class="markdownIt-Anchor" href="#随机数"></a> 随机数</h2>
<p><code>Math.random()</code> 返回 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 中任一 <code>double</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">E <span class="title">pick</span><span class="params">(E[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> array[(<span class="keyword">int</span>)(Math.random()*array.length)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">E <span class="title">pick</span><span class="params">(List&lt;E&gt; list)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> list.get((<span class="keyword">int</span>)(Math.random()*list.size()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="start-end-之间随机整数"><a class="markdownIt-Anchor" href="#start-end-之间随机整数"></a> start - end 之间随机整数</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">random</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> end, <span class="keyword">boolean</span> includeEnd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>)(Math.random()*(end-start+(includeEnd?<span class="number">1</span>:<span class="number">0</span>))+start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Bilibili 和 网易云音乐的正确使用方法</title>
    <url>/2017/03/19/bilibili-netease-relationship/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center"><p>然而现在的情况是：我用网易云音乐找番，用bilibili找歌-_-||</p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>anime</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS 重定向域名到 Hexo 本地服务器</title>
    <url>/2017/03/18/redirecting-domain-to-local-hexo-server-on-macOS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>每次把网站截屏发朋友圈，被别人发现地址栏是 <code>localhost:4000</code>，稍微觉得有点 low。也是，怎么也得展示个像样点的域名吧。所以在网上查了查，整理收集如下。我对网络基本不了解，望各位路过的大神们指点一二。</p>
<a id="more"></a>
<h2 id="修改-hosts"><a class="markdownIt-Anchor" href="#修改-hosts"></a> 修改 hosts</h2>
<p>假设我们很有逼格的域名是 <code>example.com</code></p>
<p>通过 <code>/etc/hosts</code> 把 <code>example.com</code> 映射到 <code>10.0.0.1</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">10.0.0.1 example.com</span><br></pre></td></tr></table></figure>
<h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2>
<p>一下步骤每次<strong>重启都要再执行一遍</strong></p>
<p>在回环接口（loopback interface）新建一个地址，<code>10.0.0.1</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ifconfig lo0 <span class="built_in">alias</span> 10.0.0.1</span><br></pre></td></tr></table></figure>
<p><code>-e</code> 启动防火墙（Packet Filter），<code>-f</code> 载入后面的规则 —— 将所有到 <code>10.0.0.1:80</code>（HTTP 默认端口）的连接转发到 <code>127.0.0.1:4000</code>（hexo 默认本地服务器地址）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"rdr pass on lo0 inet proto tcp from any to 10.0.0.1 port 80 -&gt; 127.0.0.1 port 4000"</span> | sudo pfctl -ef -</span><br></pre></td></tr></table></figure>
<p>完成，现在可以在浏览器中输入 <code>example.com</code> 来代替了！</p>
<hr />
<h2 id="还原"><a class="markdownIt-Anchor" href="#还原"></a> 还原</h2>
<p>重启电脑，或是</p>
<p>删除新建的地址，重置防火墙，清空本地 DNS 缓存</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo ifconfig lo0 -<span class="built_in">alias</span> 10.0.0.1</span><br><span class="line">sudo pfctl -F all -f /etc/pf.conf</span><br><span class="line">dscacheutil -flushcache</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<ol>
<li><a href="https://serverfault.com/questions/102416/iptables-equivalent-for-mac-os-x/" target="_blank" rel="noopener">iptables equivalent for mac os x - StackExchange</a></li>
</ol>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>macOS</tag>
        <tag>server</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Yearglass／年轮项目</title>
    <url>/2017/03/06/yearglass-project/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote class="blockquote-center"><p>愿能为君，暂留光阴</p>
<div id="yearglass-web"></div></blockquote>
<script>
	const today = new Date();
	const year = today.getFullYear();
	const thisYear = new Date(year, 0, 1);
	const nextYear = new Date(year + 1, 0, 1);
	const oneDay = today.getMilliseconds();
	const passed = Math.floor((today - thisYear) / oneDay);
	const total = Math.floor((nextYear - thisYear) / oneDay);
	const percentage = passed / total;
	const space = 15;

	function repeat(s, n) {
		return new Array(Math.floor(n + 1)).join(s);
	}

	document.getElementById("yearglass-web").innerHTML = year + " 年已过去 " + Math.floor(percentage * 100) + "% [" + repeat("▇", space * percentage) + repeat("\\\\", space * (1 - percentage)) + "]";
</script>
<p>For the English Version of this documentation, please visit: <a href="https://apollozhu.github.io/yearglass/">yearglass</a></p>
<a id="more"></a>
<p>在即刻／微博／推特上看到一个有趣的提醒，<a href="https://twitter.com/year_progress" target="_blank" rel="noopener">year_progress</a>，总的来说就是显示今年过去了的百分比。于是顺手就用 Swift 实现了一个终端的小程序：<a href="https://github.com/ApolloZhu/yearglass" target="_blank" rel="noopener">年轮</a>。发布的时候 2017 年才过去 17% 呢。</p>
<h2 id="基本"><a class="markdownIt-Anchor" href="#基本"></a> 基本</h2>
<h3 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ApolloZhu/yearglass.git</span><br></pre></td></tr></table></figure>
<h3 id="更新"><a class="markdownIt-Anchor" href="#更新"></a> 更新</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> yearglass;git pull;<span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure>
<h3 id="卸载"><a class="markdownIt-Anchor" href="#卸载"></a> 卸载</h3>
<p>卸载完成后还需手动删除配置，请参考下文。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rm -rf yearglass</span><br></pre></td></tr></table></figure>
<h2 id="terminal-配置"><a class="markdownIt-Anchor" href="#terminal-配置"></a> Terminal 配置</h2>
<h3 id="加入到终端启动列表"><a class="markdownIt-Anchor" href="#加入到终端启动列表"></a> 加入到终端启动列表</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"swift ~/yearglass/main.swift"</span> &gt;&gt; .bash_profile</span><br></pre></td></tr></table></figure>
<h3 id="注册-yearglass-命令"><a class="markdownIt-Anchor" href="#注册-yearglass-命令"></a> 注册 <code>yearglass</code> 命令</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"alias yearglass='swift ~/yearglass/main.swift'"</span> &gt;&gt; .bash_profile</span><br></pre></td></tr></table></figure>
<h3 id="删除配置"><a class="markdownIt-Anchor" href="#删除配置"></a> 删除配置</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">''</span> <span class="string">'/swift .*yearglass.main.swift/d'</span> .bash_profile</span><br></pre></td></tr></table></figure>
<h2 id="oh-my-zsh-配置"><a class="markdownIt-Anchor" href="#oh-my-zsh-配置"></a> Oh My Zsh 配置</h2>
<p>本人并不了解 zsh 怎么用，如有疏漏还请大家指正。</p>
<h3 id="加入到终端启动列表-2"><a class="markdownIt-Anchor" href="#加入到终端启动列表-2"></a> 加入到终端启动列表</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"swift ~/yearglass/main.swift"</span> &gt;&gt; .zshrc</span><br></pre></td></tr></table></figure>
<h3 id="注册-yearglass-命令-2"><a class="markdownIt-Anchor" href="#注册-yearglass-命令-2"></a> 注册 <code>yearglass</code> 命令</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"alias yearglass='swift ~/yearglass/main.swift'"</span> &gt;&gt; .zshrc</span><br></pre></td></tr></table></figure>
<h3 id="删除配置-2"><a class="markdownIt-Anchor" href="#删除配置-2"></a> 删除配置</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">''</span> <span class="string">'/swift .*yearglass.main.swift/d'</span> .zshrc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>macOS</tag>
        <tag>CLI</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Swift 工程中使用 OpenGL 框架 GLFW 的配置过程</title>
    <url>/2016/11/14/configuring-glfw-for-Swift-in-Xcode/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>苹果丢到了 OpenGL 全面推 Metal，但我当初想要学 OpenGL，找到了一个使用 Swift 语言的教程 —— <a href="https://github.com/SwiftGL" target="_blank" rel="noopener">SwiftGL</a>，主要内容是使用 Swift 3 在 macOS Sierra (10.12) 上开发基于 glfw3 的 GUI 程序（虽然是通过命令行调起的）。可惜最后还是没能坚持下来，但当时摸爬滚打，翻了不少博客，甚至还差点把 SwiftGL 的库用 Swift 3 重写，最后才研究出来的出来的配置方法丢了就太可惜了，特此记录分享。</p>
<a id="more"></a>
<h2 id="编译-glfw"><a class="markdownIt-Anchor" href="#编译-glfw"></a> 编译 glfw</h2>
<ul>
<li>下载 <a href="https://codeload.github.com/glfw/glfw/zip/master" target="_blank" rel="noopener">GitHub 上的 glfw</a>，解压</li>
<li>打开 <a href="https://cmake.org/" target="_blank" rel="noopener">CMake</a> App 准备编译</li>
<li><em>Browse Source</em> 选择 <code>glfw-master</code></li>
<li><em>Browse Build</em> 随便选择一个临时的文件夹</li>
<li>点击 <em>Configure</em>, 从 <em>generator</em> 的下拉列表中的选择 <em>Xcode</em>，点击 <em>Done</em></li>
<li>CMake 处理完（Configuring done）之后再点一遍 <em>Configure</em></li>
<li>点击 <em>Generate</em>，点击 <em>Open Project</em></li>
<li>Xcode 中把 Scheme 换为 <code>install</code>，编译并运行</li>
</ul>
<h2 id="配置工程"><a class="markdownIt-Anchor" href="#配置工程"></a> 配置工程</h2>
<p>完成之后，打开自己的工程文件。</p>
<div class="note warning">
            <p>以下操作每个工程只需要 <em><strong>一次</strong></em>。加入的文件可以在 Target 之间共享。</p>
          </div>
<ul>
<li>打开 Finder, <code>Shift</code>+<code>Command</code>+<code>G</code>，输入 <code>/usr/local/lib/libglfw3.a</code>，确认</li>
<li>把文件拖进工程
<ul>
<li>copy items if needed</li>
<li>create groups</li>
<li>添加</li>
</ul>
</li>
</ul>
<div class="note danger">
            <p>针对每个工程中每个需要 <code>glfw</code> 的 Target，<em><strong>都需要</strong></em> 完成下面的步骤。</p>
          </div>
<ul>
<li>切换到 <em>Build Settings</em>，搜索 <code>sea</code></li>
<li>把 <code>/usr/local/include</code> 添加到 <em>Header Search Paths</em></li>
<li>把 <code>/usr/local/lib</code> 添加到 <em>Library Search Paths</em></li>
<li>如果没有桥接头文件（Bridging Header），创建一个</li>
<li>把以下内容添加到桥接头文件中</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3native.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLKit/GLKit.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<div class="note success">
            <p><code>glfw</code> 配置完毕，享受你 Swifty 的 OpenGL 之旅吧。</p>
          </div>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>Swift</tag>
        <tag>tips</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>从坏掉的 Mac 中备份数据</title>
    <url>/2016/04/10/backup-dead-mac/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>看到这篇文章的你，请以后记得使用 TimeMachine。然后，只要你的硬盘没有被砸坏一类的，数据还能访问，我这个方法你都可以试试</p>
<a id="more"></a>
<details>
<summary>要是你对我的电脑出了啥问题感兴趣的话，可以展开来看看，否则就不耽误你时间了。</summary>
<p>我 Boot Camp 分区完准备装 Windows，但不知道为啥失败了，新建的分区还删不掉，所以我决定自己把 Windows 分区删了重新试一遍。这下好了，还是通过 Boot Camp 把镜像写到 32G U盘来安装 Windows，但就打死都不能分区；尝试我自己使用磁盘工具分区，它就提示说错误代码 8。那我就想，会不会安全模式能解决问题？心理窃喜，按住 <code>shift</code> 开机，可还没有显示登录界面就直接黑了。没办法，<code>command</code> + <code>R</code> 进恢复模式修复磁盘，结果它也没辙。恰巧遇到 Genius Bar 偷懒（昨天最晚就开到 17:15，今天不上班），只好开始各种搜索。最后找到了用 FireWire 连接的方法，但关键是哪里又第二台 Mac……</p>
<p>电脑可以换，数据不能丢！仗着还能访问里面的文件，我决定靠自己捣鼓。</p>
<blockquote>
<p>未来的我：你以后还会把硬盘各种玩坏，把修复过程记下来算是还有自知之明。</p>
</blockquote>
</details>
<h2 id="目标磁盘模式"><a class="markdownIt-Anchor" href="#目标磁盘模式"></a> <a href="https://support.apple.com/HT201462" target="_blank" rel="noopener">目标磁盘模式</a></h2>
<p>如果你能找到另一台 Mac 的话，恭喜你，你只需要再有一条 <a href="https://support.apple.com/HT1661" target="_blank" rel="noopener">FireWire</a>/Thunderbolt/USB-C 的线就可以快速地把数据导出了！连接好两台 Mac，并在你坏掉的电脑开机时按住 <code>T</code> 键，就会发现它作为普通的硬盘显示到另一台 Mac 上了！</p>
<hr />
<h2 id="单用户模式"><a class="markdownIt-Anchor" href="#单用户模式"></a> 单用户模式</h2>
<p>我默认为你已经看过了 <a href="https://apollozhu.github.io/2018/04/26/combat-mac-startup-issues/">其他抢救措施</a>，正如那里面所说的，开机时同时按住 <code>command</code> 和 <code>S</code> 键进入单用户模式，等待满屏飞过奇怪的代码。</p>
<div class="note success">
            <p>之后我们将开始敲命令。如果不小心执行了奇怪的命令，你可以通过按下 <code>control</code> 和 <code>C</code> 键来终止该命令。</p>
          </div>
<h2 id="驱动-usb"><a class="markdownIt-Anchor" href="#驱动-usb"></a> 驱动 USB</h2>
<p>在插入U盘之前，我们先先确认已经存在的磁盘。输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -l /dev/disk*</span><br></pre></td></tr></table></figure>
<p>你会看到例如这样的输出：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">disk0</span><br><span class="line">disk0s1</span><br><span class="line">disk0s2</span><br></pre></td></tr></table></figure>
<p>接着我们插入 USB 设备然后再输入一次</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -l /dev/disk*</span><br></pre></td></tr></table></figure>
<p>就可以看到多出来的磁盘了：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">disk0</span><br><span class="line">disk0s1</span><br><span class="line">disk0s2</span><br><span class="line">disk1</span><br><span class="line">disk1s1</span><br></pre></td></tr></table></figure>
<p>上面的例子中，<code>disk1s1</code> 就是我们的 USB 设备。</p>
<details>
<summary>但我这里什么都没有多出来啊？</summary>
<p>我没试过，不过可以尝试下网络上提到的方法。一条条输入下面的命令，直到出现为止：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">launchctl load /System/Library/LaunchDaemon/com.apple.disk*</span><br><span class="line">launchctl load /System/Library/LaunchDaemon/com.apple.kextd.plist</span><br><span class="line">launchctl load /System/Library/LaunchDaemon/com.apple.notifyd.plist</span><br><span class="line">launchctl load /System/Library/LaunchDaemon/com.apple.configd.plist</span><br><span class="line">launchctl load /System/Library/LaunchDaemon/com.apple.DirectoryServices.plist</span><br></pre></td></tr></table></figure>
</details>
<h2 id="装载-usb-设备"><a class="markdownIt-Anchor" href="#装载-usb-设备"></a> 装载 USB 设备</h2>
<p>接下来我们确认 USB 设备类型。如果按上面的例子 <code>disk1s1</code>，我们输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fstyp /dev/disk1s1</span><br></pre></td></tr></table></figure>
<p>我这里输出的是:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msdos</span><br></pre></td></tr></table></figure>
<p>你可能会不一样，不过没有关系，先启用读写模式然后创建临时文件夹。输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mount -uw&#x2F;</span><br><span class="line">mkdir &#x2F;az</span><br></pre></td></tr></table></figure>
<p>接着把 USB 设备装载到 <code>az</code> 这个临时文件夹里。如果按上面例子的 <code>disk1s1</code> 和 <code>msdos</code>，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mount -t msdos &#x2F;dev&#x2F;disk1s1 &#x2F;az</span><br></pre></td></tr></table></figure>
<h2 id="复制文件夹"><a class="markdownIt-Anchor" href="#复制文件夹"></a> 复制文件夹</h2>
<div class="note warning">
            <p>注意如果文件夹名字里面有空格，要在空格前面加一个反斜杠（\）</p>
          </div>
<p>输入 <code>cp -pr 源文件夹 /az/</code> 就可以把它拷贝到 USB 设备上了。举个例子，我们把桌面复制过来：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -pr /Users/你的用户名/Desktop /az/</span><br></pre></td></tr></table></figure>
<p>如果你不知道文件在什么地方的话，输入 <code>ls</code> 会显示当前目录下所有的文件和文件夹，<code>cd 文件夹名</code> 可以进入那个文件夹，<code>cd ..</code> 可以返回上级文件夹。你还可以试着按 <code>tab</code> 键，它可能会帮你自动补全文件的名称。</p>
<div class="note success">
            <p>要创建 zip 压缩包的话通过输入 <code>zip -rX 文件名.zip 要压缩的文件夹</code></p>
          </div>
<h2 id="收工"><a class="markdownIt-Anchor" href="#收工"></a> 收工</h2>
<p>推出磁盘并关机。输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /az/</span><br><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure>
<p>最后祝您身体健康。</p>
]]></content>
      <categories>
        <category>瞎捣鼓</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>macOS</tag>
      </tags>
  </entry>
</search>
